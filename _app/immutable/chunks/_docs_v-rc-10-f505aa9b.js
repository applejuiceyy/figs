import{_ as e}from"./preload-helper-aa6bc0ce.js";const a={types:{math:{name:"math",description:"figura.docs.math",methods:[{name:"map",description:"figura.docs.math.map",parameters:[[{name:"value",type:"Number"},{name:"oldMin",type:"Number"},{name:"oldMax",type:"Number"},{name:"newMin",type:"Number"},{name:"newMax",type:"Number"}]],returns:["Number"],static:!0},{name:"round",description:"figura.docs.math.round",parameters:[[{name:"value",type:"Number"}]],returns:["Number"],static:!0},{name:"sign",description:"figura.docs.math.sign",parameters:[[{name:"value",type:"Number"}]],returns:["Number"],static:!0},{name:"clamp",description:"figura.docs.math.clamp",parameters:[[{name:"value",type:"Number"},{name:"min",type:"Number"},{name:"max",type:"Number"}]],returns:["Number"],static:!0},{name:"shortAngle",description:"figura.docs.math.short_angle",parameters:[[{name:"from",type:"Number"},{name:"to",type:"Number"}]],returns:["Number"],static:!0},{name:"lerpAngle",description:"figura.docs.math.lerp_angle",parameters:[[{name:"a",type:"Number"},{name:"b",type:"Number"},{name:"t",type:"Number"}]],returns:["Number"],static:!0},{name:"lerp",description:"figura.docs.math.lerp",parameters:[[{name:"a",type:"Number"},{name:"b",type:"Number"},{name:"t",type:"Number"}],[{name:"a",type:"Vector2"},{name:"b",type:"Vector2"},{name:"t",type:"Number"}],[{name:"a",type:"Vector3"},{name:"b",type:"Vector3"},{name:"t",type:"Number"}],[{name:"a",type:"Vector4"},{name:"b",type:"Vector4"},{name:"t",type:"Number"}],[{name:"a",type:"Vector5"},{name:"b",type:"Vector5"},{name:"t",type:"Number"}],[{name:"a",type:"Vector6"},{name:"b",type:"Vector6"},{name:"t",type:"Number"}]],returns:["Number","Vector2","Vector3","Vector4","Vector5","Vector6"],static:!0}],fields:[{name:"playerScale",description:"figura.docs.math.player_scale",type:"Number",editable:!0},{name:"worldScale",description:"figura.docs.math.world_scale",type:"Number",editable:!0}],metatable:{}},globals:{name:"globals",description:"figura.docs.globals",methods:[{name:"log",description:"figura.docs.globals.log",parameters:[[{name:"...",type:"AnyType"}]],returns:["String"],static:!0,example:{content:'log(60, "abc")',author:"applejuice"}},{name:"print",description:"figura.docs.globals.print",parameters:[[{name:"...",type:"AnyType"}]],returns:["String"],static:!0,example:{content:'print(60, "abc")',author:"ChloeSpacedOut"}},{name:"listFiles",description:"figura.docs.globals.list_files",parameters:[[],[{name:"folder",type:"String"}],[{name:"folder",type:"String"},{name:"subFolders",type:"Boolean"}]],returns:["String[]","String[]","String[]"],static:!0},{name:"printTable",description:"figura.docs.globals.print_table",parameters:[[{name:"table",type:"Table"}],[{name:"javaObject",type:"Userdata"}],[{name:"table",type:"Table"},{name:"maxDepth",type:"Integer"}],[{name:"javaObject",type:"Userdata"},{name:"maxDepth",type:"Integer"}],[{name:"table",type:"Table"},{name:"maxDepth",type:"Integer"},{name:"silent",type:"Boolean"}],[{name:"javaObject",type:"Userdata"},{name:"maxDepth",type:"Integer"},{name:"silent",type:"Boolean"}]],returns:["String","String","String","String","String","String"],static:!0,example:{content:`local table = {'string',{'tableception'}}

printTable(table,2)`,author:"ChloeSpacedOut"}},{name:"logJson",description:"figura.docs.globals.log_json",parameters:[[{name:"json",type:"String"}]],returns:["String"],static:!0,example:{content:`logJson('{"text":"meow ^^","color":"#a672ef"}')`,author:"ChloeSpacedOut"}},{name:"logTable",description:"figura.docs.globals.log_table",parameters:[[{name:"table",type:"Table"}],[{name:"javaObject",type:"Userdata"}],[{name:"table",type:"Table"},{name:"maxDepth",type:"Integer"}],[{name:"javaObject",type:"Userdata"},{name:"maxDepth",type:"Integer"}],[{name:"table",type:"Table"},{name:"maxDepth",type:"Integer"},{name:"silent",type:"Boolean"}],[{name:"javaObject",type:"Userdata"},{name:"maxDepth",type:"Integer"},{name:"silent",type:"Boolean"}]],returns:["String","String","String","String","String","String"],static:!0,example:{content:`local table = {'string',{'tableception'}}

logTable(table,2)`,author:"ChloeSpacedOut"}},{name:"printJson",description:"figura.docs.globals.print_json",parameters:[[{name:"json",type:"String"}]],returns:["String"],static:!0,example:{content:`printJson('{"text":"meow ^^","color":"#a672ef"}')`,author:"ChloeSpacedOut"}},{name:"require",description:"figura.docs.globals.require",parameters:[[{name:"scriptName",type:"String"}]],returns:["AnyType"],static:!0,example:{content:`local library = require("lib.parser") 
-- this will import a file`,author:"ChloeSpacedOut"}}],fields:[{name:"vec",description:"figura.docs.globals.vec",type:"Function",editable:!0},{name:"action_wheel",description:"figura.docs.globals.action_wheel",type:"ActionWheelAPI",editable:!0},{name:"animations",description:"figura.docs.globals.animations",type:"Table",editable:!0},{name:"figuraMetatables",description:"figura.docs.globals.figura_metatables",type:"Table",editable:!0},{name:"nameplate",description:"figura.docs.globals.nameplate",type:"NameplateAPI",editable:!0},{name:"world",description:"figura.docs.globals.world",type:"WorldAPI",editable:!0},{name:"vanilla_model",description:"figura.docs.globals.vanilla_model",type:"VanillaModelAPI",editable:!0},{name:"models",description:"figura.docs.globals.models",type:"ModelPart",editable:!0},{name:"player",description:"figura.docs.globals.player",type:"PlayerAPI",editable:!0},{name:"events",description:"figura.docs.globals.events",type:"EventsAPI",editable:!0},{name:"keybind",description:"figura.docs.globals.keybind",type:"KeybindAPI",editable:!0},{name:"vectors",description:"figura.docs.globals.vectors",type:"VectorsAPI",editable:!0},{name:"matrices",description:"figura.docs.globals.matrices",type:"MatricesAPI",editable:!0},{name:"client",description:"figura.docs.globals.client",type:"ClientAPI",editable:!0},{name:"host",description:"figura.docs.globals.host",type:"HostAPI",editable:!0},{name:"avatar",description:"figura.docs.globals.avatar",type:"AvatarAPI",editable:!0},{name:"particles",description:"figura.docs.globals.particles",type:"ParticleAPI",editable:!0},{name:"sounds",description:"figura.docs.globals.sounds",type:"SoundAPI",editable:!0},{name:"renderer",description:"figura.docs.globals.renderer",type:"RendererAPI",editable:!0},{name:"user",description:"figura.docs.globals.user",type:"EntityAPI",editable:!0},{name:"pings",description:"figura.docs.globals.pings",type:"PingAPI",editable:!0},{name:"textures",description:"figura.docs.globals.textures",type:"TextureAPI",editable:!0},{name:"config",description:"figura.docs.globals.config",type:"ConfigAPI",editable:!0},{name:"type",description:"figura.docs.globals.type",type:"Function",editable:!0}],metatable:{}},ActionWheelAPI:{name:"ActionWheelAPI",description:"figura.docs.action_wheel",methods:[{name:"execute",description:"figura.docs.action_wheel.execute",parameters:[[],[{name:"index",type:"Integer"}],[{name:"index",type:"Integer"},{name:"rightClick",type:"Boolean"}]],returns:["nil","nil","nil"],static:!1,example:{content:`examplePage = action_wheel:createPage()
action_wheel:setPage(examplePage)
examplePage:newAction(1):onRightClick(function() log('chat spam :3') end)

events.TICK:register(function()
  action_wheel:execute(1,true)
end)
-- this will only run if the action wheel is open`,author:"ChloeSpacedOut"}},{name:"isEnabled",description:"figura.docs.action_wheel.is_enabled",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`examplePage = action_wheel:createPage()
action_wheel:setPage(examplePage)

events.TICK:register(function()
  if action_wheel:isEnabled() then
    log("action wheel's is open!")
  end
end)`,author:"ChloeSpacedOut"}},{name:"getSelected",description:"figura.docs.action_wheel.get_selected",parameters:[[]],returns:["Integer"],static:!1,example:{content:`examplePage = action_wheel:createPage()
action_wheel:setPage(examplePage)
for slot = 1,8 do
  examplePage:newAction(slot)
end

events.TICK:register(function()
  log(action_wheel:getSelected())
end)
-- returns even if the action wheel is closed`,author:"ChloeSpacedOut"}},{name:"getCurrentPage",description:"figura.docs.action_wheel.get_current_page",parameters:[[]],returns:["Page | nil"],static:!1},{name:"createPage",description:"figura.docs.action_wheel.create_page",parameters:[[],[{name:"title",type:"String"}]],returns:["Page","Page"],static:!1,example:{content:"action_wheel:createPage('examplePage')",author:"ChloeSpacedOut"}},{name:"setPage",description:"figura.docs.action_wheel.set_page",parameters:[[{name:"pageTitle",type:"String"}],[{name:"page",type:"Page"}]],returns:["nil","nil"],static:!1,example:{content:`examplePage = action_wheel:createPage()
action_wheel:setPage(examplePage)`,author:"ChloeSpacedOut"}},{name:"getPage",description:"figura.docs.action_wheel.get_page",parameters:[[{name:"pageTitle",type:"String"}]],returns:["Page | nil"],static:!1,example:{content:`action_wheel:createPage('examplePage')
log(action_wheel:getPage('examplePage'))`,author:"ChloeSpacedOut"}},{name:"createAction",description:"figura.docs.action_wheel.create_action",parameters:[[]],returns:["Action"],static:!1}],fields:[{name:"leftClick",description:"figura.docs.action_wheel.left_click",type:"Function",editable:!0,example:{content:`examplePage = action_wheel:createPage('pageName')
  action_wheel:setPage(examplePage)

function action_wheel.leftClick()
  log('you just left clicked while in the action wheel!')
end`,author:"ChloeSpacedOut"}},{name:"rightClick",description:"figura.docs.action_wheel.right_click",type:"Function",editable:!0,example:{content:`examplePage = action_wheel:createPage('pageName')
  action_wheel:setPage(examplePage)

function action_wheel.rightClick()
  log('you just left clicked while in the action wheel!')
end`,author:"ChloeSpacedOut"}},{name:"scroll",description:"figura.docs.action_wheel.scroll",type:"Function",editable:!0,example:{content:`examplePage = action_wheel:createPage('pageName')
action_wheel:setPage(examplePage)

function action_wheel.scroll(direction)
  log(direction)
end`,author:"ChloeSpacedOut"}}],category:"action_wheel",metatable:{}},Page:{name:"Page",description:"figura.docs.wheel_page",methods:[{name:"newAction",description:"figura.docs.wheel_page.new_action",parameters:[[],[{name:"index",type:"Integer"}]],returns:["Action","Action"],static:!1},{name:"setAction",description:"figura.docs.wheel_page.set_action",parameters:[[{name:"index",type:"Integer"},{name:"action",type:"Action"}]],returns:["nil"],static:!1},{name:"getAction",description:"figura.docs.wheel_page.get_action",parameters:[[{name:"index",type:"Integer"}]],returns:["Action"],static:!1,example:{content:"local action = myPage:getAction(1)",author:"applejuice"}}],fields:[],category:"action_wheel",metatable:{}},Action:{name:"Action",description:"figura.docs.wheel_action",methods:[{name:"color",description:"figura.docs.wheel_action.color",parameters:[[{name:"color",type:"Vector3"}],[{name:"r",type:"Number"},{name:"g",type:"Number"},{name:"b",type:"Number"}]],returns:["Action","Action"],static:!1},{name:"item",description:"figura.docs.wheel_action.item",parameters:[[{name:"item",type:"ItemStack"}],[{name:"item",type:"String"}]],returns:["Action","Action"],static:!1},{name:"title",description:"figura.docs.wheel_action.title",parameters:[[],[{name:"title",type:"String"}]],returns:["Action","Action"],static:!1},{name:"getTitle",description:"figura.docs.wheel_action.get_title",parameters:[[]],returns:["String"],static:!1},{name:"toggleTitle",description:"figura.docs.wheel_action.toggle_title",parameters:[[{name:"title",type:"String"}]],returns:["Action"],static:!1},{name:"hoverItem",description:"figura.docs.wheel_action.hover_item",parameters:[[{name:"item",type:"ItemStack"}],[{name:"item",type:"String"}]],returns:["Action","Action"],static:!1},{name:"getToggleTitle",description:"figura.docs.wheel_action.get_toggle_title",parameters:[[]],returns:["String"],static:!1},{name:"getToggleColor",description:"figura.docs.wheel_action.get_toggle_color",parameters:[[]],returns:["Vector3"],static:!1},{name:"hoverColor",description:"figura.docs.wheel_action.hover_color",parameters:[[{name:"color",type:"Vector3"}],[{name:"r",type:"Number"},{name:"g",type:"Number"},{name:"b",type:"Number"}]],returns:["Action","Action"],static:!1},{name:"toggleItem",description:"figura.docs.wheel_action.toggle_item",parameters:[[{name:"item",type:"ItemStack"}],[{name:"item",type:"String"}]],returns:["Action","Action"],static:!1},{name:"getHoverColor",description:"figura.docs.wheel_action.get_hover_color",parameters:[[]],returns:["Vector3"],static:!1},{name:"onToggle",description:"figura.docs.wheel_action.on_toggle",parameters:[[{name:"leftFunction",type:"Function"}]],returns:["Action"],static:!1},{name:"onScroll",description:"figura.docs.wheel_action.on_scroll",parameters:[[{name:"scrollFunction",type:"Function"}]],returns:["Action"],static:!1},{name:"toggleColor",description:"figura.docs.wheel_action.toggle_color",parameters:[[{name:"color",type:"Vector3"}],[{name:"r",type:"Number"},{name:"g",type:"Number"},{name:"b",type:"Number"}]],returns:["Action","Action"],static:!1},{name:"onLeftClick",description:"figura.docs.wheel_action.on_left_click",parameters:[[{name:"leftFunction",type:"Function"}]],returns:["Action"],static:!1,example:{content:`local myAction = myPage:newAction()

myAction:onLeftClick(function()
    log("Heheh I got Left Clicked!")
end)`,author:"applejuice",versions:["=rc-10"]}},{name:"toggled",description:"figura.docs.wheel_action.toggled",parameters:[[{name:"bool",type:"Boolean"}]],returns:["Action"],static:!1},{name:"onRightClick",description:"figura.docs.wheel_action.on_right_click",parameters:[[{name:"rightFunction",type:"Function"}]],returns:["Action"],static:!1,example:{content:`local myAction = myPage:newAction()

myAction:onRightClick(function()
    log("Heheh I got Right Clicked!")
end)`,author:"applejuice",versions:["=rc-10"]}},{name:"onUntoggle",description:"figura.docs.wheel_action.on_untoggle",parameters:[[{name:"rightFunction",type:"Function"}]],returns:["Action"],static:!1},{name:"isToggled",description:"figura.docs.wheel_action.is_toggled",parameters:[[]],returns:["Boolean"],static:!1},{name:"getColor",description:"figura.docs.wheel_action.get_color",parameters:[[]],returns:["Vector3"],static:!1}],fields:[{name:"leftClick",description:"figura.docs.wheel_action.left_click",type:"Function",editable:!0},{name:"rightClick",description:"figura.docs.wheel_action.right_click",type:"Function",editable:!0},{name:"toggle",description:"figura.docs.wheel_action.toggle",type:"Function",editable:!0},{name:"untoggle",description:"figura.docs.wheel_action.untoggle",type:"Function",editable:!0},{name:"scroll",description:"figura.docs.wheel_action.scroll",type:"Function",editable:!0}],category:"action_wheel",metatable:{}},Animation:{name:"Animation",description:"figura.docs.animation",methods:[{name:"priority",description:"figura.docs.animation.priority",parameters:[[{name:"priority",type:"Integer"}]],returns:["Animation"],static:!1},{name:"length",description:"figura.docs.animation.length",parameters:[[{name:"length",type:"Number"}]],returns:["Animation"],static:!1},{name:"getLength",description:"figura.docs.animation.get_length",parameters:[[]],returns:["Number"],static:!1},{name:"blend",description:"figura.docs.animation.blend",parameters:[[{name:"blend",type:"Number"}]],returns:["Animation"],static:!1},{name:"offset",description:"figura.docs.animation.offset",parameters:[[{name:"offset",type:"Number"}]],returns:["Animation"],static:!1},{name:"getPriority",description:"figura.docs.animation.get_priority",parameters:[[]],returns:["Integer"],static:!1},{name:"stop",description:"figura.docs.animation.stop",parameters:[[]],returns:["nil"],static:!1},{name:"override",description:"figura.docs.animation.override",parameters:[[{name:"override",type:"Boolean"}]],returns:["Animation"],static:!1},{name:"loop",description:"figura.docs.animation.loop",parameters:[[{name:"loop",type:"String"}]],returns:["Animation"],static:!1},{name:"getOffset",description:"figura.docs.animation.get_offset",parameters:[[]],returns:["Number"],static:!1},{name:"getTime",description:"figura.docs.animation.get_time",parameters:[[]],returns:["Number"],static:!1},{name:"setTime",description:"figura.docs.animation.set_time",parameters:[[{name:"time",type:"Number"}]],returns:["nil"],static:!1},{name:"pause",description:"figura.docs.animation.pause",parameters:[[]],returns:["nil"],static:!1},{name:"restart",description:"figura.docs.animation.restart",parameters:[[]],returns:["nil"],static:!1},{name:"startDelay",description:"figura.docs.animation.start_delay",parameters:[[{name:"delay",type:"Number"}]],returns:["Animation"],static:!1},{name:"loopDelay",description:"figura.docs.animation.loop_delay",parameters:[[{name:"delay",type:"Number"}]],returns:["Animation"],static:!1},{name:"getPlayState",description:"figura.docs.animation.get_play_state",parameters:[[]],returns:["String"],static:!1},{name:"getBlend",description:"figura.docs.animation.get_blend",parameters:[[]],returns:["Number"],static:!1},{name:"getSpeed",description:"figura.docs.animation.get_speed",parameters:[[]],returns:["Number"],static:!1},{name:"getOverrideRot",description:"figura.docs.animation.get_override_rot",parameters:[[]],returns:["Boolean"],static:!1},{name:"getOverridePos",description:"figura.docs.animation.get_override_pos",parameters:[[]],returns:["Boolean"],static:!1},{name:"overrideRot",description:"figura.docs.animation.override_rot",parameters:[[{name:"override",type:"Boolean"}]],returns:["Animation"],static:!1},{name:"overrideScale",description:"figura.docs.animation.override_scale",parameters:[[{name:"override",type:"Boolean"}]],returns:["Animation"],static:!1},{name:"getLoopDelay",description:"figura.docs.animation.get_loop_delay",parameters:[[]],returns:["Number"],static:!1},{name:"getOverrideScale",description:"figura.docs.animation.get_override_scale",parameters:[[]],returns:["Boolean"],static:!1},{name:"addCode",description:"figura.docs.animation.add_code",parameters:[[{name:"time",type:"Number"},{name:"code",type:"String"}]],returns:["Animation"],static:!1},{name:"getStartDelay",description:"figura.docs.animation.get_start_delay",parameters:[[]],returns:["Number"],static:!1},{name:"overridePos",description:"figura.docs.animation.override_pos",parameters:[[{name:"override",type:"Boolean"}]],returns:["Animation"],static:!1},{name:"getLoop",description:"figura.docs.animation.get_loop",parameters:[[]],returns:["String"],static:!1},{name:"play",description:"figura.docs.animation.play",parameters:[[]],returns:["nil"],static:!1,example:{content:"animations.bbmodelName.animationName:play()",author:"JimmyHelp"}},{name:"speed",description:"figura.docs.animation.speed",parameters:[[{name:"speed",type:"Number"}]],returns:["Animation"],static:!1}],fields:[{name:"name",description:"figura.docs.animation.name",type:"String",editable:!1}],category:"animations",metatable:{}},NameplateAPI:{name:"NameplateAPI",description:"figura.docs.nameplate",methods:[],fields:[{name:"CHAT",description:"figura.docs.nameplate.chat",type:"NameplateCustomization",editable:!1},{name:"ENTITY",description:"figura.docs.nameplate.entity",type:"EntityNameplateCustomization",editable:!1},{name:"LIST",description:"figura.docs.nameplate.list",type:"NameplateCustomization",editable:!1},{name:"ALL",description:"figura.docs.nameplate.all",type:"NameplateCustomizationGroup",editable:!1}],category:"nameplate",metatable:{}},NameplateCustomization:{name:"NameplateCustomization",description:"figura.docs.nameplate_customization",methods:[{name:"getText",description:"figura.docs.nameplate_customization.get_text",parameters:[[]],returns:["String"],static:!1},{name:"setText",description:"figura.docs.nameplate_customization.set_text",parameters:[[{name:"text",type:"String"}]],returns:["nil"],static:!1}],fields:[],category:"nameplate",metatable:{}},EntityNameplateCustomization:{name:"EntityNameplateCustomization",description:"figura.docs.nameplate_entity",parent:"NameplateCustomization",methods:[{name:"setScale",description:"figura.docs.nameplate_entity.set_scale",parameters:[[{name:"scale",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"setBackgroundColor",description:"figura.docs.nameplate_entity.set_background_color",parameters:[[{name:"rgb",type:"Vector3"}],[{name:"rgba",type:"Vector4"}],[{name:"rgb",type:"Vector3"},{name:"a",type:"Number"}],[{name:"r",type:"Number"},{name:"g",type:"Number"},{name:"b",type:"Number"}],[{name:"r",type:"Number"},{name:"g",type:"Number"},{name:"b",type:"Number"},{name:"a",type:"Number"}]],returns:["nil","nil","nil","nil","nil"],static:!1},{name:"getPos",description:"figura.docs.nameplate_entity.get_pos",parameters:[[]],returns:["Vector3"],static:!1},{name:"setPos",description:"figura.docs.nameplate_entity.set_pos",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"getScale",description:"figura.docs.nameplate_entity.get_scale",parameters:[[]],returns:["Vector3"],static:!1},{name:"getText",description:"figura.docs.nameplate_customization.get_text",parameters:[[]],returns:["String"],static:!1},{name:"setText",description:"figura.docs.nameplate_customization.set_text",parameters:[[{name:"text",type:"String"}]],returns:["nil"],static:!1}],fields:[{name:"visible",description:"figura.docs.nameplate_entity.visible",type:"Boolean",editable:!0},{name:"shadow",description:"figura.docs.nameplate_entity.shadow",type:"Boolean",editable:!0},{name:"outline",description:"figura.docs.nameplate_entity.outline",type:"Boolean",editable:!0}],category:"nameplate",metatable:{}},NameplateCustomizationGroup:{name:"NameplateCustomizationGroup",description:"figura.docs.nameplate_group",methods:[{name:"setText",description:"figura.docs.nameplate_group.set_text",parameters:[[{name:"text",type:"String"}]],returns:["nil"],static:!1}],fields:[],category:"nameplate",metatable:{}},WorldAPI:{name:"WorldAPI",description:"figura.docs.world",methods:[{name:"exists",description:"figura.docs.world.exists",parameters:[[]],returns:["Boolean"],static:!0},{name:"getTime",description:"figura.docs.world.get_time",parameters:[[],[{name:"delta",type:"Number"}]],returns:["Number","Number"],static:!0},{name:"getTimeOfDay",description:"figura.docs.world.get_time_of_day",parameters:[[],[{name:"delta",type:"Number"}]],returns:["Number","Number"],static:!0},{name:"getStrongRedstonePower",description:"figura.docs.world.get_strong_redstone_power",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Integer","Integer"],static:!0},{name:"getMoonPhase",description:"figura.docs.world.get_moon_phase",parameters:[[]],returns:["Integer"],static:!0},{name:"getRainGradient",description:"figura.docs.world.get_rain_gradient",parameters:[[],[{name:"delta",type:"Number"}]],returns:["Number","Number"],static:!0},{name:"isThundering",description:"figura.docs.world.is_thundering",parameters:[[]],returns:["Boolean"],static:!0},{name:"getLightLevel",description:"figura.docs.world.get_light_level",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Integer","Integer"],static:!0},{name:"getBlockState",description:"figura.docs.world.get_blockstate",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["BlockState","BlockState"],static:!0},{name:"getBiome",description:"figura.docs.world.get_biome",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Biome","Biome"],static:!0},{name:"getRedstonePower",description:"figura.docs.world.get_redstone_power",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Integer","Integer"],static:!0},{name:"newItem",description:"figura.docs.world.new_item",parameters:[[{name:"item",type:"String"}],[{name:"item",type:"String"},{name:"count",type:"Integer"}],[{name:"item",type:"String"},{name:"count",type:"Integer"},{name:"damage",type:"Integer"}]],returns:["ItemStack","ItemStack","ItemStack"],static:!0},{name:"getSkyLightLevel",description:"figura.docs.world.get_sky_light_level",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Integer","Integer"],static:!0},{name:"getBlockLightLevel",description:"figura.docs.world.get_block_light_level",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Integer","Integer"],static:!0},{name:"getPlayers",description:"figura.docs.world.get_players",parameters:[[]],returns:["Table<String, PlayerAPI>"],static:!0},{name:"isOpenSky",description:"figura.docs.world.is_open_sky",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Boolean","Boolean"],static:!0},{name:"playerVars",description:"figura.docs.world.player_vars",parameters:[[]],returns:["Table"],static:!0},{name:"newBlock",description:"figura.docs.world.new_block",parameters:[[{name:"block",type:"String"}],[{name:"block",type:"String"},{name:"pos",type:"Vector3"}],[{name:"block",type:"String"},{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["BlockState","BlockState","BlockState"],static:!0},{name:"getEntity",description:"figura.docs.world.get_entity",parameters:[[{name:"UUID",type:"String"}]],returns:["EntityAPI | nil"],static:!0}],fields:[],category:"world",metatable:{}},Biome:{name:"Biome",description:"figura.docs.biome",methods:[{name:"isHot",description:"figura.docs.biome.is_hot",parameters:[[]],returns:["Boolean"],static:!1},{name:"getSkyColor",description:"figura.docs.biome.get_sky_color",parameters:[[]],returns:["Vector3"],static:!1},{name:"getWaterColor",description:"figura.docs.biome.get_water_color",parameters:[[]],returns:["Vector3"],static:!1},{name:"getTags",description:"figura.docs.biome.get_tags",parameters:[[]],returns:["Table"],static:!1},{name:"getPrecipitation",description:"figura.docs.biome.get_precipitation",parameters:[[]],returns:["String"],static:!1},{name:"isCold",description:"figura.docs.biome.is_cold",parameters:[[]],returns:["Boolean"],static:!1},{name:"getTemperature",description:"figura.docs.biome.get_temperature",parameters:[[]],returns:["Number"],static:!1},{name:"getFoliageColor",description:"figura.docs.biome.get_foliage_color",parameters:[[]],returns:["Vector3"],static:!1},{name:"getGrassColor",description:"figura.docs.biome.get_grass_color",parameters:[[]],returns:["Vector3"],static:!1},{name:"getDownfall",description:"figura.docs.biome.get_downfall",parameters:[[]],returns:["Number"],static:!1},{name:"getFogColor",description:"figura.docs.biome.get_fog_color",parameters:[[]],returns:["Vector3"],static:!1},{name:"getWaterFogColor",description:"figura.docs.biome.get_water_fog_color",parameters:[[]],returns:["Vector3"],static:!1},{name:"getPos",description:"figura.docs.biome.get_pos",parameters:[[]],returns:["Vector3"],static:!1},{name:"setPos",description:"figura.docs.biome.set_pos",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["nil","nil"],static:!1}],fields:[{name:"name",description:"figura.docs.biome.name",type:"String",editable:!1}],category:"world",metatable:{}},BlockState:{name:"BlockState",description:"figura.docs.blockstate",methods:[{name:"isOpaque",description:"figura.docs.blockstate.is_opaque",parameters:[[]],returns:["Boolean"],static:!1},{name:"hasEmissiveLighting",description:"figura.docs.blockstate.has_emissive_lightning",parameters:[[]],returns:["Boolean"],static:!1},{name:"getComparatorOutput",description:"figura.docs.blockstate.get_comparator_output",parameters:[[]],returns:["Integer"],static:!1},{name:"getTags",description:"figura.docs.blockstate.get_tags",parameters:[[]],returns:["Table"],static:!1},{name:"getFluidTags",description:"figura.docs.blockstate.get_fluid_tags",parameters:[[]],returns:["Table"],static:!1},{name:"getBlastResistance",description:"figura.docs.blockstate.get_blast_resistance",parameters:[[]],returns:["Number"],static:!1},{name:"getCollisionShape",description:"figura.docs.blockstate.get_collision_shape",parameters:[[]],returns:["Table"],static:!1},{name:"getOutlineShape",description:"figura.docs.blockstate.get_outline_shape",parameters:[[]],returns:["Table"],static:!1},{name:"getSounds",description:"figura.docs.blockstate.get_sounds",parameters:[[]],returns:["Table"],static:!1},{name:"getMapColor",description:"figura.docs.blockstate.get_map_color",parameters:[[]],returns:["Vector3"],static:!1},{name:"isTranslucent",description:"figura.docs.blockstate.is_translucent",parameters:[[]],returns:["Boolean"],static:!1},{name:"emitsRedstonePower",description:"figura.docs.blockstate.emits_redstone_power",parameters:[[]],returns:["Boolean"],static:!1},{name:"asItem",description:"figura.docs.blockstate.as_item",parameters:[[]],returns:["ItemStack | nil"],static:!1},{name:"isSolidBlock",description:"figura.docs.blockstate.is_solid_block",parameters:[[]],returns:["Boolean"],static:!1},{name:"isFullCube",description:"figura.docs.blockstate.is_full_cube",parameters:[[]],returns:["Boolean"],static:!1},{name:"hasBlockEntity",description:"figura.docs.blockstate.has_block_entity",parameters:[[]],returns:["Boolean"],static:!1},{name:"getFriction",description:"figura.docs.blockstate.get_friction",parameters:[[]],returns:["Number"],static:!1},{name:"getEntityData",description:"figura.docs.blockstate.get_entity_data",parameters:[[]],returns:["Table"],static:!1},{name:"toStateString",description:"figura.docs.blockstate.to_state_string",parameters:[[]],returns:["String"],static:!1},{name:"getHardness",description:"figura.docs.blockstate.get_hardness",parameters:[[]],returns:["Number"],static:!1},{name:"getMaterial",description:"figura.docs.blockstate.get_material",parameters:[[]],returns:["String"],static:!1},{name:"getLuminance",description:"figura.docs.blockstate.get_luminance",parameters:[[]],returns:["Integer"],static:!1},{name:"hasCollision",description:"figura.docs.blockstate.get_has_collision",parameters:[[]],returns:["Boolean"],static:!1},{name:"getJumpVelocityMultiplier",description:"figura.docs.blockstate.get_jump_velocity_multiplier",parameters:[[]],returns:["Number"],static:!1},{name:"getVelocityMultiplier",description:"figura.docs.blockstate.get_velocity_multiplier",parameters:[[]],returns:["Number"],static:!1},{name:"getPos",description:"figura.docs.blockstate.get_pos",parameters:[[]],returns:["Vector3"],static:!1},{name:"setPos",description:"figura.docs.blockstate.set_pos",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"getOpacity",description:"figura.docs.blockstate.get_opacity",parameters:[[]],returns:["Integer"],static:!1}],fields:[{name:"id",description:"figura.docs.blockstate.id",type:"String",editable:!1},{name:"properties",description:"figura.docs.blockstate.properties",type:"Table",editable:!1}],category:"world",metatable:{}},ItemStack:{name:"ItemStack",description:"figura.docs.itemstack",methods:[{name:"getName",description:"figura.docs.itemstack.get_name",parameters:[[]],returns:["String"],static:!1},{name:"getCount",description:"figura.docs.itemstack.get_count",parameters:[[]],returns:["Integer"],static:!1},{name:"getTags",description:"figura.docs.itemstack.get_tags",parameters:[[]],returns:["Table"],static:!1},{name:"isBlockItem",description:"figura.docs.itemstack.is_block_item",parameters:[[]],returns:["Boolean"],static:!1},{name:"getRarity",description:"figura.docs.itemstack.get_rarity",parameters:[[]],returns:["String"],static:!1},{name:"getDamage",description:"figura.docs.itemstack.get_damage",parameters:[[]],returns:["Integer"],static:!1},{name:"isDamageable",description:"figura.docs.itemstack.is_damageable",parameters:[[]],returns:["Boolean"],static:!1},{name:"isFood",description:"figura.docs.itemstack.is_food",parameters:[[]],returns:["Boolean"],static:!1},{name:"isStackable",description:"figura.docs.itemstack.is_stackable",parameters:[[]],returns:["Boolean"],static:!1},{name:"getUseAction",description:"figura.docs.itemstack.get_use_action",parameters:[[]],returns:["String"],static:!1},{name:"getCooldown",description:"figura.docs.itemstack.get_cooldown",parameters:[[]],returns:["Integer"],static:!1},{name:"getMaxCount",description:"figura.docs.itemstack.get_max_count",parameters:[[]],returns:["Integer"],static:!1},{name:"hasGlint",description:"figura.docs.itemstack.has_glint",parameters:[[]],returns:["Boolean"],static:!1},{name:"getMaxDamage",description:"figura.docs.itemstack.get_max_damage",parameters:[[]],returns:["Integer"],static:!1},{name:"isEnchantable",description:"figura.docs.itemstack.is_enchantable",parameters:[[]],returns:["Boolean"],static:!1},{name:"toStackString",description:"figura.docs.itemstack.to_stack_string",parameters:[[]],returns:["String"],static:!1},{name:"getUseDuration",description:"figura.docs.itemstack.get_use_duration",parameters:[[]],returns:["Integer"],static:!1},{name:"getRepairCost",description:"figura.docs.itemstack.get_repair_cost",parameters:[[]],returns:["Integer"],static:!1}],fields:[{name:"id",description:"figura.docs.itemstack.id",type:"String",editable:!1},{name:"tag",description:"figura.docs.itemstack.tag",type:"Table",editable:!1}],category:"world",metatable:{}},VanillaModelAPI:{name:"VanillaModelAPI",description:"figura.docs.vanilla_model",methods:[],fields:[{name:"HEAD",description:"figura.docs.vanilla_model.head",type:"VanillaModelPart",editable:!1},{name:"BODY",description:"figura.docs.vanilla_model.body",type:"VanillaModelPart",editable:!1},{name:"LEFT_ARM",description:"figura.docs.vanilla_model.left_arm",type:"VanillaModelPart",editable:!1},{name:"RIGHT_ARM",description:"figura.docs.vanilla_model.right_arm",type:"VanillaModelPart",editable:!1},{name:"LEFT_LEG",description:"figura.docs.vanilla_model.left_leg",type:"VanillaModelPart",editable:!1},{name:"RIGHT_LEG",description:"figura.docs.vanilla_model.right_leg",type:"VanillaModelPart",editable:!1},{name:"HAT",description:"figura.docs.vanilla_model.hat",type:"VanillaModelPart",editable:!1},{name:"JACKET",description:"figura.docs.vanilla_model.jacket",type:"VanillaModelPart",editable:!1},{name:"LEFT_SLEEVE",description:"figura.docs.vanilla_model.left_sleeve",type:"VanillaModelPart",editable:!1},{name:"RIGHT_SLEEVE",description:"figura.docs.vanilla_model.right_sleeve",type:"VanillaModelPart",editable:!1},{name:"LEFT_PANTS",description:"figura.docs.vanilla_model.left_pants",type:"VanillaModelPart",editable:!1},{name:"RIGHT_PANTS",description:"figura.docs.vanilla_model.right_pants",type:"VanillaModelPart",editable:!1},{name:"CAPE_MODEL",description:"figura.docs.vanilla_model.cape_model",type:"VanillaModelPart",editable:!1},{name:"FAKE_CAPE",description:"figura.docs.vanilla_model.fake_cape",type:"VanillaModelPart",editable:!1},{name:"HELMET_ITEM",description:"figura.docs.vanilla_model.helmet_item",type:"VanillaModelPart",editable:!1},{name:"HELMET_HEAD",description:"figura.docs.vanilla_model.helmet_head",type:"VanillaModelPart",editable:!1},{name:"HELMET_HAT",description:"figura.docs.vanilla_model.helmet_hat",type:"VanillaModelPart",editable:!1},{name:"CHESTPLATE_BODY",description:"figura.docs.vanilla_model.chestplate_body",type:"VanillaModelPart",editable:!1},{name:"CHESTPLATE_LEFT_ARM",description:"figura.docs.vanilla_model.chestplate_left_arm",type:"VanillaModelPart",editable:!1},{name:"CHESTPLATE_RIGHT_ARM",description:"figura.docs.vanilla_model.chestplate_right_arm",type:"VanillaModelPart",editable:!1},{name:"LEGGINGS_BODY",description:"figura.docs.vanilla_model.leggings_body",type:"VanillaModelPart",editable:!1},{name:"LEGGINGS_LEFT_LEG",description:"figura.docs.vanilla_model.leggings_left_leg",type:"VanillaModelPart",editable:!1},{name:"LEGGINGS_RIGHT_LEG",description:"figura.docs.vanilla_model.leggings_right_leg",type:"VanillaModelPart",editable:!1},{name:"BOOTS_LEFT_LEG",description:"figura.docs.vanilla_model.boots_left_leg",type:"VanillaModelPart",editable:!1},{name:"BOOTS_RIGHT_LEG",description:"figura.docs.vanilla_model.boots_right_leg",type:"VanillaModelPart",editable:!1},{name:"LEFT_ELYTRA",description:"figura.docs.vanilla_model.left_elytra",type:"VanillaModelPart",editable:!1},{name:"RIGHT_ELYTRA",description:"figura.docs.vanilla_model.right_elytra",type:"VanillaModelPart",editable:!1},{name:"LEFT_ITEM",description:"figura.docs.vanilla_model.left_item",type:"VanillaModelPart",editable:!1},{name:"RIGHT_ITEM",description:"figura.docs.vanilla_model.right_item",type:"VanillaModelPart",editable:!1},{name:"LEFT_PARROT",description:"figura.docs.vanilla_model.left_parrot",type:"VanillaModelPart",editable:!1},{name:"RIGHT_PARROT",description:"figura.docs.vanilla_model.right_parrot",type:"VanillaModelPart",editable:!1},{name:"ALL",description:"figura.docs.vanilla_model.all",type:"VanillaModelGroup",editable:!1},{name:"PLAYER",description:"figura.docs.vanilla_model.player",type:"VanillaModelGroup",editable:!1},{name:"OUTER_LAYER",description:"figura.docs.vanilla_model.outer_layer",type:"VanillaModelGroup",editable:!1},{name:"INNER_LAYER",description:"figura.docs.vanilla_model.inner_layer",type:"VanillaModelGroup",editable:!1},{name:"CAPE",description:"figura.docs.vanilla_model.cape",type:"VanillaModelGroup",editable:!1},{name:"ARMOR",description:"figura.docs.vanilla_model.armor",type:"VanillaModelGroup",editable:!1},{name:"HELMET",description:"figura.docs.vanilla_model.helmet",type:"VanillaModelGroup",editable:!1},{name:"CHESTPLATE",description:"figura.docs.vanilla_model.chestplate",type:"VanillaModelGroup",editable:!1},{name:"LEGGINGS",description:"figura.docs.vanilla_model.leggings",type:"VanillaModelGroup",editable:!1},{name:"BOOTS",description:"figura.docs.vanilla_model.boots",type:"VanillaModelGroup",editable:!1},{name:"ELYTRA",description:"figura.docs.vanilla_model.elytra",type:"VanillaModelGroup",editable:!1},{name:"HELD_ITEMS",description:"figura.docs.vanilla_model.held_items",type:"VanillaModelGroup",editable:!1},{name:"PARROTS",description:"figura.docs.vanilla_model.parrots",type:"VanillaModelGroup",editable:!1}],category:"vanilla_model",metatable:{}},VanillaModelPart:{name:"VanillaModelPart",description:"figura.docs.vanilla_part",methods:[{name:"getOriginRot",description:"figura.docs.vanilla_part.get_origin_rot",parameters:[[]],returns:["Vector3"],static:!1},{name:"getOriginVisible",description:"figura.docs.vanilla_part.get_origin_visible",parameters:[[]],returns:["Boolean"],static:!1},{name:"getOriginPos",description:"figura.docs.vanilla_part.get_origin_pos",parameters:[[]],returns:["Vector3"],static:!1},{name:"setVisible",description:"figura.docs.vanilla_part.set_visible",parameters:[[{name:"visible",type:"Boolean"}]],returns:["nil"],static:!1},{name:"getVisible",description:"figura.docs.vanilla_part.get_visible",parameters:[[]],returns:["Boolean"],static:!1}],fields:[],category:"vanilla_model",metatable:{}},VanillaModelGroup:{name:"VanillaModelGroup",description:"figura.docs.vanilla_group",methods:[{name:"setVisible",description:"figura.docs.vanilla_group.set_visible",parameters:[[{name:"visible",type:"Boolean"}]],returns:["nil"],static:!1},{name:"getVisible",description:"figura.docs.vanilla_group.get_visible",parameters:[[]],returns:["Boolean"],static:!1}],fields:[],category:"vanilla_model",metatable:{}},ModelPart:{name:"ModelPart",description:"figura.docs.model_part",methods:[{name:"getName",description:"figura.docs.model_part.get_name",parameters:[[]],returns:["String"],static:!1},{name:"getParent",description:"figura.docs.model_part.get_parent",parameters:[[]],returns:["ModelPart | nil"],static:!1},{name:"getType",description:"figura.docs.model_part.get_type",parameters:[[]],returns:["String"],static:!1},{name:"getChildren",description:"figura.docs.model_part.get_children",parameters:[[]],returns:["ModelPart[]"],static:!1},{name:"setColor",description:"figura.docs.model_part.set_color",parameters:[[{name:"color",type:"Vector3"}],[{name:"r",type:"Number"},{name:"g",type:"Number"},{name:"b",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"setScale",description:"figura.docs.model_part.set_scale",parameters:[[{name:"scale",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"addItem",description:"figura.docs.model_part.add_item",parameters:[[{name:"taskName",type:"String"}]],returns:["RenderTask"],static:!1},{name:"getTask",description:"figura.docs.model_part.get_task",parameters:[[],[{name:"taskName",type:"String"}]],returns:["Table<String, RenderTask>","RenderTask"],static:!1},{name:"setVisible",description:"figura.docs.model_part.set_visible",parameters:[[{name:"visible",type:"Boolean"}]],returns:["nil"],static:!1},{name:"getVisible",description:"figura.docs.model_part.get_visible",parameters:[[]],returns:["Boolean | nil"],static:!1},{name:"getColor",description:"figura.docs.model_part.get_color",parameters:[[]],returns:["Vector3"],static:!1},{name:"getPos",description:"figura.docs.model_part.get_pos",parameters:[[]],returns:["Vector3"],static:!1},{name:"getRot",description:"figura.docs.model_part.get_rot",parameters:[[]],returns:["Vector3"],static:!1},{name:"setMatrix",description:"figura.docs.model_part.set_matrix",parameters:[[{name:"matrix",type:"Matrix4"}]],returns:["nil"],static:!1},{name:"offsetRot",description:"figura.docs.model_part.offset_rot",parameters:[[{name:"offsetRot",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"overrideVanillaRot",description:"figura.docs.model_part.override_vanilla_rot",parameters:[[]],returns:["Boolean"],static:!1},{name:"overrideVanillaPos",description:"figura.docs.model_part.override_vanilla_pos",parameters:[[]],returns:["Boolean"],static:!1},{name:"offsetPivot",description:"figura.docs.model_part.offset_pivot",parameters:[[{name:"offsetPivot",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"getPivot",description:"figura.docs.model_part.get_pivot",parameters:[[]],returns:["Vector3"],static:!1},{name:"getOffsetPivot",description:"figura.docs.model_part.get_offset_pivot",parameters:[[]],returns:["Vector3"],static:!1},{name:"getAnimRot",description:"figura.docs.model_part.get_anim_rot",parameters:[[]],returns:["Vector3"],static:!1},{name:"getAnimScale",description:"figura.docs.model_part.get_anim_scale",parameters:[[]],returns:["Vector3"],static:!1},{name:"getOffsetRot",description:"figura.docs.model_part.get_offset_rot",parameters:[[]],returns:["Vector3"],static:!1},{name:"getNormalMatrix",description:"figura.docs.model_part.get_normal_matrix",parameters:[[]],returns:["Matrix3"],static:!1},{name:"getNormalMatrixRaw",description:"figura.docs.model_part.get_normal_matrix_raw",parameters:[[]],returns:["Matrix3"],static:!1},{name:"setPos",description:"figura.docs.model_part.set_pos",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"setPivot",description:"figura.docs.model_part.set_pivot",parameters:[[{name:"pivot",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"getScale",description:"figura.docs.model_part.get_scale",parameters:[[]],returns:["Vector3"],static:!1},{name:"getAnimPos",description:"figura.docs.model_part.get_anim_pos",parameters:[[]],returns:["Vector3"],static:!1},{name:"setRot",description:"figura.docs.model_part.set_rot",parameters:[[{name:"rot",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"getPositionMatrix",description:"figura.docs.model_part.get_position_matrix",parameters:[[]],returns:["Matrix4"],static:!1},{name:"getTextureSize",description:"figura.docs.model_part.get_texture_size",parameters:[[]],returns:["Vector2"],static:!1},{name:"setPrimaryTexture",description:"figura.docs.model_part.set_primary_texture",parameters:[[{name:"textureType",type:"String"}],[{name:"resource",type:"String"},{name:"path",type:"String"}],[{name:"custom",type:"String"},{name:"textureName",type:"String"}],[{name:"custom",type:"String"},{name:"texture",type:"Texture"}]],returns:["nil","nil","nil","nil"],static:!1},{name:"getUV",description:"figura.docs.model_part.get_uv",parameters:[[]],returns:["Vector2"],static:!1},{name:"setUVPixels",description:"figura.docs.model_part.set_uv_pixels",parameters:[[{name:"uv",type:"Vector2"}],[{name:"u",type:"Number"},{name:"v",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"setUV",description:"figura.docs.model_part.set_uv",parameters:[[{name:"uv",type:"Vector2"}],[{name:"u",type:"Number"},{name:"v",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"partToWorldMatrix",description:"figura.docs.model_part.part_to_world_matrix",parameters:[[]],returns:["Matrix4"],static:!1},{name:"setUVMatrix",description:"figura.docs.model_part.set_uv_matrix",parameters:[[{name:"matrix",type:"Matrix3"}]],returns:["nil"],static:!1},{name:"getOpacity",description:"figura.docs.model_part.get_opacity",parameters:[[]],returns:["Number"],static:!1},{name:"addBlock",description:"figura.docs.model_part.add_block",parameters:[[{name:"taskName",type:"String"}]],returns:["RenderTask"],static:!1},{name:"getUVMatrix",description:"figura.docs.model_part.get_uv_matrix",parameters:[[]],returns:["Matrix3"],static:!1},{name:"addText",description:"figura.docs.model_part.add_text",parameters:[[{name:"taskName",type:"String"}]],returns:["RenderTask"],static:!1},{name:"setOpacity",description:"figura.docs.model_part.set_opacity",parameters:[[{name:"opacity",type:"Number"}]],returns:["nil"],static:!1},{name:"getUVPixels",description:"figura.docs.model_part.get_uv_pixels",parameters:[[]],returns:["Vector2"],static:!1},{name:"setLight",description:"figura.docs.model_part.set_light",parameters:[[{name:"light",type:"Vector2"}],[{name:"blockLight",type:"Integer"},{name:"skyLight",type:"Integer"}]],returns:["nil","nil"],static:!1},{name:"setParentType",description:"figura.docs.model_part.set_parent_type",parameters:[[{name:"parentType",type:"String"}]],returns:["nil"],static:!1},{name:"getLight",description:"figura.docs.model_part.get_light",parameters:[[]],returns:["Vector2"],static:!1},{name:"getParentType",description:"figura.docs.model_part.get_parent_type",parameters:[[]],returns:["String"],static:!1},{name:"removeTask",description:"figura.docs.model_part.remove_task",parameters:[[],[{name:"taskName",type:"String"}]],returns:["nil","nil"],static:!1},{name:"getTextures",description:"figura.docs.model_part.get_textures",parameters:[[]],returns:["Table"],static:!1},{name:"overrideVanillaScale",description:"figura.docs.model_part.override_vanilla_scale",parameters:[[]],returns:["Boolean"],static:!1},{name:"getPrimaryRenderType",description:"figura.docs.model_part.get_primary_render_type",parameters:[[]],returns:["RenderTypes | nil"],static:!1},{name:"getSecondaryRenderType",description:"figura.docs.model_part.get_secondary_render_type",parameters:[[]],returns:["RenderTypes | nil"],static:!1},{name:"setSecondaryRenderType",description:"figura.docs.model_part.set_secondary_render_type",parameters:[[{name:"renderType",type:"String"}]],returns:["nil"],static:!1},{name:"setSecondaryTexture",description:"figura.docs.model_part.set_secondary_texture",parameters:[[{name:"textureType",type:"String"}],[{name:"resource",type:"String"},{name:"path",type:"String"}],[{name:"custom",type:"String"},{name:"textureName",type:"String"}],[{name:"custom",type:"String"},{name:"texture",type:"Texture"}]],returns:["nil","nil","nil","nil"],static:!1},{name:"getPositionMatrixRaw",description:"figura.docs.model_part.get_position_matrix_raw",parameters:[[]],returns:["Matrix4"],static:!1},{name:"setPrimaryRenderType",description:"figura.docs.model_part.set_primary_render_type",parameters:[[{name:"renderType",type:"String"}]],returns:["nil"],static:!1}],fields:[],category:"models",metatable:{}},RenderTask:{name:"RenderTask",description:"figura.docs.render_task",methods:[{name:"scale",description:"figura.docs.render_task.scale",parameters:[[{name:"scale",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["RenderTask","RenderTask"],static:!1},{name:"enabled",description:"figura.docs.render_task.enabled",parameters:[[{name:"bool",type:"Boolean"}]],returns:["RenderTask"],static:!1},{name:"pos",description:"figura.docs.render_task.pos",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["RenderTask","RenderTask"],static:!1},{name:"isEnabled",description:"figura.docs.render_task.is_enabled",parameters:[[]],returns:["Boolean"],static:!1},{name:"isEmissive",description:"figura.docs.render_task.is_emissive",parameters:[[]],returns:["Boolean"],static:!1},{name:"emissive",description:"figura.docs.render_task.emissive",parameters:[[{name:"bool",type:"Boolean"}]],returns:["RenderTask"],static:!1},{name:"rot",description:"figura.docs.render_task.rot",parameters:[[{name:"rot",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["RenderTask","RenderTask"],static:!1},{name:"getPos",description:"figura.docs.render_task.get_pos",parameters:[[]],returns:["Vector3"],static:!1},{name:"getRot",description:"figura.docs.render_task.get_rot",parameters:[[]],returns:["Vector3"],static:!1},{name:"getScale",description:"figura.docs.render_task.get_scale",parameters:[[]],returns:["Vector3"],static:!1}],fields:[],category:"models",metatable:{}},BlockTask:{name:"BlockTask",description:"figura.docs.block_task",parent:"RenderTask",methods:[{name:"block",description:"figura.docs.block_task.block",parameters:[[{name:"block",type:"String"}],[{name:"block",type:"BlockState"}]],returns:["RenderTask","RenderTask"],static:!1},{name:"scale",description:"figura.docs.render_task.scale",parameters:[[{name:"scale",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["RenderTask","RenderTask"],static:!1},{name:"enabled",description:"figura.docs.render_task.enabled",parameters:[[{name:"bool",type:"Boolean"}]],returns:["RenderTask"],static:!1},{name:"pos",description:"figura.docs.render_task.pos",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["RenderTask","RenderTask"],static:!1},{name:"isEnabled",description:"figura.docs.render_task.is_enabled",parameters:[[]],returns:["Boolean"],static:!1},{name:"isEmissive",description:"figura.docs.render_task.is_emissive",parameters:[[]],returns:["Boolean"],static:!1},{name:"emissive",description:"figura.docs.render_task.emissive",parameters:[[{name:"bool",type:"Boolean"}]],returns:["RenderTask"],static:!1},{name:"rot",description:"figura.docs.render_task.rot",parameters:[[{name:"rot",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["RenderTask","RenderTask"],static:!1},{name:"getPos",description:"figura.docs.render_task.get_pos",parameters:[[]],returns:["Vector3"],static:!1},{name:"getRot",description:"figura.docs.render_task.get_rot",parameters:[[]],returns:["Vector3"],static:!1},{name:"getScale",description:"figura.docs.render_task.get_scale",parameters:[[]],returns:["Vector3"],static:!1}],fields:[],category:"models",metatable:{}},ItemTask:{name:"ItemTask",description:"figura.docs.item_task",parent:"RenderTask",methods:[{name:"item",description:"figura.docs.item_task.item",parameters:[[{name:"item",type:"String"}],[{name:"item",type:"ItemStack"}]],returns:["RenderTask","RenderTask"],static:!1},{name:"renderType",description:"figura.docs.item_task.render_type",parameters:[[{name:"renderType",type:"String"}]],returns:["RenderTask"],static:!1},{name:"getRenderType",description:"figura.docs.item_task.get_render_type",parameters:[[]],returns:["String"],static:!1},{name:"scale",description:"figura.docs.render_task.scale",parameters:[[{name:"scale",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["RenderTask","RenderTask"],static:!1},{name:"enabled",description:"figura.docs.render_task.enabled",parameters:[[{name:"bool",type:"Boolean"}]],returns:["RenderTask"],static:!1},{name:"pos",description:"figura.docs.render_task.pos",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["RenderTask","RenderTask"],static:!1},{name:"isEnabled",description:"figura.docs.render_task.is_enabled",parameters:[[]],returns:["Boolean"],static:!1},{name:"isEmissive",description:"figura.docs.render_task.is_emissive",parameters:[[]],returns:["Boolean"],static:!1},{name:"emissive",description:"figura.docs.render_task.emissive",parameters:[[{name:"bool",type:"Boolean"}]],returns:["RenderTask"],static:!1},{name:"rot",description:"figura.docs.render_task.rot",parameters:[[{name:"rot",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["RenderTask","RenderTask"],static:!1},{name:"getPos",description:"figura.docs.render_task.get_pos",parameters:[[]],returns:["Vector3"],static:!1},{name:"getRot",description:"figura.docs.render_task.get_rot",parameters:[[]],returns:["Vector3"],static:!1},{name:"getScale",description:"figura.docs.render_task.get_scale",parameters:[[]],returns:["Vector3"],static:!1}],fields:[],category:"models",metatable:{}},TextTask:{name:"TextTask",description:"figura.docs.text_task",parent:"RenderTask",methods:[{name:"right",description:"figura.docs.text_task.right",parameters:[[{name:"right",type:"Boolean"}]],returns:["RenderTask"],static:!1},{name:"text",description:"figura.docs.text_task.text",parameters:[[{name:"text",type:"String"}]],returns:["RenderTask"],static:!1},{name:"isCentered",description:"figura.docs.text_task.is_centered",parameters:[[]],returns:["Boolean"],static:!1},{name:"getOutlineColor",description:"figura.docs.text_task.get_outline_color",parameters:[[]],returns:["Vector3"],static:!1},{name:"hasOutline",description:"figura.docs.text_task.has_outline",parameters:[[]],returns:["Boolean"],static:!1},{name:"isRight",description:"figura.docs.text_task.is_right",parameters:[[]],returns:["Boolean"],static:!1},{name:"hasShadow",description:"figura.docs.text_task.has_shadow",parameters:[[]],returns:["Boolean"],static:!1},{name:"outlineColor",description:"figura.docs.text_task.outline_color",parameters:[[{name:"color",type:"Vector3"}],[{name:"r",type:"Number"},{name:"g",type:"Number"},{name:"b",type:"Number"}]],returns:["TextTask","TextTask"],static:!1},{name:"outline",description:"figura.docs.text_task.outline",parameters:[[{name:"outline",type:"Boolean"}]],returns:["RenderTask"],static:!1},{name:"centered",description:"figura.docs.text_task.centered",parameters:[[{name:"centered",type:"Boolean"}]],returns:["RenderTask"],static:!1},{name:"shadow",description:"figura.docs.text_task.shadow",parameters:[[{name:"shadow",type:"Boolean"}]],returns:["RenderTask"],static:!1},{name:"scale",description:"figura.docs.render_task.scale",parameters:[[{name:"scale",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["RenderTask","RenderTask"],static:!1},{name:"enabled",description:"figura.docs.render_task.enabled",parameters:[[{name:"bool",type:"Boolean"}]],returns:["RenderTask"],static:!1},{name:"pos",description:"figura.docs.render_task.pos",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["RenderTask","RenderTask"],static:!1},{name:"isEnabled",description:"figura.docs.render_task.is_enabled",parameters:[[]],returns:["Boolean"],static:!1},{name:"isEmissive",description:"figura.docs.render_task.is_emissive",parameters:[[]],returns:["Boolean"],static:!1},{name:"emissive",description:"figura.docs.render_task.emissive",parameters:[[{name:"bool",type:"Boolean"}]],returns:["RenderTask"],static:!1},{name:"rot",description:"figura.docs.render_task.rot",parameters:[[{name:"rot",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["RenderTask","RenderTask"],static:!1},{name:"getPos",description:"figura.docs.render_task.get_pos",parameters:[[]],returns:["Vector3"],static:!1},{name:"getRot",description:"figura.docs.render_task.get_rot",parameters:[[]],returns:["Vector3"],static:!1},{name:"getScale",description:"figura.docs.render_task.get_scale",parameters:[[]],returns:["Vector3"],static:!1}],fields:[],category:"models",metatable:{}},EntityAPI:{name:"EntityAPI",description:"figura.docs.entity",parent:"NullEntity",methods:[{name:"getName",description:"figura.docs.entity.get_name",parameters:[[]],returns:["String"],static:!1},{name:"getType",description:"figura.docs.entity.get_type",parameters:[[]],returns:["String"],static:!1},{name:"isLoaded",description:"figura.docs.entity.is_loaded",parameters:[[]],returns:["Boolean"],static:!1},{name:"getItem",description:"figura.docs.entity.get_item",parameters:[[{name:"index",type:"Integer"}]],returns:["ItemStack | nil"],static:!1},{name:"getNbt",description:"figura.docs.entity.get_nbt",parameters:[[]],returns:["Table"],static:!1},{name:"getPose",description:"figura.docs.entity.get_pose",parameters:[[]],returns:["String"],static:!1},{name:"getPos",description:"figura.docs.entity.get_pos",parameters:[[],[{name:"delta",type:"Number"}]],returns:["Vector3","Vector3"],static:!1},{name:"getVehicle",description:"figura.docs.entity.get_vehicle",parameters:[[]],returns:["EntityAPI | nil"],static:!1},{name:"getRot",description:"figura.docs.entity.get_rot",parameters:[[],[{name:"delta",type:"Number"}]],returns:["Vector2","Vector2"],static:!1},{name:"getUUID",description:"figura.docs.entity.get_uuid",parameters:[[]],returns:["String"],static:!1},{name:"isHamburger",description:"figura.docs.entity.is_hamburger",parameters:[[]],returns:["Boolean"],static:!1},{name:"getLookDir",description:"figura.docs.entity.get_look_dir",parameters:[[]],returns:["Vector3"],static:!1},{name:"getFrozenTicks",description:"figura.docs.entity.get_frozen_ticks",parameters:[[]],returns:["Integer"],static:!1},{name:"getVelocity",description:"figura.docs.entity.get_velocity",parameters:[[]],returns:["Vector3"],static:!1},{name:"getMaxAir",description:"figura.docs.entity.get_max_air",parameters:[[]],returns:["Integer"],static:!1},{name:"getFireTicks",description:"figura.docs.entity.get_fire_ticks",parameters:[[]],returns:["Integer"],static:!1},{name:"getDimensionName",description:"figura.docs.entity.get_dimension_name",parameters:[[]],returns:["String"],static:!1},{name:"getAir",description:"figura.docs.entity.get_air",parameters:[[]],returns:["Integer"],static:!1},{name:"isInLava",description:"figura.docs.entity.is_in_lava",parameters:[[]],returns:["Boolean"],static:!1},{name:"isOnFire",description:"figura.docs.entity.is_on_fire",parameters:[[]],returns:["Boolean"],static:!1},{name:"isOnGround",description:"figura.docs.entity.is_on_ground",parameters:[[]],returns:["Boolean"],static:!1},{name:"isSneaking",description:"figura.docs.entity.is_sneaking",parameters:[[]],returns:["Boolean"],static:!1},{name:"getEyeY",description:"figura.docs.entity.get_eye_y",parameters:[[]],returns:["Number"],static:!1},{name:"getBoundingBox",description:"figura.docs.entity.get_bounding_box",parameters:[[]],returns:["Vector3"],static:!1},{name:"isInRain",description:"figura.docs.entity.is_in_rain",parameters:[[]],returns:["Boolean"],static:!1},{name:"isUnderwater",description:"figura.docs.entity.is_underwater",parameters:[[]],returns:["Boolean"],static:!1},{name:"isInWater",description:"figura.docs.entity.is_in_water",parameters:[[]],returns:["Boolean"],static:!1},{name:"isSilent",description:"figura.docs.entity.is_silent",parameters:[[]],returns:["Boolean"],static:!1},{name:"hasAvatar",description:"figura.docs.entity.has_avatar",parameters:[[]],returns:["Boolean"],static:!1},{name:"getEyeHeight",description:"figura.docs.entity.get_eye_height",parameters:[[]],returns:["Number"],static:!1},{name:"isSprinting",description:"figura.docs.entity.is_sprinting",parameters:[[]],returns:["Boolean"],static:!1},{name:"isGlowing",description:"figura.docs.entity.is_glowing",parameters:[[]],returns:["Boolean"],static:!1},{name:"isInvisible",description:"figura.docs.entity.is_invisible",parameters:[[]],returns:["Boolean"],static:!1},{name:"isWet",description:"figura.docs.entity.is_wet",parameters:[[]],returns:["Boolean"],static:!1},{name:"getTargetedBlock",description:"figura.docs.entity.get_targeted_block",parameters:[[],[{name:"ignoreLiquids",type:"Boolean"}],[{name:"ignoreLiquids",type:"Boolean"},{name:"distance",type:"Number"}]],returns:["BlockState","BlockState","BlockState"],static:!1},{name:"getVariable",description:"figura.docs.entity.get_variable",parameters:[[{name:"key",type:"String"}]],returns:["AnyType"],static:!1}],fields:[],category:"player",metatable:{}},LivingEntityAPI:{name:"LivingEntityAPI",description:"figura.docs.living_entity",parent:"EntityAPI",methods:[{name:"getSwingDuration",description:"figura.docs.living_entity.get_swing_duration",parameters:[[]],returns:["Integer"],static:!1},{name:"getHealth",description:"figura.docs.living_entity.get_health",parameters:[[]],returns:["Number"],static:!1},{name:"getMaxHealth",description:"figura.docs.living_entity.get_max_health",parameters:[[]],returns:["Number"],static:!1},{name:"getDeathTime",description:"figura.docs.living_entity.get_death_time",parameters:[[]],returns:["Number"],static:!1},{name:"getArmor",description:"figura.docs.living_entity.get_armor",parameters:[[]],returns:["Number"],static:!1},{name:"getHeldItem",description:"figura.docs.living_entity.get_held_item",parameters:[[],[{name:"offhand",type:"Boolean"}]],returns:["ItemStack","ItemStack"],static:!1},{name:"getActiveItem",description:"figura.docs.living_entity.get_active_item",parameters:[[]],returns:["ItemStack"],static:!1},{name:"getActiveItemTime",description:"figura.docs.living_entity.get_active_item_time",parameters:[[]],returns:["Integer"],static:!1},{name:"getBodyYaw",description:"figura.docs.living_entity.get_body_yaw",parameters:[[],[{name:"delta",type:"Number"}]],returns:["Number","Number"],static:!1},{name:"getSwingArm",description:"figura.docs.living_entity.get_swing_arm",parameters:[[]],returns:["String"],static:!1},{name:"getStatusEffects",description:"figura.docs.living_entity.get_status_effects",parameters:[[]],returns:["Table"],static:!1},{name:"isLeftHanded",description:"figura.docs.living_entity.is_left_handed",parameters:[[]],returns:["Boolean"],static:!1},{name:"isUsingItem",description:"figura.docs.living_entity.is_using_item",parameters:[[]],returns:["Boolean"],static:!1},{name:"isClimbing",description:"figura.docs.living_entity.is_climbing",parameters:[[]],returns:["Boolean"],static:!1},{name:"getActiveHand",description:"figura.docs.living_entity.get_active_hand",parameters:[[]],returns:["String"],static:!1},{name:"getArrowCount",description:"figura.docs.living_entity.get_arrow_count",parameters:[[]],returns:["Integer"],static:!1},{name:"getStingerCount",description:"figura.docs.living_entity.get_stinger_count",parameters:[[]],returns:["Integer"],static:!1},{name:"isSwingingArm",description:"figura.docs.living_entity.is_swinging_arm",parameters:[[]],returns:["Boolean"],static:!1},{name:"getSwingTime",description:"figura.docs.living_entity.get_swing_time",parameters:[[]],returns:["Integer"],static:!1},{name:"getName",description:"figura.docs.entity.get_name",parameters:[[]],returns:["String"],static:!1},{name:"getType",description:"figura.docs.entity.get_type",parameters:[[]],returns:["String"],static:!1},{name:"isLoaded",description:"figura.docs.entity.is_loaded",parameters:[[]],returns:["Boolean"],static:!1},{name:"getItem",description:"figura.docs.entity.get_item",parameters:[[{name:"index",type:"Integer"}]],returns:["ItemStack"],static:!1},{name:"getNbt",description:"figura.docs.entity.get_nbt",parameters:[[]],returns:["Table"],static:!1},{name:"getPose",description:"figura.docs.entity.get_pose",parameters:[[]],returns:["String"],static:!1},{name:"getPos",description:"figura.docs.entity.get_pos",parameters:[[],[{name:"delta",type:"Number"}]],returns:["Vector3","Vector3"],static:!1},{name:"getVehicle",description:"figura.docs.entity.get_vehicle",parameters:[[]],returns:["EntityAPI"],static:!1},{name:"getRot",description:"figura.docs.entity.get_rot",parameters:[[],[{name:"delta",type:"Number"}]],returns:["Vector2","Vector2"],static:!1},{name:"getUUID",description:"figura.docs.entity.get_uuid",parameters:[[]],returns:["String"],static:!1},{name:"isHamburger",description:"figura.docs.entity.is_hamburger",parameters:[[]],returns:["Boolean"],static:!1},{name:"getLookDir",description:"figura.docs.entity.get_look_dir",parameters:[[]],returns:["Vector3"],static:!1},{name:"getFrozenTicks",description:"figura.docs.entity.get_frozen_ticks",parameters:[[]],returns:["Integer"],static:!1},{name:"getVelocity",description:"figura.docs.entity.get_velocity",parameters:[[]],returns:["Vector3"],static:!1},{name:"getMaxAir",description:"figura.docs.entity.get_max_air",parameters:[[]],returns:["Integer"],static:!1},{name:"getFireTicks",description:"figura.docs.entity.get_fire_ticks",parameters:[[]],returns:["Integer"],static:!1},{name:"getDimensionName",description:"figura.docs.entity.get_dimension_name",parameters:[[]],returns:["String"],static:!1},{name:"getAir",description:"figura.docs.entity.get_air",parameters:[[]],returns:["Integer"],static:!1},{name:"isInLava",description:"figura.docs.entity.is_in_lava",parameters:[[]],returns:["Boolean"],static:!1},{name:"isOnFire",description:"figura.docs.entity.is_on_fire",parameters:[[]],returns:["Boolean"],static:!1},{name:"isOnGround",description:"figura.docs.entity.is_on_ground",parameters:[[]],returns:["Boolean"],static:!1},{name:"isSneaking",description:"figura.docs.entity.is_sneaking",parameters:[[]],returns:["Boolean"],static:!1},{name:"getEyeY",description:"figura.docs.entity.get_eye_y",parameters:[[]],returns:["Number"],static:!1},{name:"getBoundingBox",description:"figura.docs.entity.get_bounding_box",parameters:[[]],returns:["Vector3"],static:!1},{name:"isInRain",description:"figura.docs.entity.is_in_rain",parameters:[[]],returns:["Boolean"],static:!1},{name:"isUnderwater",description:"figura.docs.entity.is_underwater",parameters:[[]],returns:["Boolean"],static:!1},{name:"isInWater",description:"figura.docs.entity.is_in_water",parameters:[[]],returns:["Boolean"],static:!1},{name:"isSilent",description:"figura.docs.entity.is_silent",parameters:[[]],returns:["Boolean"],static:!1},{name:"hasAvatar",description:"figura.docs.entity.has_avatar",parameters:[[]],returns:["Boolean"],static:!1},{name:"getEyeHeight",description:"figura.docs.entity.get_eye_height",parameters:[[]],returns:["Number"],static:!1},{name:"isSprinting",description:"figura.docs.entity.is_sprinting",parameters:[[]],returns:["Boolean"],static:!1},{name:"isGlowing",description:"figura.docs.entity.is_glowing",parameters:[[]],returns:["Boolean"],static:!1},{name:"isInvisible",description:"figura.docs.entity.is_invisible",parameters:[[]],returns:["Boolean"],static:!1},{name:"isWet",description:"figura.docs.entity.is_wet",parameters:[[]],returns:["Boolean"],static:!1},{name:"getTargetedBlock",description:"figura.docs.entity.get_targeted_block",parameters:[[],[{name:"ignoreLiquids",type:"Boolean"}],[{name:"ignoreLiquids",type:"Boolean"},{name:"distance",type:"Number"}]],returns:["BlockState","BlockState","BlockState"],static:!1},{name:"getVariable",description:"figura.docs.entity.get_variable",parameters:[[{name:"key",type:"String"}]],returns:["AnyType"],static:!1}],fields:[],category:"player",metatable:{}},PlayerAPI:{name:"PlayerAPI",description:"figura.docs.player",parent:"LivingEntityAPI",methods:[{name:"getExperienceLevel",description:"figura.docs.player.get_experience_level",parameters:[[]],returns:["Number"],static:!1,example:{content:`if player:getExperienceLevel() == 30 then
  log("You have 30 levels")
end`,author:"JimmyHelp"}},{name:"isFlying",description:"figura.docs.player.is_flying",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isFlying() then
  log("You're flying")
end`,author:"JimmyHelp"}},{name:"getModelType",description:"figura.docs.player.get_model_type",parameters:[[]],returns:["String"],static:!1,example:{content:`if player:getModelType() == "DEFAULT" then
  log("You're Steve")
end`,author:"JimmyHelp"}},{name:"getFood",description:"figura.docs.player.get_food",parameters:[[]],returns:["Integer"],static:!1,example:{content:`if player:getFood() == 0 then
  log("You're starving")
end`,author:"JimmyHelp"}},{name:"getSaturation",description:"figura.docs.player.get_saturation",parameters:[[]],returns:["Number"],static:!1,example:{content:`if player:getSaturation() == 20 then
  log("Your saturation is 20")
end`,author:"JimmyHelp"}},{name:"isSkinLayerVisible",description:"figura.docs.player.is_skin_layer_visible",parameters:[[{name:"part",type:"String"}]],returns:["Boolean"],static:!1,example:{content:`if player:isSkinLayerVisible("HAT") then
  log("Your hat's on")
end`,author:"JimmyHelp"}},{name:"getGamemode",description:"figura.docs.player.get_gamemode",parameters:[[]],returns:["String | nil"],static:!1,example:{content:`if player:getGamemode() and player:getGamemode() == "SURVIVAL" then
  log("You're in survival mode")
end`,author:"JimmyHelp"}},{name:"getExperienceProgress",description:"figura.docs.player.get_experience_progress",parameters:[[]],returns:["Number"],static:!1,example:{content:`if player:getExperienceProgress() > .5 then
   log("You're over halfway to the next level")
 end`,author:"JimmyHelp"}},{name:"getSwingDuration",description:"figura.docs.living_entity.get_swing_duration",parameters:[[]],returns:["Integer"],static:!1},{name:"getHealth",description:"figura.docs.living_entity.get_health",parameters:[[]],returns:["Number"],static:!1,example:{content:`if player:getHealth() == 20 then
  log("You're at full health")
end`,author:"JimmyHelp"}},{name:"getMaxHealth",description:"figura.docs.living_entity.get_max_health",parameters:[[]],returns:["Number"],static:!1,example:{content:`if player:getMaxHealth() == 20 then
  log("You're healthy")
end`,author:"JimmyHelp"}},{name:"getDeathTime",description:"figura.docs.living_entity.get_death_time",parameters:[[]],returns:["Number"],static:!1,example:{content:`if player:getDeathTime() > 0 then
  log("You're dead")
end`,author:"JimmyHelp"}},{name:"getArmor",description:"figura.docs.living_entity.get_armor",parameters:[[]],returns:["Number"],static:!1,example:{content:`if player:getArmor() == 20 then
  log("You have max armor points")
end`,author:"JimmyHelp"}},{name:"getHeldItem",description:"figura.docs.living_entity.get_held_item",parameters:[[],[{name:"offhand",type:"Boolean"}]],returns:["ItemStack","ItemStack"],static:!1,example:{content:`if player:getHeldItem(false).id == "minecraft:diamond_sword" then
  log("You're holding a diamond sword")
end`,author:"JimmyHelp"}},{name:"getActiveItem",description:"figura.docs.living_entity.get_active_item",parameters:[[]],returns:["ItemStack"],static:!1,example:{content:`if player:getActiveItem().id == "minecraft:bow" then
  log("You're drawing back a bow")
end`,author:"JimmyHelp"}},{name:"getActiveItemTime",description:"figura.docs.living_entity.get_active_item_time",parameters:[[]],returns:["Integer"],static:!1},{name:"getBodyYaw",description:"figura.docs.living_entity.get_body_yaw",parameters:[[],[{name:"delta",type:"Number"}]],returns:["Number","Number"],static:!1,example:{content:"models:setRot(0,player:getBodyYaw())",author:"JimmyHelp"}},{name:"getSwingArm",description:"figura.docs.living_entity.get_swing_arm",parameters:[[]],returns:["String"],static:!1},{name:"getStatusEffects",description:"figura.docs.living_entity.get_status_effects",parameters:[[]],returns:["Table"],static:!1,example:{content:`for i, effect in ipairs(player:getStatusEffects()) do
    if effect.name == "effect.minecraft.night_vision" then
        log("Night vision")
    end
end`,author:"JimmyHelp"}},{name:"isLeftHanded",description:"figura.docs.living_entity.is_left_handed",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isLeftHanded() then
  log("You're left handed")
end`,author:"JimmyHelp"}},{name:"isUsingItem",description:"figura.docs.living_entity.is_using_item",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isUsingItem() then
  log("You're using an item")
end`,author:"JimmyHelp"}},{name:"isClimbing",description:"figura.docs.living_entity.is_climbing",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isClimbing() then
  log("You're climbing")
end`,author:"JimmyHelp"}},{name:"getActiveHand",description:"figura.docs.living_entity.get_active_hand",parameters:[[]],returns:["String"],static:!1,example:{content:`if player:getActiveHand() == "MAIN_HAND" then
  log("You're using your main hand")
end`,author:"JimmyHelp"}},{name:"getArrowCount",description:"figura.docs.living_entity.get_arrow_count",parameters:[[]],returns:["Integer"],static:!1,example:{content:`if player:getArrowCount() > 0 then
  log("You've been shot")
end`,author:"JimmyHelp"}},{name:"getStingerCount",description:"figura.docs.living_entity.get_stinger_count",parameters:[[]],returns:["Integer"],static:!1,example:{content:`if player:getStingerCount() > 0 then
  log("You've been stung")
end`,author:"JimmyHelp"}},{name:"isSwingingArm",description:"figura.docs.living_entity.is_swinging_arm",parameters:[[]],returns:["Boolean"],static:!1},{name:"getSwingTime",description:"figura.docs.living_entity.get_swing_time",parameters:[[]],returns:["Integer"],static:!1},{name:"getName",description:"figura.docs.entity.get_name",parameters:[[]],returns:["String"],static:!1,example:{content:`if player:getName() == "JimmyHelp" then
  log("You're... me?")
end`,author:"JimmyHelp"}},{name:"getType",description:"figura.docs.entity.get_type",parameters:[[]],returns:["String"],static:!1,example:{content:`if player:getType() == "minecraft:player" then
  log("You're a player")
end`,author:"JimmyHelp"}},{name:"isLoaded",description:"figura.docs.entity.is_loaded",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isLoaded() then
  log("You're being loaded")
end`,author:"JimmyHelp"}},{name:"getItem",description:"figura.docs.entity.get_item",parameters:[[{name:"index",type:"Integer"}]],returns:["ItemStack"],static:!1,example:{content:`if player:getItem(5).id == "minecraft:elytra" then
  log("You're wearing an elytra")
end`,author:"JimmyHelp"}},{name:"getNbt",description:"figura.docs.entity.get_nbt",parameters:[[]],returns:["Table"],static:!1},{name:"getPose",description:"figura.docs.entity.get_pose",parameters:[[]],returns:["String"],static:!1,example:{content:`if player:getPose() == "CROUCHING" then
  log("You're crouching")
end`,author:"JimmyHelp"}},{name:"getPos",description:"figura.docs.entity.get_pos",parameters:[[],[{name:"delta",type:"Number"}]],returns:["Vector3","Vector3"],static:!1,example:{content:"models:setPos(player:getPos())",author:"JimmyHelp"}},{name:"getVehicle",description:"figura.docs.entity.get_vehicle",parameters:[[]],returns:["EntityAPI"],static:!1,example:{content:`if player:getVehicle() and player:getVehicle():getType() == "minecraft:pig" then
  log("You're riding a pig")
end`,author:"JimmyHelp"}},{name:"getRot",description:"figura.docs.entity.get_rot",parameters:[[],[{name:"delta",type:"Number"}]],returns:["Vector2","Vector2"],static:!1,example:{content:"models:setRot(player:getRot())",author:"JimmyHelp"}},{name:"getUUID",description:"figura.docs.entity.get_uuid",parameters:[[]],returns:["String"],static:!1,example:{content:`if player:getUUID() == "5003b2ce-7a8d-4c56-8b91-ec705985fe08" then
  log("You're... me?")
end`,author:"JimmyHelp"}},{name:"isHamburger",description:"figura.docs.entity.is_hamburger",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isHamburger() then
  log("You're hamburger")
end`,author:"JimmyHelp"}},{name:"getLookDir",description:"figura.docs.entity.get_look_dir",parameters:[[]],returns:["Vector3"],static:!1,example:{content:"models:setRot(player:getLookDir())",author:"JimmyHelp"}},{name:"getFrozenTicks",description:"figura.docs.entity.get_frozen_ticks",parameters:[[]],returns:["Integer"],static:!1,example:{content:`if player:getFrozenTicks() == 140 then
  log("You're being frozen solid")
end`,author:"JimmyHelp"}},{name:"getVelocity",description:"figura.docs.entity.get_velocity",parameters:[[]],returns:["Vector3"],static:!1,example:{content:`if player:getVelocity():length() > 0 then
  log("You're moving in any direction")
end`,author:"JimmyHelp"}},{name:"getMaxAir",description:"figura.docs.entity.get_max_air",parameters:[[]],returns:["Integer"],static:!1,example:{content:`if player:getMaxAir() == 300 then
  log("You've got healthy lungs")
end`,author:"JimmyHelp"}},{name:"getFireTicks",description:"figura.docs.entity.get_fire_ticks",parameters:[[]],returns:["Integer"],static:!1,example:{content:`if player:getFireTicks() == 1 then
  log("You're in a fire (returns -20 if not in a fire, the description is misleading)")
end`,author:"JimmyHelp"}},{name:"getDimensionName",description:"figura.docs.entity.get_dimension_name",parameters:[[]],returns:["String"],static:!1,example:{content:`if player:getDimensionName() == "minecraft:overworld" then
  log("You're in the Overworld")
end`,author:"JimmyHelp"}},{name:"getAir",description:"figura.docs.entity.get_air",parameters:[[]],returns:["Integer"],static:!1,example:{content:`if player:getAir() < 0 then
  log("You're drowning")
end`,author:"JimmyHelp"}},{name:"isInLava",description:"figura.docs.entity.is_in_lava",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isInLava() then
  log("You're in lava")
end`,author:"JimmyHelp"}},{name:"isOnFire",description:"figura.docs.entity.is_on_fire",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isOnFire() then
  log("You're on fire")
end`,author:"JimmyHelp"}},{name:"isOnGround",description:"figura.docs.entity.is_on_ground",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isOnGround() then
  log("You're on the ground")
end`,author:"JimmyHelp"}},{name:"isSneaking",description:"figura.docs.entity.is_sneaking",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isSneaking() then
  log("You're sneaking")
end`,author:"JimmyHelp"}},{name:"getEyeY",description:"figura.docs.entity.get_eye_y",parameters:[[]],returns:["Number"],static:!1,example:{content:"models:setPos(0,player:getEyeY())",author:"JimmyHelp"}},{name:"getBoundingBox",description:"figura.docs.entity.get_bounding_box",parameters:[[]],returns:["Vector3"],static:!1,example:{content:"log(player:getBoundingBox())",author:"JimmyHelp"}},{name:"isInRain",description:"figura.docs.entity.is_in_rain",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isInRain() then
  log("You're in rain")
end`,author:"JimmyHelp"}},{name:"isUnderwater",description:"figura.docs.entity.is_underwater",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isUnderwater() then
  log("You're underwater")
end`,author:"JimmyHelp"}},{name:"isInWater",description:"figura.docs.entity.is_in_water",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isInWater() then
  log("You're in water")
end`,author:"JimmyHelp"}},{name:"isSilent",description:"figura.docs.entity.is_silent",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isSilent() then
  log("You're silent")
end`,author:"JimmyHelp"}},{name:"hasAvatar",description:"figura.docs.entity.has_avatar",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:hasAvatar() then
  log("You have an avatar")
end`,author:"JimmyHelp"}},{name:"getEyeHeight",description:"figura.docs.entity.get_eye_height",parameters:[[]],returns:["Number"],static:!1,example:{content:"models:setPos(0,player:getEyeHeight())",author:"JimmyHelp"}},{name:"isSprinting",description:"figura.docs.entity.is_sprinting",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isSprinting() then
  log("You're sprinting")
end`,author:"JimmyHelp"}},{name:"isGlowing",description:"figura.docs.entity.is_glowing",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isGlowing() then
  log("You're glowing")
end`,author:"JimmyHelp"}},{name:"isInvisible",description:"figura.docs.entity.is_invisible",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isInvisible() then
  log("You're invisible")
end`,author:"JimmyHelp"}},{name:"isWet",description:"figura.docs.entity.is_wet",parameters:[[]],returns:["Boolean"],static:!1,example:{content:`if player:isWet() then
  log("You're touching water")
end`,author:"JimmyHelp"}},{name:"getTargetedBlock",description:"figura.docs.entity.get_targeted_block",parameters:[[],[{name:"ignoreLiquids",type:"Boolean"}],[{name:"ignoreLiquids",type:"Boolean"},{name:"distance",type:"Number"}]],returns:["BlockState","BlockState","BlockState"],static:!1,example:{content:`if player:getTargetedBlock(true,4.5).id == "minecraft:grass_block" then
  log("You're looking at grass")
end`,author:"JimmyHelp"}},{name:"getVariable",description:"figura.docs.entity.get_variable",parameters:[[{name:"key",type:"String"}]],returns:["AnyType"],static:!1}],fields:[],category:"player",metatable:{}},EventsAPI:{name:"EventsAPI",description:"figura.docs.events",methods:[],fields:[{name:"ENTITY_INIT",description:"figura.docs.events.entity_init",type:"Event",editable:!1},{name:"TICK",description:"figura.docs.events.tick",type:"Event",editable:!1},{name:"WORLD_TICK",description:"figura.docs.events.world_tick",type:"Event",editable:!1},{name:"RENDER",description:"figura.docs.events.render",type:"Event",editable:!1},{name:"POST_RENDER",description:"figura.docs.events.post_render",type:"Event",editable:!1},{name:"WORLD_RENDER",description:"figura.docs.events.world_render",type:"Event",editable:!1},{name:"POST_WORLD_RENDER",description:"figura.docs.events.post_world_render",type:"Event",editable:!1},{name:"CHAT_SEND_MESSAGE",description:"figura.docs.events.chat_send_message",type:"Event",editable:!1},{name:"CHAT_RECEIVE_MESSAGE",description:"figura.docs.events.chat_receive_message",type:"Event",editable:!1},{name:"SKULL_RENDER",description:"figura.docs.events.skull_render",type:"Event",editable:!1},{name:"MOUSE_SCROLL",description:"figura.docs.events.mouse_scroll",type:"Event",editable:!1},{name:"USE_ITEM",description:"figura.docs.events.use_item",type:"Event",editable:!1}],category:"events",metatable:{}},Event:{name:"Event",description:"figura.docs.event",methods:[{name:"remove",description:"figura.docs.event.remove",parameters:[[{name:"name",type:"String"}]],returns:["Integer"],static:!1},{name:"clear",description:"figura.docs.event.clear",parameters:[[]],returns:["nil"],static:!1},{name:"register",description:"figura.docs.event.register",parameters:[[{name:"func",type:"Function"}],[{name:"func",type:"Function"},{name:"name",type:"String"}]],returns:["nil","nil"],static:!1}],fields:[],category:"events",metatable:{}},KeybindAPI:{name:"KeybindAPI",description:"figura.docs.keybind_api",methods:[{name:"create",description:"figura.docs.keybind_api.create",parameters:[[{name:"name",type:"String"},{name:"key",type:"Keybinds"}],[{name:"name",type:"String"},{name:"key",type:"Keybinds"},{name:"gui",type:"Boolean"}]],returns:["Keybind","Keybind"],static:!1},{name:"getVanillaKey",description:"figura.docs.keybind_api.get_vanilla_key",parameters:[[{name:"id",type:"KeyIDs"}]],returns:["String"],static:!1}],fields:[],category:"keybind",metatable:{}},Keybind:{name:"Keybind",description:"figura.docs.keybind",methods:[{name:"getName",description:"figura.docs.keybind.get_name",parameters:[[]],returns:["String"],static:!1},{name:"getKey",description:"figura.docs.keybind.get_key",parameters:[[]],returns:["String"],static:!1},{name:"isDefault",description:"figura.docs.keybind.is_default",parameters:[[]],returns:["Boolean"],static:!1},{name:"getKeyName",description:"figura.docs.keybind.get_key_name",parameters:[[]],returns:["String"],static:!1},{name:"isPressed",description:"figura.docs.keybind.is_pressed",parameters:[[]],returns:["Boolean"],static:!1},{name:"setKey",description:"figura.docs.keybind.set_key",parameters:[[{name:"key",type:"String"}]],returns:["nil"],static:!1}],fields:[{name:"onPress",description:"figura.docs.keybind.on_press",type:"Function",editable:!0},{name:"onRelease",description:"figura.docs.keybind.on_release",type:"Function",editable:!0},{name:"enabled",description:"figura.docs.keybind.enabled",type:"Boolean",editable:!0},{name:"gui",description:"figura.docs.keybind.gui",type:"Boolean",editable:!0}],category:"keybind",metatable:{}},VectorsAPI:{name:"VectorsAPI",description:"figura.docs.vectors",methods:[{name:"vec",description:"figura.docs.vectors.vec",parameters:[[{name:"x",type:"Number"},{name:"y",type:"Number"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"},{name:"t",type:"Number"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"},{name:"t",type:"Number"},{name:"h",type:"Number"}]],returns:["Vector2","Vector3","Vector4","Vector5","Vector6"],static:!0},{name:"vec6",description:"figura.docs.vectors.vec6",parameters:[[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"},{name:"t",type:"Number"},{name:"h",type:"Number"}]],returns:["Vector6"],static:!0},{name:"vec5",description:"figura.docs.vectors.vec5",parameters:[[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"},{name:"t",type:"Number"}]],returns:["Vector5"],static:!0},{name:"hexToRGB",description:"figura.docs.vectors.hex_to_rgb",parameters:[[{name:"hex",type:"String"}]],returns:["Vector3"],static:!0},{name:"rotateAroundAxis",description:"figura.docs.vectors.rotate_around_axis",parameters:[[{name:"angle",type:"Number"},{name:"vec",type:"Vector3"},{name:"axis",type:"Vector3"}],[{name:"angle",type:"Number"},{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"axis",type:"Vector3"}],[{name:"angle",type:"Number"},{name:"vec",type:"Vector3"},{name:"axisX",type:"Number"},{name:"axisY",type:"Number"},{name:"axisZ",type:"Number"}],[{name:"angle",type:"Number"},{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"axisX",type:"Number"},{name:"axisY",type:"Number"},{name:"axisZ",type:"Number"}]],returns:["Vector3","Vector3","Vector3","Vector3"],static:!0},{name:"toCameraSpace",description:"figura.docs.vectors.to_camera_space",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Vector3","Vector3"],static:!0},{name:"worldToScreenSpace",description:"figura.docs.vectors.world_to_screen_space",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Vector4","Vector4"],static:!0},{name:"rgbToHex",description:"figura.docs.vectors.rgb_to_hex",parameters:[[{name:"rgb",type:"Vector3"}],[{name:"r",type:"Number"},{name:"g",type:"Number"},{name:"b",type:"Number"}]],returns:["String","String"],static:!0},{name:"intToRGB",description:"figura.docs.vectors.int_to_rgb",parameters:[[{name:"color",type:"Integer"}]],returns:["Vector3"],static:!0},{name:"rgbToHSV",description:"figura.docs.vectors.rgb_to_hsv",parameters:[[{name:"rgb",type:"Vector3"}],[{name:"r",type:"Number"},{name:"g",type:"Number"},{name:"b",type:"Number"}]],returns:["Vector3","Vector3"],static:!0},{name:"hsvToRGB",description:"figura.docs.vectors.hsv_to_rgb",parameters:[[{name:"hsv",type:"Vector3"}],[{name:"h",type:"Number"},{name:"s",type:"Number"},{name:"v",type:"Number"}]],returns:["Vector3","Vector3"],static:!0},{name:"vec2",description:"figura.docs.vectors.vec2",parameters:[[{name:"x",type:"Number"},{name:"y",type:"Number"}]],returns:["Vector2"],static:!0},{name:"vec3",description:"figura.docs.vectors.vec3",parameters:[[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Vector3"],static:!0},{name:"vec4",description:"figura.docs.vectors.vec4",parameters:[[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"}]],returns:["Vector4"],static:!0},{name:"rgbToInt",description:"figura.docs.vectors.rgb_to_int",parameters:[[{name:"rgb",type:"Vector3"}],[{name:"r",type:"Number"},{name:"g",type:"Number"},{name:"b",type:"Number"}]],returns:["Integer","Integer"],static:!0}],fields:[],category:"vectors",metatable:{}},Vector2:{name:"Vector2",description:"figura.docs.vector2",methods:[{name:"add",description:"figura.docs.vector_n.add",parameters:[[{name:"vec",type:"Vector2"}],[{name:"x",type:"Number"},{name:"y",type:"Number"}]],returns:["Vector2","Vector2"],static:!1},{name:"length",description:"figura.docs.vector_n.length",parameters:[[]],returns:["Number"],static:!1},{name:"floor",description:"figura.docs.vector_n.floor",parameters:[[]],returns:["Vector2"],static:!1},{name:"ceil",description:"figura.docs.vector_n.ceil",parameters:[[]],returns:["Vector2"],static:!1},{name:"scale",description:"figura.docs.vector_n.scale",parameters:[[{name:"factor",type:"Number"}]],returns:["Vector2"],static:!1},{name:"offset",description:"figura.docs.vector_n.offset",parameters:[[{name:"factor",type:"Number"}]],returns:["Vector2"],static:!1},{name:"transform",description:"figura.docs.vector_n.transform",parameters:[[{name:"mat",type:"Matrix2"}]],returns:["Vector2"],static:!1},{name:"dot",description:"figura.docs.vector_n.dot",parameters:[[{name:"vec",type:"Vector2"}]],returns:["Number"],static:!1},{name:"set",description:"figura.docs.vector_n.set",parameters:[[{name:"vec",type:"Vector2"}],[{name:"x",type:"Number"},{name:"y",type:"Number"}]],returns:["Vector2","Vector2"],static:!1},{name:"copy",description:"figura.docs.vector_n.copy",parameters:[[]],returns:["Vector2"],static:!1},{name:"normalize",description:"figura.docs.vector_n.normalize",parameters:[[]],returns:["Vector2"],static:!1},{name:"reset",description:"figura.docs.vector_n.reset",parameters:[[]],returns:["Vector2"],static:!1},{name:"reduce",description:"figura.docs.vector_n.reduce",parameters:[[{name:"vec",type:"Vector2"}],[{name:"x",type:"Number"},{name:"y",type:"Number"}]],returns:["Vector2","Vector2"],static:!1},{name:"normalized",description:"figura.docs.vector_n.normalized",parameters:[[]],returns:["Vector2"],static:!1},{name:"sub",description:"figura.docs.vector_n.sub",parameters:[[{name:"vec",type:"Vector2"}],[{name:"x",type:"Number"},{name:"y",type:"Number"}]],returns:["Vector2","Vector2"],static:!1},{name:"mul",description:"figura.docs.vector_n.mul",parameters:[[{name:"vec",type:"Vector2"}],[{name:"x",type:"Number"},{name:"y",type:"Number"}]],returns:["Vector2","Vector2"],static:!1},{name:"div",description:"figura.docs.vector_n.div",parameters:[[{name:"vec",type:"Vector2"}],[{name:"x",type:"Number"},{name:"y",type:"Number"}]],returns:["Vector2","Vector2"],static:!1},{name:"clamped",description:"figura.docs.vector_n.clamped",parameters:[[{name:"minLength",type:"Number"},{name:"maxLength",type:"Number"}]],returns:["Vector2"],static:!1},{name:"unpack",description:"figura.docs.vector_n.unpack",parameters:[[]],returns:["[D"],static:!1},{name:"lengthSquared",description:"figura.docs.vector_n.length_squared",parameters:[[]],returns:["Number"],static:!1},{name:"toRad",description:"figura.docs.vector_n.to_rad",parameters:[[]],returns:["Vector2"],static:!1},{name:"toDeg",description:"figura.docs.vector_n.to_deg",parameters:[[]],returns:["Vector2"],static:!1},{name:"clampLength",description:"figura.docs.vector_n.clamp_length",parameters:[[{name:"minLength",type:"Number"},{name:"maxLength",type:"Number"}]],returns:["Vector2"],static:!1},{name:"applyFunc",description:"figura.docs.vector_n.apply_func",parameters:[[{name:"func",type:"Function"}]],returns:["Vector2"],static:!1}],fields:[{name:"x",description:"figura.docs.vector_n.x",type:"Number",editable:!0},{name:"y",description:"figura.docs.vector_n.y",type:"Number",editable:!0}],category:"vectors",metatable:{__le:["Vector2"],__lt:["Vector2"],__len:[],__unm:[],__eq:["Vector2"],__mod:["Number","Vector2"],__div:["Number","Vector2"],__mul:["Number","Vector2","Matrix2"],__add:["Vector2","Number"],__sub:["Vector2","Number"]}},Vector3:{name:"Vector3",description:"figura.docs.vector3",methods:[{name:"add",description:"figura.docs.vector_n.add",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Vector3","Vector3"],static:!1},{name:"length",description:"figura.docs.vector_n.length",parameters:[[]],returns:["Number"],static:!1},{name:"floor",description:"figura.docs.vector_n.floor",parameters:[[]],returns:["Vector3"],static:!1},{name:"ceil",description:"figura.docs.vector_n.ceil",parameters:[[]],returns:["Vector3"],static:!1},{name:"scale",description:"figura.docs.vector_n.scale",parameters:[[{name:"factor",type:"Number"}]],returns:["Vector3"],static:!1},{name:"offset",description:"figura.docs.vector_n.offset",parameters:[[{name:"factor",type:"Number"}]],returns:["Vector3"],static:!1},{name:"transform",description:"figura.docs.vector_n.transform",parameters:[[{name:"mat",type:"Matrix3"}]],returns:["Vector3"],static:!1},{name:"dot",description:"figura.docs.vector_n.dot",parameters:[[{name:"vec",type:"Vector3"}]],returns:["Number"],static:!1},{name:"set",description:"figura.docs.vector_n.set",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Vector3","Vector3"],static:!1},{name:"copy",description:"figura.docs.vector_n.copy",parameters:[[]],returns:["Vector3"],static:!1},{name:"normalize",description:"figura.docs.vector_n.normalize",parameters:[[]],returns:["Vector3"],static:!1},{name:"reset",description:"figura.docs.vector_n.reset",parameters:[[]],returns:["Vector3"],static:!1},{name:"reduce",description:"figura.docs.vector_n.reduce",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Vector3","Vector3"],static:!1},{name:"normalized",description:"figura.docs.vector_n.normalized",parameters:[[]],returns:["Vector3"],static:!1},{name:"sub",description:"figura.docs.vector_n.sub",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Vector3","Vector3"],static:!1},{name:"mul",description:"figura.docs.vector_n.mul",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Vector3","Vector3"],static:!1},{name:"div",description:"figura.docs.vector_n.div",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Vector3","Vector3"],static:!1},{name:"clamped",description:"figura.docs.vector_n.clamped",parameters:[[{name:"minLength",type:"Number"},{name:"maxLength",type:"Number"}]],returns:["Vector3"],static:!1},{name:"unpack",description:"figura.docs.vector_n.unpack",parameters:[[]],returns:["[D"],static:!1},{name:"cross",description:"figura.docs.vector3.cross",parameters:[[{name:"other",type:"Vector3"}]],returns:["Vector3"],static:!1},{name:"lengthSquared",description:"figura.docs.vector_n.length_squared",parameters:[[]],returns:["Number"],static:!1},{name:"toRad",description:"figura.docs.vector_n.to_rad",parameters:[[]],returns:["Vector3"],static:!1},{name:"toDeg",description:"figura.docs.vector_n.to_deg",parameters:[[]],returns:["Vector3"],static:!1},{name:"clampLength",description:"figura.docs.vector_n.clamp_length",parameters:[[{name:"minLength",type:"Number"},{name:"maxLength",type:"Number"}]],returns:["Vector3"],static:!1},{name:"applyFunc",description:"figura.docs.vector_n.apply_func",parameters:[[{name:"func",type:"Function"}]],returns:["Vector3"],static:!1},{name:"augmented",description:"figura.docs.vector3.augmented",parameters:[[]],returns:["Vector4"],static:!1},{name:"crossed",description:"figura.docs.vector3.crossed",parameters:[[{name:"other",type:"Vector3"}]],returns:["Vector3"],static:!1}],fields:[{name:"x",description:"figura.docs.vector_n.x",type:"Number",editable:!0},{name:"y",description:"figura.docs.vector_n.y",type:"Number",editable:!0},{name:"z",description:"figura.docs.vector_n.z",type:"Number",editable:!0}],category:"vectors",metatable:{__le:["Vector3"],__lt:["Vector3"],__len:[],__unm:[],__eq:["Vector3"],__mod:["Number","Vector3"],__div:["Number","Vector3"],__mul:["Number","Vector3","Matrix3"],__add:["Vector3","Number"],__sub:["Vector3","Number"]}},Vector4:{name:"Vector4",description:"figura.docs.vector4",methods:[{name:"add",description:"figura.docs.vector_n.add",parameters:[[{name:"vec",type:"Vector4"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"}]],returns:["Vector4","Vector4"],static:!1},{name:"length",description:"figura.docs.vector_n.length",parameters:[[]],returns:["Number"],static:!1},{name:"floor",description:"figura.docs.vector_n.floor",parameters:[[]],returns:["Vector4"],static:!1},{name:"ceil",description:"figura.docs.vector_n.ceil",parameters:[[]],returns:["Vector4"],static:!1},{name:"scale",description:"figura.docs.vector_n.scale",parameters:[[{name:"factor",type:"Number"}]],returns:["Vector4"],static:!1},{name:"offset",description:"figura.docs.vector_n.offset",parameters:[[{name:"factor",type:"Number"}]],returns:["Vector4"],static:!1},{name:"transform",description:"figura.docs.vector_n.transform",parameters:[[{name:"mat",type:"Matrix4"}]],returns:["Vector4"],static:!1},{name:"dot",description:"figura.docs.vector_n.dot",parameters:[[{name:"vec",type:"Vector4"}]],returns:["Number"],static:!1},{name:"set",description:"figura.docs.vector_n.set",parameters:[[{name:"vec",type:"Vector4"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"}]],returns:["Vector4","Vector4"],static:!1},{name:"copy",description:"figura.docs.vector_n.copy",parameters:[[]],returns:["Vector4"],static:!1},{name:"normalize",description:"figura.docs.vector_n.normalize",parameters:[[]],returns:["Vector4"],static:!1},{name:"reset",description:"figura.docs.vector_n.reset",parameters:[[]],returns:["Vector4"],static:!1},{name:"reduce",description:"figura.docs.vector_n.reduce",parameters:[[{name:"vec",type:"Vector4"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"}]],returns:["Vector4","Vector4"],static:!1},{name:"normalized",description:"figura.docs.vector_n.normalized",parameters:[[]],returns:["Vector4"],static:!1},{name:"sub",description:"figura.docs.vector_n.sub",parameters:[[{name:"vec",type:"Vector4"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"}]],returns:["Vector4","Vector4"],static:!1},{name:"mul",description:"figura.docs.vector_n.mul",parameters:[[{name:"vec",type:"Vector4"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"}]],returns:["Vector4","Vector4"],static:!1},{name:"div",description:"figura.docs.vector_n.div",parameters:[[{name:"vec",type:"Vector4"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"}]],returns:["Vector4","Vector4"],static:!1},{name:"clamped",description:"figura.docs.vector_n.clamped",parameters:[[{name:"minLength",type:"Number"},{name:"maxLength",type:"Number"}]],returns:["Vector4"],static:!1},{name:"unpack",description:"figura.docs.vector_n.unpack",parameters:[[]],returns:["[D"],static:!1},{name:"lengthSquared",description:"figura.docs.vector_n.length_squared",parameters:[[]],returns:["Number"],static:!1},{name:"toRad",description:"figura.docs.vector_n.to_rad",parameters:[[]],returns:["Vector4"],static:!1},{name:"toDeg",description:"figura.docs.vector_n.to_deg",parameters:[[]],returns:["Vector4"],static:!1},{name:"clampLength",description:"figura.docs.vector_n.clamp_length",parameters:[[{name:"minLength",type:"Number"},{name:"maxLength",type:"Number"}]],returns:["Vector4"],static:!1},{name:"applyFunc",description:"figura.docs.vector_n.apply_func",parameters:[[{name:"func",type:"Function"}]],returns:["Vector4"],static:!1}],fields:[{name:"x",description:"figura.docs.vector_n.x",type:"Number",editable:!0},{name:"y",description:"figura.docs.vector_n.y",type:"Number",editable:!0},{name:"z",description:"figura.docs.vector_n.z",type:"Number",editable:!0},{name:"w",description:"figura.docs.vector_n.w",type:"Number",editable:!0}],category:"vectors",metatable:{__le:["Vector4"],__lt:["Vector4"],__len:[],__unm:[],__eq:["Vector4"],__mod:["Number","Vector4"],__div:["Number","Vector4"],__mul:["Number","Vector4","Matrix4"],__add:["Vector4","Number"],__sub:["Vector4","Number"]}},Vector5:{name:"Vector5",description:"figura.docs.vector5",methods:[{name:"add",description:"figura.docs.vector_n.add",parameters:[[{name:"vec",type:"Vector5"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"},{name:"t",type:"Number"}]],returns:["Vector5","Vector5"],static:!1},{name:"length",description:"figura.docs.vector_n.length",parameters:[[]],returns:["Number"],static:!1},{name:"floor",description:"figura.docs.vector_n.floor",parameters:[[]],returns:["Vector5"],static:!1},{name:"ceil",description:"figura.docs.vector_n.ceil",parameters:[[]],returns:["Vector5"],static:!1},{name:"scale",description:"figura.docs.vector_n.scale",parameters:[[{name:"factor",type:"Number"}]],returns:["Vector5"],static:!1},{name:"offset",description:"figura.docs.vector_n.offset",parameters:[[{name:"factor",type:"Number"}]],returns:["Vector5"],static:!1},{name:"dot",description:"figura.docs.vector_n.dot",parameters:[[{name:"vec",type:"Vector5"}]],returns:["Number"],static:!1},{name:"set",description:"figura.docs.vector_n.set",parameters:[[{name:"vec",type:"Vector5"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"},{name:"t",type:"Number"}]],returns:["Vector5","Vector5"],static:!1},{name:"copy",description:"figura.docs.vector_n.copy",parameters:[[]],returns:["Vector5"],static:!1},{name:"normalize",description:"figura.docs.vector_n.normalize",parameters:[[]],returns:["Vector5"],static:!1},{name:"reset",description:"figura.docs.vector_n.reset",parameters:[[]],returns:["Vector5"],static:!1},{name:"reduce",description:"figura.docs.vector_n.reduce",parameters:[[{name:"vec",type:"Vector5"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"},{name:"t",type:"Number"}]],returns:["Vector5","Vector5"],static:!1},{name:"normalized",description:"figura.docs.vector_n.normalized",parameters:[[]],returns:["Vector5"],static:!1},{name:"sub",description:"figura.docs.vector_n.sub",parameters:[[{name:"vec",type:"Vector5"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"},{name:"t",type:"Number"}]],returns:["Vector5","Vector5"],static:!1},{name:"mul",description:"figura.docs.vector_n.mul",parameters:[[{name:"vec",type:"Vector5"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"},{name:"t",type:"Number"}]],returns:["Vector5","Vector5"],static:!1},{name:"div",description:"figura.docs.vector_n.div",parameters:[[{name:"vec",type:"Vector5"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"},{name:"t",type:"Number"}]],returns:["Vector5","Vector5"],static:!1},{name:"clamped",description:"figura.docs.vector_n.clamped",parameters:[[{name:"minLength",type:"Number"},{name:"maxLength",type:"Number"}]],returns:["Vector5"],static:!1},{name:"unpack",description:"figura.docs.vector_n.unpack",parameters:[[]],returns:["[D"],static:!1},{name:"lengthSquared",description:"figura.docs.vector_n.length_squared",parameters:[[]],returns:["Number"],static:!1},{name:"toRad",description:"figura.docs.vector_n.to_rad",parameters:[[]],returns:["Vector5"],static:!1},{name:"toDeg",description:"figura.docs.vector_n.to_deg",parameters:[[]],returns:["Vector5"],static:!1},{name:"clampLength",description:"figura.docs.vector_n.clamp_length",parameters:[[{name:"minLength",type:"Number"},{name:"maxLength",type:"Number"}]],returns:["Vector5"],static:!1},{name:"applyFunc",description:"figura.docs.vector_n.apply_func",parameters:[[{name:"func",type:"Function"}]],returns:["Vector5"],static:!1}],fields:[{name:"x",description:"figura.docs.vector_n.x",type:"Number",editable:!0},{name:"y",description:"figura.docs.vector_n.y",type:"Number",editable:!0},{name:"z",description:"figura.docs.vector_n.z",type:"Number",editable:!0},{name:"w",description:"figura.docs.vector_n.w",type:"Number",editable:!0},{name:"t",description:"figura.docs.vector_n.t",type:"Number",editable:!0}],category:"vectors",metatable:{__le:["Vector5"],__lt:["Vector5"],__len:[],__unm:[],__eq:["Vector5"],__mod:["Number","Vector5"],__div:["Number","Vector5"],__mul:["Number","Vector5"],__add:["Vector5","Number"],__sub:["Vector5","Number"]}},Vector6:{name:"Vector6",description:"figura.docs.vector6",methods:[{name:"add",description:"figura.docs.vector_n.add",parameters:[[{name:"vec",type:"Vector6"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"},{name:"t",type:"Number"},{name:"h",type:"Number"}]],returns:["Vector6","Vector6"],static:!1},{name:"length",description:"figura.docs.vector_n.length",parameters:[[]],returns:["Number"],static:!1},{name:"floor",description:"figura.docs.vector_n.floor",parameters:[[]],returns:["Vector6"],static:!1},{name:"ceil",description:"figura.docs.vector_n.ceil",parameters:[[]],returns:["Vector6"],static:!1},{name:"scale",description:"figura.docs.vector_n.scale",parameters:[[{name:"factor",type:"Number"}]],returns:["Vector6"],static:!1},{name:"offset",description:"figura.docs.vector_n.offset",parameters:[[{name:"factor",type:"Number"}]],returns:["Vector6"],static:!1},{name:"dot",description:"figura.docs.vector_n.dot",parameters:[[{name:"vec",type:"Vector6"}]],returns:["Number"],static:!1},{name:"set",description:"figura.docs.vector_n.set",parameters:[[{name:"vec",type:"Vector6"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"},{name:"t",type:"Number"},{name:"h",type:"Number"}]],returns:["Vector6","Vector6"],static:!1},{name:"copy",description:"figura.docs.vector_n.copy",parameters:[[]],returns:["Vector6"],static:!1},{name:"normalize",description:"figura.docs.vector_n.normalize",parameters:[[]],returns:["Vector6"],static:!1},{name:"reset",description:"figura.docs.vector_n.reset",parameters:[[]],returns:["Vector6"],static:!1},{name:"reduce",description:"figura.docs.vector_n.reduce",parameters:[[{name:"vec",type:"Vector6"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"},{name:"t",type:"Number"},{name:"h",type:"Number"}]],returns:["Vector6","Vector6"],static:!1},{name:"normalized",description:"figura.docs.vector_n.normalized",parameters:[[]],returns:["Vector6"],static:!1},{name:"sub",description:"figura.docs.vector_n.sub",parameters:[[{name:"vec",type:"Vector6"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"},{name:"t",type:"Number"},{name:"h",type:"Number"}]],returns:["Vector6","Vector6"],static:!1},{name:"mul",description:"figura.docs.vector_n.mul",parameters:[[{name:"vec",type:"Vector6"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"},{name:"t",type:"Number"},{name:"h",type:"Number"}]],returns:["Vector6","Vector6"],static:!1},{name:"div",description:"figura.docs.vector_n.div",parameters:[[{name:"vec",type:"Vector6"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"},{name:"w",type:"Number"},{name:"t",type:"Number"},{name:"h",type:"Number"}]],returns:["Vector6","Vector6"],static:!1},{name:"clamped",description:"figura.docs.vector_n.clamped",parameters:[[{name:"minLength",type:"Number"},{name:"maxLength",type:"Number"}]],returns:["Vector6"],static:!1},{name:"unpack",description:"figura.docs.vector_n.unpack",parameters:[[]],returns:["[D"],static:!1},{name:"lengthSquared",description:"figura.docs.vector_n.length_squared",parameters:[[]],returns:["Number"],static:!1},{name:"toRad",description:"figura.docs.vector_n.to_rad",parameters:[[]],returns:["Vector6"],static:!1},{name:"toDeg",description:"figura.docs.vector_n.to_deg",parameters:[[]],returns:["Vector6"],static:!1},{name:"clampLength",description:"figura.docs.vector_n.clamp_length",parameters:[[{name:"minLength",type:"Number"},{name:"maxLength",type:"Number"}]],returns:["Vector6"],static:!1},{name:"applyFunc",description:"figura.docs.vector_n.apply_func",parameters:[[{name:"func",type:"Function"}]],returns:["Vector6"],static:!1}],fields:[{name:"x",description:"figura.docs.vector_n.x",type:"Number",editable:!0},{name:"y",description:"figura.docs.vector_n.y",type:"Number",editable:!0},{name:"z",description:"figura.docs.vector_n.z",type:"Number",editable:!0},{name:"w",description:"figura.docs.vector_n.w",type:"Number",editable:!0},{name:"t",description:"figura.docs.vector_n.t",type:"Number",editable:!0},{name:"h",description:"figura.docs.vector_n.h",type:"Number",editable:!0}],category:"vectors",metatable:{__le:["Vector6"],__lt:["Vector6"],__len:[],__unm:[],__eq:["Vector6"],__mod:["Number","Vector6"],__div:["Number","Vector6"],__mul:["Number","Vector6"],__add:["Vector6","Number"],__sub:["Vector6","Number"]}},MatricesAPI:{name:"MatricesAPI",description:"figura.docs.matrices",methods:[{name:"scale2",description:"figura.docs.matrices.scale2",parameters:[[{name:"vec",type:"Vector2"}],[{name:"x",type:"Number"},{name:"y",type:"Number"}]],returns:["Matrix2","Matrix2"],static:!0},{name:"mat3",description:"figura.docs.matrices.mat3",parameters:[[],[{name:"col1",type:"Vector3"},{name:"col2",type:"Vector3"},{name:"col3",type:"Vector3"}]],returns:["Matrix3","Matrix3"],static:!0},{name:"rotation3",description:"figura.docs.matrices.rotation3",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Matrix3","Matrix3"],static:!0},{name:"yRotation3",description:"figura.docs.matrices.y_rotation3",parameters:[[{name:"angle",type:"Number"}]],returns:["Matrix3"],static:!0},{name:"rotation2",description:"figura.docs.matrices.rotation2",parameters:[[{name:"angle",type:"Number"}]],returns:["Matrix2"],static:!0},{name:"zRotation3",description:"figura.docs.matrices.z_rotation3",parameters:[[{name:"angle",type:"Number"}]],returns:["Matrix3"],static:!0},{name:"mat4",description:"figura.docs.matrices.mat4",parameters:[[],[{name:"col1",type:"Vector4"},{name:"col2",type:"Vector4"},{name:"col3",type:"Vector4"},{name:"col4",type:"Vector4"}]],returns:["Matrix4","Matrix4"],static:!0},{name:"rotation4",description:"figura.docs.matrices.rotation4",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Matrix4","Matrix4"],static:!0},{name:"xRotation3",description:"figura.docs.matrices.x_rotation3",parameters:[[{name:"angle",type:"Number"}]],returns:["Matrix3"],static:!0},{name:"mat2",description:"figura.docs.matrices.mat2",parameters:[[],[{name:"col1",type:"Vector2"},{name:"col2",type:"Vector2"}]],returns:["Matrix2","Matrix2"],static:!0},{name:"zRotation4",description:"figura.docs.matrices.z_rotation4",parameters:[[{name:"angle",type:"Number"}]],returns:["Matrix4"],static:!0},{name:"scale3",description:"figura.docs.matrices.scale3",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Matrix3","Matrix3"],static:!0},{name:"translate3",description:"figura.docs.matrices.translate3",parameters:[[{name:"vec",type:"Vector2"}],[{name:"x",type:"Number"},{name:"y",type:"Number"}]],returns:["Matrix3","Matrix3"],static:!0},{name:"xRotation4",description:"figura.docs.matrices.x_rotation4",parameters:[[{name:"angle",type:"Number"}]],returns:["Matrix4"],static:!0},{name:"scale4",description:"figura.docs.matrices.scale4",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Matrix4","Matrix4"],static:!0},{name:"translate4",description:"figura.docs.matrices.translate4",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Matrix4","Matrix4"],static:!0},{name:"yRotation4",description:"figura.docs.matrices.y_rotation4",parameters:[[{name:"angle",type:"Number"}]],returns:["Matrix4"],static:!0}],fields:[],category:"matrices",metatable:{}},Matrix2:{name:"Matrix2",description:"figura.docs.matrix2",methods:[{name:"add",description:"figura.docs.matrix_n.add",parameters:[[{name:"other",type:"Matrix2"}]],returns:["Matrix2"],static:!1},{name:"scale",description:"figura.docs.matrix_n.scale",parameters:[[{name:"vec",type:"Vector2"}],[{name:"x",type:"Number"},{name:"y",type:"Number"}]],returns:["Matrix2","Matrix2"],static:!1},{name:"apply",description:"figura.docs.matrix_n.apply",parameters:[[{name:"x",type:"Number"}]],returns:["Number"],static:!1},{name:"set",description:"figura.docs.matrix_n.set",parameters:[[{name:"other",type:"Matrix2"}]],returns:["Matrix2"],static:!1},{name:"copy",description:"figura.docs.matrix_n.copy",parameters:[[]],returns:["Matrix2"],static:!1},{name:"reset",description:"figura.docs.matrix_n.reset",parameters:[[]],returns:["Matrix2"],static:!1},{name:"multiply",description:"figura.docs.matrix_n.multiply",parameters:[[{name:"other",type:"Matrix2"}]],returns:["Matrix2"],static:!1},{name:"rotate",description:"figura.docs.matrix_n.rotate",parameters:[[{name:"degrees",type:"Number"}]],returns:["Matrix2"],static:!1},{name:"sub",description:"figura.docs.matrix_n.sub",parameters:[[{name:"other",type:"Matrix2"}]],returns:["Matrix2"],static:!1},{name:"getColumn",description:"figura.docs.matrix_n.get_column",parameters:[[{name:"col",type:"Integer"}]],returns:["Vector2"],static:!1},{name:"inverted",description:"figura.docs.matrix_n.inverted",parameters:[[]],returns:["Matrix2"],static:!1},{name:"transpose",description:"figura.docs.matrix_n.transpose",parameters:[[]],returns:["Matrix2"],static:!1},{name:"invert",description:"figura.docs.matrix_n.invert",parameters:[[]],returns:["Matrix2"],static:!1},{name:"augmented",description:"figura.docs.matrix_n.augmented",parameters:[[]],returns:["Matrix3"],static:!1},{name:"transposed",description:"figura.docs.matrix_n.transposed",parameters:[[]],returns:["Matrix2"],static:!1},{name:"det",description:"figura.docs.matrix_n.det",parameters:[[]],returns:["Number"],static:!1},{name:"getRow",description:"figura.docs.matrix_n.get_row",parameters:[[{name:"row",type:"Integer"}]],returns:["Vector2"],static:!1},{name:"rightMultiply",description:"figura.docs.matrix_n.right_multiply",parameters:[[{name:"other",type:"Matrix2"}]],returns:["Matrix2"],static:!1},{name:"applyDir",description:"figura.docs.matrix_n.apply_dir",parameters:[[{name:"x",type:"Number"}]],returns:["Number"],static:!1}],fields:[],category:"matrices",metatable:{__le:["Matrix2"],__eq:["Matrix2"],__mul:["Number","Matrix2","Vector2"],__add:["Matrix2"],__sub:["Matrix2"],__len:[]}},Matrix3:{name:"Matrix3",description:"figura.docs.matrix3",methods:[{name:"add",description:"figura.docs.matrix_n.add",parameters:[[{name:"other",type:"Matrix3"}]],returns:["Matrix3"],static:!1},{name:"scale",description:"figura.docs.matrix_n.scale",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Matrix3","Matrix3"],static:!1},{name:"apply",description:"figura.docs.matrix_n.apply",parameters:[[{name:"vec",type:"Vector2"}],[{name:"x",type:"Number"},{name:"y",type:"Number"}]],returns:["Vector2","Vector2"],static:!1},{name:"set",description:"figura.docs.matrix_n.set",parameters:[[{name:"other",type:"Matrix3"}]],returns:["Matrix3"],static:!1},{name:"copy",description:"figura.docs.matrix_n.copy",parameters:[[]],returns:["Matrix3"],static:!1},{name:"reset",description:"figura.docs.matrix_n.reset",parameters:[[]],returns:["Matrix3"],static:!1},{name:"multiply",description:"figura.docs.matrix_n.multiply",parameters:[[{name:"other",type:"Matrix3"}]],returns:["Matrix3"],static:!1},{name:"rotate",description:"figura.docs.matrix_n.rotate",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Matrix3","Matrix3"],static:!1},{name:"sub",description:"figura.docs.matrix_n.sub",parameters:[[{name:"other",type:"Matrix3"}]],returns:["Matrix3"],static:!1},{name:"getColumn",description:"figura.docs.matrix_n.get_column",parameters:[[{name:"col",type:"Integer"}]],returns:["Vector3"],static:!1},{name:"inverted",description:"figura.docs.matrix_n.inverted",parameters:[[]],returns:["Matrix3"],static:!1},{name:"transpose",description:"figura.docs.matrix_n.transpose",parameters:[[]],returns:["Matrix3"],static:!1},{name:"invert",description:"figura.docs.matrix_n.invert",parameters:[[]],returns:["Matrix3"],static:!1},{name:"translate",description:"figura.docs.matrix_n.translate",parameters:[[{name:"vec",type:"Vector2"}],[{name:"x",type:"Number"},{name:"y",type:"Number"}]],returns:["Matrix3","Matrix3"],static:!1},{name:"augmented",description:"figura.docs.matrix_n.augmented",parameters:[[]],returns:["Matrix4"],static:!1},{name:"transposed",description:"figura.docs.matrix_n.transposed",parameters:[[]],returns:["Matrix3"],static:!1},{name:"det",description:"figura.docs.matrix_n.det",parameters:[[]],returns:["Number"],static:!1},{name:"getRow",description:"figura.docs.matrix_n.get_row",parameters:[[{name:"row",type:"Integer"}]],returns:["Vector3"],static:!1},{name:"rightMultiply",description:"figura.docs.matrix_n.right_multiply",parameters:[[{name:"other",type:"Matrix3"}]],returns:["Matrix3"],static:!1},{name:"applyDir",description:"figura.docs.matrix_n.apply_dir",parameters:[[{name:"vec",type:"Vector2"}],[{name:"x",type:"Number"},{name:"y",type:"Number"}]],returns:["Vector2","Vector2"],static:!1},{name:"rotateY",description:"figura.docs.matrix_n.rotate_y",parameters:[[{name:"degrees",type:"Number"}]],returns:["Matrix3"],static:!1},{name:"rotateZ",description:"figura.docs.matrix_n.rotate_z",parameters:[[{name:"degrees",type:"Number"}]],returns:["Matrix3"],static:!1},{name:"rotateX",description:"figura.docs.matrix_n.rotate_x",parameters:[[{name:"degrees",type:"Number"}]],returns:["Matrix3"],static:!1},{name:"deaugmented",description:"figura.docs.matrix_n.deaugmented",parameters:[[]],returns:["Matrix2"],static:!1}],fields:[],category:"matrices",metatable:{__le:["Matrix3"],__eq:["Matrix3"],__mul:["Number","Matrix3","Vector3"],__add:["Matrix3"],__sub:["Matrix3"],__len:[]}},Matrix4:{name:"Matrix4",description:"figura.docs.matrix4",methods:[{name:"add",description:"figura.docs.matrix_n.add",parameters:[[{name:"other",type:"Matrix4"}]],returns:["Matrix4"],static:!1},{name:"scale",description:"figura.docs.matrix_n.scale",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Matrix4","Matrix4"],static:!1},{name:"apply",description:"figura.docs.matrix_n.apply",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Vector3","Vector3"],static:!1},{name:"set",description:"figura.docs.matrix_n.set",parameters:[[{name:"other",type:"Matrix4"}]],returns:["Matrix4"],static:!1},{name:"copy",description:"figura.docs.matrix_n.copy",parameters:[[]],returns:["Matrix4"],static:!1},{name:"reset",description:"figura.docs.matrix_n.reset",parameters:[[]],returns:["Matrix4"],static:!1},{name:"multiply",description:"figura.docs.matrix_n.multiply",parameters:[[{name:"other",type:"Matrix4"}]],returns:["Matrix4"],static:!1},{name:"rotate",description:"figura.docs.matrix_n.rotate",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Matrix4","Matrix4"],static:!1},{name:"sub",description:"figura.docs.matrix_n.sub",parameters:[[{name:"other",type:"Matrix4"}]],returns:["Matrix4"],static:!1},{name:"getColumn",description:"figura.docs.matrix_n.get_column",parameters:[[{name:"col",type:"Integer"}]],returns:["Vector4"],static:!1},{name:"inverted",description:"figura.docs.matrix_n.inverted",parameters:[[]],returns:["Matrix4"],static:!1},{name:"transpose",description:"figura.docs.matrix_n.transpose",parameters:[[]],returns:["Matrix4"],static:!1},{name:"invert",description:"figura.docs.matrix_n.invert",parameters:[[]],returns:["Matrix4"],static:!1},{name:"translate",description:"figura.docs.matrix_n.translate",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Matrix4","Matrix4"],static:!1},{name:"transposed",description:"figura.docs.matrix_n.transposed",parameters:[[]],returns:["Matrix4"],static:!1},{name:"det",description:"figura.docs.matrix_n.det",parameters:[[]],returns:["Number"],static:!1},{name:"getRow",description:"figura.docs.matrix_n.get_row",parameters:[[{name:"row",type:"Integer"}]],returns:["Vector4"],static:!1},{name:"rightMultiply",description:"figura.docs.matrix_n.right_multiply",parameters:[[{name:"other",type:"Matrix4"}]],returns:["Matrix4"],static:!1},{name:"applyDir",description:"figura.docs.matrix_n.apply_dir",parameters:[[{name:"vec",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Vector3","Vector3"],static:!1},{name:"rotateY",description:"figura.docs.matrix_n.rotate_y",parameters:[[{name:"degrees",type:"Number"}]],returns:["Matrix4"],static:!1},{name:"rotateZ",description:"figura.docs.matrix_n.rotate_z",parameters:[[{name:"degrees",type:"Number"}]],returns:["Matrix4"],static:!1},{name:"rotateX",description:"figura.docs.matrix_n.rotate_x",parameters:[[{name:"degrees",type:"Number"}]],returns:["Matrix4"],static:!1},{name:"deaugmented",description:"figura.docs.matrix_n.deaugmented",parameters:[[]],returns:["Matrix3"],static:!1}],fields:[],category:"matrices",metatable:{__le:["Matrix4"],__eq:["Matrix4"],__mul:["Number","Matrix4","Vector4"],__add:["Matrix4"],__sub:["Matrix4"],__len:[]}},ClientAPI:{name:"ClientAPI",description:"figura.docs.client",methods:[{name:"getVersion",description:"figura.docs.client.get_version",parameters:[[]],returns:["String"],static:!0,example:{content:"log(client.getVersion())",author:"ChloeSpacedOut"}},{name:"getActiveResourcePacks",description:"figura.docs.client.get_active_resource_packs",parameters:[[]],returns:["Table"],static:!0},{name:"isDebugOverlayEnabled",description:"figura.docs.client.is_debug_overlay_enabled",parameters:[[]],returns:["Boolean"],static:!0,example:{content:`events.TICK:register(function()
  log(client.isDebugOverlayEnabled())
end)`,author:"ChloeSpacedOut"}},{name:"getScaledWindowSize",description:"figura.docs.client.get_scaled_window_size",parameters:[[]],returns:["Vector2"],static:!0,example:{content:`events.TICK:register(function()
  log(client.getScaledWindowSize())
end)`,author:"ChloeSpacedOut"}},{name:"getEntityStatistics",description:"figura.docs.client.get_entity_statistics",parameters:[[]],returns:["String"],static:!0,example:{content:`log(client.getEntityStatistics())
-- Number of rendered entities / total entities, 0, simulation distance`,author:"ChloeSpacedOut"}},{name:"hasIris",description:"figura.docs.client.has_iris",parameters:[[]],returns:["Boolean"],static:!0},{name:"getCameraRot",description:"figura.docs.client.get_camera_rot",parameters:[[]],returns:["Vector3"],static:!0,example:{content:`events.TICK:register(function()
  log(client.getCameraRot())
end)`,author:"ChloeSpacedOut"}},{name:"getCameraPos",description:"figura.docs.client.get_camera_pos",parameters:[[]],returns:["Vector3"],static:!0,example:{content:`events.TICK:register(function()
  log(client.getCameraPos())
end)`,author:"ChloeSpacedOut"}},{name:"getFPS",description:"figura.docs.client.get_fps",parameters:[[]],returns:["Integer"],static:!0,example:{content:`events.TICK:register(function()
  log(client.getFPS())
end)`,author:"ChloeSpacedOut"}},{name:"getFPSString",description:"figura.docs.client.get_fps_string",parameters:[[]],returns:["String"],static:!0,example:{content:`events.TICK:register(function()
  log(client.getFPSString())
end)`,author:"ChloeSpacedOut"}},{name:"getAllocatedMemory",description:"figura.docs.client.get_allocated_memory",parameters:[[]],returns:["Integer"],static:!0,example:{content:`log(client.getAllocatedMemory())
-- returns memory in bytes`,author:"ChloeSpacedOut"}},{name:"getMaxMemory",description:"figura.docs.client.get_max_memory",parameters:[[]],returns:["Integer"],static:!0,example:{content:`log(client.getMaxMemory())
-- returns memory in bytes`,author:"ChloeSpacedOut"}},{name:"isHudEnabled",description:"figura.docs.client.is_hud_enabled",parameters:[[]],returns:["Boolean"],static:!0,example:{content:`events.TICK:register(function()
  log(client.isHudEnabled())
end)`,author:"ChloeSpacedOut"}},{name:"isPaused",description:"figura.docs.client.is_paused",parameters:[[]],returns:["Boolean"],static:!0,example:{content:`events.TICK:register(function()
  log(client.isPaused())
end)`,author:"ChloeSpacedOut"}},{name:"getEntityCount",description:"figura.docs.client.get_entity_count",parameters:[[]],returns:["Integer"],static:!0,example:{content:`events.TICK:register(function()
  log(client.getEntityCount())
end)`,author:"ChloeSpacedOut"}},{name:"getFOV",description:"figura.docs.client.get_fov",parameters:[[]],returns:["Number"],static:!0,example:{content:"log(client.getFOV())",author:"ChloeSpacedOut"}},{name:"getVersionType",description:"figura.docs.client.get_version_type",parameters:[[]],returns:["String"],static:!0,example:{content:"log(client.getVersionType())",author:"ChloeSpacedOut"}},{name:"isWindowFocused",description:"figura.docs.client.is_window_focused",parameters:[[]],returns:["Boolean"],static:!0,example:{content:`events.TICK:register(function()
  log(client.isWindowFocused())
end)`,author:"ChloeSpacedOut"}},{name:"getWindowSize",description:"figura.docs.client.get_window_size",parameters:[[]],returns:["Vector2"],static:!0,example:{content:`events.TICK:register(function()
  log(client.getWindowSized())
end)`,author:"ChloeSpacedOut"}},{name:"getSoundStatistics",description:"figura.docs.client.get_sound_statistics",parameters:[[]],returns:["String"],static:!0,example:{content:`events.TICK:register(function()
  log(client.getSoundStatistics())
end)
-- sounds playing / sounds limit + ambient sounds playing / ambient sounds limit`,author:"ChloeSpacedOut"}},{name:"getServerBrand",description:"figura.docs.client.get_server_brand",parameters:[[]],returns:["String"],static:!0,example:{content:"log(client.getServerBrand())",author:"ChloeSpacedOut"}},{name:"getJavaVersion",description:"figura.docs.client.get_java_version",parameters:[[]],returns:["String"],static:!0,example:{content:"log(client.getJavaVersion())",author:"ChloeSpacedOut"}},{name:"getParticleCount",description:"figura.docs.client.get_particle_count",parameters:[[]],returns:["String"],static:!0,example:{content:`events.TICK:register(function()
  log(client.getParticleCount())
end)`,author:"ChloeSpacedOut"}},{name:"getUsedMemory",description:"figura.docs.client.get_used_memory",parameters:[[]],returns:["Integer"],static:!0,example:{content:`events.TICK:register(function()
  log(client.getUsedMemory())
end)
-- returns memory in bytes`,author:"ChloeSpacedOut"}},{name:"getChunkStatistics",description:"figura.docs.client.get_chunk_statistics",parameters:[[]],returns:["String"],static:!0,example:{content:`log(client.getChunkStatistics())
-- Number of chunk sections rendered / the total number of chunk sections in the loaded area`,author:"ChloeSpacedOut"}},{name:"getCurrentEffect",description:"figura.docs.client.get_current_effect",parameters:[[]],returns:["String | nil"],static:!0,example:{content:`events.TICK:register(function()
  log(client.getCurrentEffect())
end)`,author:"ChloeSpacedOut"}},{name:"compareVersions",description:"figura.docs.client.compare_versions",parameters:[[{name:"version1",type:"String"},{name:"version2",type:"String"}]],returns:["Integer"],static:!0},{name:"getGuiScale",description:"figura.docs.client.get_gui_scale",parameters:[[]],returns:["Number"],static:!0,example:{content:"log(client.getGuiScale())",author:"ChloeSpacedOut"}},{name:"getSystemTime",description:"figura.docs.client.get_system_time",parameters:[[]],returns:["Integer"],static:!0,example:{content:`events.TICK:register(function()
  log(client.getSystemTime())
end)`,author:"ChloeSpacedOut"}},{name:"getTextWidth",description:"figura.docs.client.get_text_width",parameters:[[{name:"text",type:"String"}]],returns:["Integer"],static:!0,example:{content:"log(client.getTextWidth('TEXT!'))",author:"ChloeSpacedOut"}},{name:"getActiveLang",description:"figura.docs.client.get_active_lang",parameters:[[]],returns:["String"],static:!0,example:{content:"log(client.getActiveLang())",author:"ChloeSpacedOut"}},{name:"hasIrisShader",description:"figura.docs.client.has_iris_shader",parameters:[[]],returns:["Boolean"],static:!0},{name:"getTextHeight",description:"figura.docs.client.get_text_height",parameters:[[{name:"text",type:"String"}]],returns:["Integer"],static:!0,example:{content:"log(client.getTextHeight('TEXT!'))",author:"ChloeSpacedOut"}},{name:"getFiguraVersion",description:"figura.docs.client.get_figura_version",parameters:[[]],returns:["String"],static:!0},{name:"hasResource",description:"figura.docs.client.has_resource",parameters:[[{name:"path",type:"String"}]],returns:["Boolean"],static:!0},{name:"getMousePos",description:"figura.docs.client.get_mouse_pos",parameters:[[]],returns:["Vector2"],static:!0,example:{content:`events.TICK:register(function()
  log(client.getMousePos())
end)`,author:"ChloeSpacedOut"}},{name:"intUUIDToString",description:"figura.docs.client.int_uuid_to_string",parameters:[[{name:"a",type:"Integer"},{name:"b",type:"Integer"},{name:"c",type:"Integer"},{name:"d",type:"Integer"}]],returns:["String"],static:!0},{name:"getViewer",description:"figura.docs.client.get_viewer",parameters:[[]],returns:["EntityAPI"],static:!0}],fields:[],category:"client",metatable:{}},HostAPI:{name:"HostAPI",description:"figura.docs.host",methods:[{name:"getSlot",description:"figura.docs.host.get_slot",parameters:[[{name:"slot",type:"String"}],[{name:"slot",type:"Integer"}]],returns:["ItemStack","ItemStack"],static:!1},{name:"setTitle",description:"figura.docs.host.set_title",parameters:[[{name:"text",type:"String"}]],returns:["nil"],static:!1},{name:"isHost",description:"figura.docs.host.is_host",parameters:[[]],returns:["Boolean"],static:!1},{name:"setSubtitle",description:"figura.docs.host.set_subtitle",parameters:[[{name:"text",type:"String"}]],returns:["nil"],static:!1},{name:"appendChatHistory",description:"figura.docs.host.append_chat_history",parameters:[[{name:"message",type:"String"}]],returns:["nil"],static:!1},{name:"sendChatCommand",description:"figura.docs.host.send_chat_command",parameters:[[{name:"command",type:"String"}]],returns:["nil"],static:!1},{name:"swingArm",description:"figura.docs.host.swing_arm",parameters:[[],[{name:"offhand",type:"Boolean"}]],returns:["nil","nil"],static:!1},{name:"getTargetedEntity",description:"figura.docs.host.get_targeted_entity",parameters:[[]],returns:["EntityAPI"],static:!1},{name:"setTitleTimes",description:"figura.docs.host.set_title_times",parameters:[[{name:"timesData",type:"Vector3"}],[{name:"fadeInTime",type:"Integer"},{name:"stayTime",type:"Integer"},{name:"fadeOutTime",type:"Integer"}]],returns:["nil","nil"],static:!1},{name:"clearTitle",description:"figura.docs.host.clear_title",parameters:[[]],returns:["nil"],static:!1},{name:"setActionbar",description:"figura.docs.host.set_actionbar",parameters:[[{name:"text",type:"String"}],[{name:"text",type:"String"},{name:"animated",type:"Boolean"}]],returns:["nil","nil"],static:!1},{name:"getChatText",description:"figura.docs.host.get_chat_text",parameters:[[]],returns:["String"],static:!1},{name:"setChatColor",description:"figura.docs.host.set_chat_color",parameters:[[{name:"color",type:"Vector3"}],[{name:"r",type:"Number"},{name:"g",type:"Number"},{name:"b",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"saveTexture",description:"figura.docs.host.save_texture",parameters:[[{name:"texture",type:"Texture"}]],returns:["nil"],static:!1},{name:"isContainerOpen",description:"figura.docs.host.is_container_open",parameters:[[]],returns:["Boolean"],static:!1},{name:"getChatColor",description:"figura.docs.host.get_chat_color",parameters:[[]],returns:["Integer"],static:!1},{name:"setChatText",description:"figura.docs.host.set_chat_text",parameters:[[{name:"text",type:"String"}]],returns:["nil"],static:!1},{name:"isChatOpen",description:"figura.docs.host.is_chat_open",parameters:[[]],returns:["Boolean"],static:!1},{name:"screenshot",description:"figura.docs.host.screenshot",parameters:[[{name:"name",type:"String"}]],returns:["Texture"],static:!1},{name:"getScreen",description:"figura.docs.host.get_screen",parameters:[[]],returns:["String | nil"],static:!1},{name:"sendChatMessage",description:"figura.docs.host.send_chat_message",parameters:[[{name:"message",type:"String"}]],returns:["nil"],static:!1}],fields:[{name:"unlockCursor",description:"figura.docs.host.unlock_cursor",type:"Boolean",editable:!0}],category:"host",metatable:{}},AvatarAPI:{name:"AvatarAPI",description:"figura.docs.avatar",methods:[{name:"getName",description:"figura.docs.avatar.get_name",parameters:[[]],returns:["String"],static:!1},{name:"store",description:"figura.docs.avatar.store",parameters:[[{name:"key",type:"String"},{name:"value",type:"AnyType"}]],returns:["nil"],static:!1},{name:"getSize",description:"figura.docs.avatar.get_size",parameters:[[]],returns:["Number"],static:!1},{name:"getVersion",description:"figura.docs.avatar.get_version",parameters:[[]],returns:["String"],static:!1},{name:"setColor",description:"figura.docs.avatar.set_color",parameters:[[{name:"color",type:"Vector3"}],[{name:"r",type:"Number"},{name:"g",type:"Number"},{name:"b",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"getCurrentInstructions",description:"figura.docs.avatar.get_current_instructions",parameters:[[]],returns:["Integer"],static:!1},{name:"getRemainingParticles",description:"figura.docs.avatar.get_remaining_particles",parameters:[[]],returns:["Integer"],static:!1},{name:"getMaxWorldRenderCount",description:"figura.docs.avatar.get_max_world_render_count",parameters:[[]],returns:["Integer"],static:!1},{name:"getAnimationComplexity",description:"figura.docs.avatar.get_animation_complexity",parameters:[[]],returns:["Integer"],static:!1},{name:"getMaxWorldTickCount",description:"figura.docs.avatar.get_max_world_tick_count",parameters:[[]],returns:["Integer"],static:!1},{name:"getMaxAnimationComplexity",description:"figura.docs.avatar.get_max_animation_complexity",parameters:[[]],returns:["Integer"],static:!1},{name:"getWorldRenderCount",description:"figura.docs.avatar.get_world_render_count",parameters:[[]],returns:["Integer"],static:!1},{name:"canEditVanillaModel",description:"figura.docs.avatar.can_edit_vanilla_model",parameters:[[]],returns:["Boolean"],static:!1},{name:"getVolume",description:"figura.docs.avatar.get_volume",parameters:[[]],returns:["Integer"],static:!1},{name:"getMaxInitCount",description:"figura.docs.avatar.get_max_init_count",parameters:[[]],returns:["Integer"],static:!1},{name:"getEntityInitCount",description:"figura.docs.avatar.get_entity_init_count",parameters:[[]],returns:["Integer"],static:!1},{name:"getTickCount",description:"figura.docs.avatar.get_tick_count",parameters:[[]],returns:["Integer"],static:!1},{name:"getMaxTickCount",description:"figura.docs.avatar.get_max_tick_count",parameters:[[]],returns:["Integer"],static:!1},{name:"getRenderCount",description:"figura.docs.avatar.get_render_count",parameters:[[]],returns:["Integer"],static:!1},{name:"hasTexture",description:"figura.docs.avatar.has_texture",parameters:[[]],returns:["Boolean"],static:!1},{name:"getInitCount",description:"figura.docs.avatar.get_init_count",parameters:[[]],returns:["Integer"],static:!1},{name:"hasScriptError",description:"figura.docs.avatar.has_script_error",parameters:[[]],returns:["Boolean"],static:!1},{name:"getMaxComplexity",description:"figura.docs.avatar.get_max_complexity",parameters:[[]],returns:["Integer"],static:!1},{name:"getRemainingSounds",description:"figura.docs.avatar.get_remaining_sounds",parameters:[[]],returns:["Integer"],static:!1},{name:"getMaxRenderCount",description:"figura.docs.avatar.get_max_render_count",parameters:[[]],returns:["Integer"],static:!1},{name:"getWorldTickCount",description:"figura.docs.avatar.get_world_tick_count",parameters:[[]],returns:["Integer"],static:!1},{name:"getMaxParticles",description:"figura.docs.avatar.get_max_particles",parameters:[[]],returns:["Integer"],static:!1},{name:"getMaxSounds",description:"figura.docs.avatar.get_max_sounds",parameters:[[]],returns:["Integer"],static:!1},{name:"getAuthors",description:"figura.docs.avatar.get_authors",parameters:[[]],returns:["String"],static:!1},{name:"getColor",description:"figura.docs.avatar.get_color",parameters:[[]],returns:["String"],static:!1},{name:"canEditNameplate",description:"figura.docs.avatar.can_edit_nameplate",parameters:[[]],returns:["Boolean"],static:!1},{name:"getComplexity",description:"figura.docs.avatar.get_complexity",parameters:[[]],returns:["Integer"],static:!1},{name:"canRenderOffscreen",description:"figura.docs.avatar.can_render_offscreen",parameters:[[]],returns:["Boolean"],static:!1},{name:"canUseCustomSounds",description:"figura.docs.avatar.can_use_custom_sounds",parameters:[[]],returns:["Boolean"],static:!1}],fields:[],category:"avatar",metatable:{}},ParticleAPI:{name:"ParticleAPI",description:"figura.docs.particles",methods:[{name:"addParticle",description:"figura.docs.particles.add_particle",parameters:[[{name:"name",type:"String"},{name:"posVel",type:"Vector6"}],[{name:"name",type:"String"},{name:"pos",type:"Vector3"}],[{name:"name",type:"String"},{name:"pos",type:"Vector3"},{name:"vel",type:"Vector3"}],[{name:"name",type:"String"},{name:"posX",type:"Number"},{name:"posY",type:"Number"},{name:"posZ",type:"Number"}],[{name:"name",type:"String"},{name:"pos",type:"Vector3"},{name:"velX",type:"Number"},{name:"velY",type:"Number"},{name:"velZ",type:"Number"}],[{name:"name",type:"String"},{name:"posX",type:"Number"},{name:"posY",type:"Number"},{name:"posZ",type:"Number"},{name:"vel",type:"Vector3"}],[{name:"name",type:"String"},{name:"posX",type:"Number"},{name:"posY",type:"Number"},{name:"posZ",type:"Number"},{name:"velX",type:"Number"},{name:"velY",type:"Number"},{name:"velZ",type:"Number"}]],returns:["Particle","Particle","Particle","Particle","Particle","Particle","Particle"],static:!1},{name:"removeParticles",description:"figura.docs.particles.remove_particles",parameters:[[]],returns:["nil"],static:!1}],fields:[],category:"particles",metatable:{}},Particle:{name:"Particle",description:"figura.docs.particle",methods:[{name:"remove",description:"figura.docs.particle.remove",parameters:[[]],returns:["Particle"],static:!1},{name:"scale",description:"figura.docs.particle.scale",parameters:[[{name:"scale",type:"Number"}]],returns:["Particle"],static:!1},{name:"isAlive",description:"figura.docs.particle.is_alive",parameters:[[]],returns:["Boolean"],static:!1},{name:"pos",description:"figura.docs.particle.pos",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Particle","Particle"],static:!1},{name:"color",description:"figura.docs.particle.color",parameters:[[{name:"rgb",type:"Vector3"}],[{name:"rgba",type:"Vector4"}],[{name:"r",type:"Number"},{name:"g",type:"Number"},{name:"b",type:"Number"},{name:"a",type:"Number"}]],returns:["Particle","Particle","Particle"],static:!1},{name:"physics",description:"figura.docs.particle.physics",parameters:[[{name:"physics",type:"Boolean"}]],returns:["Particle"],static:!1},{name:"getLifetime",description:"figura.docs.particle.get_lifetime",parameters:[[]],returns:["Integer"],static:!1},{name:"velocity",description:"figura.docs.particle.velocity",parameters:[[{name:"velocity",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Particle","Particle"],static:!1},{name:"power",description:"figura.docs.particle.power",parameters:[[{name:"power",type:"Number"}]],returns:["Particle"],static:!1},{name:"spawn",description:"figura.docs.particle.spawn",parameters:[[]],returns:["Particle"],static:!1},{name:"gravity",description:"figura.docs.particle.gravity",parameters:[[{name:"gravity",type:"Number"}]],returns:["Particle"],static:!1},{name:"lifetime",description:"figura.docs.particle.lifetime",parameters:[[{name:"lifetime",type:"Integer"}]],returns:["Particle"],static:!1}],fields:[],category:"particles",metatable:{}},SoundAPI:{name:"SoundAPI",description:"figura.docs.sounds",methods:[{name:"playSound",description:"figura.docs.sounds.play_sound",parameters:[[{name:"sound",type:"String"},{name:"pos",type:"Vector3"}],[{name:"sound",type:"String"},{name:"posX",type:"Number"},{name:"posY",type:"Number"},{name:"posZ",type:"Number"}],[{name:"sound",type:"String"},{name:"pos",type:"Vector3"},{name:"volume",type:"Number"},{name:"pitch",type:"Number"},{name:"loop",type:"Boolean"}],[{name:"sound",type:"String"},{name:"posX",type:"Number"},{name:"posY",type:"Number"},{name:"posZ",type:"Number"},{name:"volume",type:"Number"},{name:"pitch",type:"Number"},{name:"loop",type:"Boolean"}]],returns:["Sound","Sound","Sound","Sound"],static:!1,example:{content:'sounds:playSound("entity.bat.ambient", player:getPos(),1,1,false)',author:"JimmyHelp"}},{name:"stopSound",description:"figura.docs.sounds.stop_sound",parameters:[[],[{name:"id",type:"String"}]],returns:["nil","nil"],static:!1},{name:"addSound",description:"figura.docs.sounds.add_sound",parameters:[[{name:"name",type:"String"},{name:"byteArray",type:"Table"}],[{name:"name",type:"String"},{name:"base64Text",type:"String"}]],returns:["nil","nil"],static:!1}],fields:[],category:"sounds",metatable:{}},Sound:{name:"Sound",description:"figura.docs.sound",methods:[{name:"stop",description:"figura.docs.sound.stop",parameters:[[]],returns:["Sound"],static:!1},{name:"pos",description:"figura.docs.sound.pos",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["Sound","Sound"],static:!1},{name:"loop",description:"figura.docs.sound.loop",parameters:[[{name:"loop",type:"Boolean"}]],returns:["Sound"],static:!1},{name:"volume",description:"figura.docs.sound.volume",parameters:[[{name:"volume",type:"Number"}]],returns:["Sound"],static:!1},{name:"pitch",description:"figura.docs.sound.pitch",parameters:[[{name:"pitch",type:"Number"}]],returns:["Sound"],static:!1},{name:"attenuation",description:"figura.docs.sound.attenuation",parameters:[[{name:"attenuation",type:"Number"}]],returns:["Sound"],static:!1},{name:"isPlaying",description:"figura.docs.sound.is_playing",parameters:[[]],returns:["Boolean"],static:!1},{name:"pause",description:"figura.docs.sound.pause",parameters:[[]],returns:["Sound"],static:!1},{name:"getAttenuation",description:"figura.docs.sound.get_attenuation",parameters:[[]],returns:["Number"],static:!1},{name:"getPitch",description:"figura.docs.sound.get_pitch",parameters:[[]],returns:["Number"],static:!1},{name:"getVolume",description:"figura.docs.sound.get_volume",parameters:[[]],returns:["Number"],static:!1},{name:"isLooping",description:"figura.docs.sound.is_looping",parameters:[[]],returns:["Boolean"],static:!1},{name:"play",description:"figura.docs.sound.play",parameters:[[]],returns:["Sound"],static:!1},{name:"getPos",description:"figura.docs.sound.get_pos",parameters:[[]],returns:["Vector3"],static:!1}],fields:[],category:"sounds",metatable:{}},RendererAPI:{name:"RendererAPI",description:"figura.docs.renderer",methods:[{name:"getCameraOffsetPivot",description:"figura.docs.renderer.get_camera_offset_pivot",parameters:[[]],returns:["Vector3"],static:!1},{name:"setShadowRadius",description:"figura.docs.renderer.set_shadow_radius",parameters:[[],[{name:"radius",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"getCameraRot",description:"figura.docs.renderer.get_camera_rot",parameters:[[]],returns:["Vector3"],static:!1},{name:"isCameraBackwards",description:"figura.docs.renderer.is_camera_backwards",parameters:[[]],returns:["Boolean"],static:!1},{name:"getCameraPos",description:"figura.docs.renderer.get_camera_pos",parameters:[[]],returns:["Vector3 | nil"],static:!1},{name:"setCameraPos",description:"figura.docs.renderer.set_camera_pos",parameters:[[{name:"pos",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"setCameraRot",description:"figura.docs.renderer.set_camera_rot",parameters:[[{name:"rot",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"getShadowRadius",description:"figura.docs.renderer.get_shadow_radius",parameters:[[]],returns:["Number"],static:!1},{name:"getCameraOffsetRot",description:"figura.docs.renderer.get_camera_offset_rot",parameters:[[]],returns:["Vector3"],static:!1},{name:"offsetCameraRot",description:"figura.docs.renderer.offset_camera_rot",parameters:[[{name:"rot",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"offsetCameraPivot",description:"figura.docs.renderer.offset_camera_pivot",parameters:[[{name:"pivot",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"getCameraPivot",description:"figura.docs.renderer.get_camera_pivot",parameters:[[]],returns:["Vector3"],static:!1},{name:"setCameraPivot",description:"figura.docs.renderer.set_camera_pivot",parameters:[[{name:"pivot",type:"Vector3"}],[{name:"x",type:"Number"},{name:"y",type:"Number"},{name:"z",type:"Number"}]],returns:["nil","nil"],static:!1},{name:"isFirstPerson",description:"figura.docs.renderer.is_first_person",parameters:[[]],returns:["Boolean"],static:!1},{name:"setPostEffect",description:"figura.docs.renderer.set_post_effect",parameters:[[{name:"effect",type:"String"}]],returns:["nil"],static:!1}],fields:[{name:"renderFire",description:"figura.docs.renderer.render_fire",type:"Boolean",editable:!0},{name:"renderVehicle",description:"figura.docs.renderer.render_vehicle",type:"Boolean",editable:!0},{name:"renderCrosshair",description:"figura.docs.renderer.render_crosshair",type:"Boolean",editable:!0},{name:"forcePaperdoll",description:"figura.docs.renderer.force_paperdoll",type:"Boolean",editable:!0}],category:"renderer",metatable:{}},PingAPI:{name:"PingAPI",description:"figura.docs.pings",methods:[],fields:[],category:"pings",metatable:{}},PingFunction:{name:"PingFunction",description:"figura.docs.ping_function",methods:[],fields:[],category:"pings",metatable:{}},TextureAPI:{name:"TextureAPI",description:"figura.docs.textures",methods:[{name:"get",description:"figura.docs.textures.get",parameters:[[{name:"name",type:"String"}]],returns:["Texture | nil"],static:!1},{name:"register",description:"figura.docs.textures.register",parameters:[[{name:"name",type:"String"},{name:"width",type:"Integer"},{name:"height",type:"Integer"}]],returns:["Texture"],static:!1},{name:"read",description:"figura.docs.textures.read",parameters:[[{name:"name",type:"String"},{name:"data",type:"String"}]],returns:["Texture"],static:!1},{name:"getTextures",description:"figura.docs.textures.get_textures",parameters:[[]],returns:["Table"],static:!1}],fields:[],category:"textures",metatable:{}},Texture:{name:"Texture",description:"figura.docs.texture",methods:[{name:"getName",description:"figura.docs.texture.get_name",parameters:[[]],returns:["String"],static:!1},{name:"update",description:"figura.docs.texture.update",parameters:[[]],returns:["nil"],static:!1},{name:"fill",description:"figura.docs.texture.fill",parameters:[[{name:"x",type:"Integer"},{name:"y",type:"Integer"},{name:"width",type:"Integer"},{name:"height",type:"Integer"},{name:"rgb",type:"Vector3"}],[{name:"x",type:"Integer"},{name:"y",type:"Integer"},{name:"width",type:"Integer"},{name:"height",type:"Integer"},{name:"rgba",type:"Vector4"}],[{name:"x",type:"Integer"},{name:"y",type:"Integer"},{name:"width",type:"Integer"},{name:"height",type:"Integer"},{name:"r",type:"Number"},{name:"g",type:"Number"},{name:"b",type:"Number"},{name:"a",type:"Number"}]],returns:["nil","nil","nil"],static:!1},{name:"save",description:"figura.docs.texture.save",parameters:[[]],returns:["String"],static:!1},{name:"getDimensions",description:"figura.docs.texture.get_dimensions",parameters:[[]],returns:["Vector2"],static:!1},{name:"restore",description:"figura.docs.texture.restore",parameters:[[]],returns:["nil"],static:!1},{name:"setPixel",description:"figura.docs.texture.set_pixel",parameters:[[{name:"x",type:"Integer"},{name:"y",type:"Integer"},{name:"rgb",type:"Vector3"}],[{name:"x",type:"Integer"},{name:"y",type:"Integer"},{name:"rgba",type:"Vector4"}],[{name:"x",type:"Integer"},{name:"y",type:"Integer"},{name:"r",type:"Number"},{name:"g",type:"Number"},{name:"b",type:"Number"},{name:"a",type:"Number"}]],returns:["nil","nil","nil"],static:!1},{name:"getPixel",description:"figura.docs.texture.get_pixel",parameters:[[{name:"x",type:"Integer"},{name:"y",type:"Integer"}]],returns:["Vector4"],static:!1},{name:"applyFunc",description:"figura.docs.texture.apply_func",parameters:[[{name:"x",type:"Integer"},{name:"y",type:"Integer"},{name:"width",type:"Integer"},{name:"height",type:"Integer"},{name:"func",type:"Function"}]],returns:["nil"],static:!1}],fields:[],category:"textures",metatable:{}},ConfigAPI:{name:"ConfigAPI",description:"figura.docs.config",methods:[{name:"name",description:"figura.docs.config.name",parameters:[[{name:"name",type:"String"}]],returns:["nil"],static:!1},{name:"load",description:"figura.docs.config.load",parameters:[[],[{name:"key",type:"String"}]],returns:["Table","AnyType"],static:!1},{name:"save",description:"figura.docs.config.save",parameters:[[{name:"key",type:"String"},{name:"value",type:"AnyType"}]],returns:["nil"],static:!1}],fields:[],category:"config",metatable:{}}},lists:{Keybinds:{name:"Keybinds",description:"figura.docs.enum.keybinds",entries:["key.keyboard.unknown","key.mouse.left","key.mouse.right","key.mouse.middle","key.mouse.4","key.mouse.5","key.mouse.6","key.mouse.7","key.mouse.8","key.keyboard.0","key.keyboard.1","key.keyboard.2","key.keyboard.3","key.keyboard.4","key.keyboard.5","key.keyboard.6","key.keyboard.7","key.keyboard.8","key.keyboard.9","key.keyboard.a","key.keyboard.b","key.keyboard.c","key.keyboard.d","key.keyboard.e","key.keyboard.f","key.keyboard.g","key.keyboard.h","key.keyboard.i","key.keyboard.j","key.keyboard.k","key.keyboard.l","key.keyboard.m","key.keyboard.n","key.keyboard.o","key.keyboard.p","key.keyboard.q","key.keyboard.r","key.keyboard.s","key.keyboard.t","key.keyboard.u","key.keyboard.v","key.keyboard.w","key.keyboard.x","key.keyboard.y","key.keyboard.z","key.keyboard.f1","key.keyboard.f2","key.keyboard.f3","key.keyboard.f4","key.keyboard.f5","key.keyboard.f6","key.keyboard.f7","key.keyboard.f8","key.keyboard.f9","key.keyboard.f10","key.keyboard.f11","key.keyboard.f12","key.keyboard.f13","key.keyboard.f14","key.keyboard.f15","key.keyboard.f16","key.keyboard.f17","key.keyboard.f18","key.keyboard.f19","key.keyboard.f20","key.keyboard.f21","key.keyboard.f22","key.keyboard.f23","key.keyboard.f24","key.keyboard.f25","key.keyboard.num.lock","key.keyboard.keypad.0","key.keyboard.keypad.1","key.keyboard.keypad.2","key.keyboard.keypad.3","key.keyboard.keypad.4","key.keyboard.keypad.5","key.keyboard.keypad.6","key.keyboard.keypad.7","key.keyboard.keypad.8","key.keyboard.keypad.9","key.keyboard.keypad.add","key.keyboard.keypad.decimal","key.keyboard.keypad.enter","key.keyboard.keypad.equal","key.keyboard.keypad.multiply","key.keyboard.keypad.divide","key.keyboard.keypad.subtract","key.keyboard.down","key.keyboard.left","key.keyboard.right","key.keyboard.up","key.keyboard.apostrophe","key.keyboard.backslash","key.keyboard.comma","key.keyboard.equal","key.keyboard.grave.accent","key.keyboard.left.bracket","key.keyboard.minus","key.keyboard.period","key.keyboard.right.bracket","key.keyboard.semicolon","key.keyboard.slash","key.keyboard.space","key.keyboard.tab","key.keyboard.left.alt","key.keyboard.left.control","key.keyboard.left.shift","key.keyboard.left.win","key.keyboard.right.alt","key.keyboard.right.control","key.keyboard.right.shift","key.keyboard.right.win","key.keyboard.enter","key.keyboard.escape","key.keyboard.backspace","key.keyboard.delete","key.keyboard.end","key.keyboard.home","key.keyboard.insert","key.keyboard.page.down","key.keyboard.page.up","key.keyboard.caps.lock","key.keyboard.pause","key.keyboard.scroll.lock","key.keyboard.menu","key.keyboard.print.screen","key.keyboard.world.1","key.keyboard.world.2"]},ParentTypes:{name:"ParentTypes",description:"figura.docs.enum.parent_types",entries:["None","NONE","Head","HEAD","Body","BODY","LeftArm","LEFT_ARM","RightArm","RIGHT_ARM","LeftLeg","LEFT_LEG","RightLeg","RIGHT_LEG","LeftElytra","LEFT_ELYTRA","LeftElytron","LEFT_ELYTRON","RightElytra","RIGHT_ELYTRA","RightElytron","RIGHT_ELYTRON","Cape","CAPE","World","WORLD","Hud","HUD","Gui","GUI","Camera","CAMERA","Skull","SKULL","?","Portrait","PORTRAIT","LeftItemPivot","LEFT_ITEM_PIVOT","RightItemPivot","RIGHT_ITEM_PIVOT","LeftSpyglassPivot","LEFT_SPYGLASS_PIVOT","RightSpyglassPivot","RIGHT_SPYGLASS_PIVOT","HelmetItemPivot","HELMET_ITEM_PIVOT","LeftParrotPivot","LEFT_PARROT_PIVOT","RightParrotPivot","RIGHT_PARROT_PIVOT"]},RenderTypes:{name:"RenderTypes",description:"figura.docs.enum.render_types",entries:["NONE","CUTOUT","CUTOUT_CULL","TRANSLUCENT","TRANSLUCENT_CULL","EMISSIVE","EMISSIVE_SOLID","END_PORTAL","END_GATEWAY","GLINT","GLINT2","LINES","LINES_STRIP"]},TextureTypes:{name:"TextureTypes",description:"figura.docs.enum.texture_types",entries:["SKIN","CAPE","ELYTRA","RESOURCE","PRIMARY","SECONDARY","CUSTOM"]},KeyIDs:{name:"KeyIDs",description:"figura.docs.enum.key_ids",entries:["key.playerlist","figura.config.action_wheel_button","key.sneak","key.hotbar.8","key.hotbar.7","key.sprint","key.hotbar.6","key.hotbar.5","key.hotbar.4","key.hotbar.3","key.hotbar.2","key.togglePerspective","key.hotbar.1","key.spectatorOutlines","key.left","key.chat","key.pickItem","key.socialInteractions","key.fullscreen","key.attack","key.smoothCamera","key.advancements","figura.config.popup_button","key.use","figura.config.panic_button","key.loadToolbarActivator","figura.config.reload_button","key.hotbar.9","key.forward","key.right","key.screenshot","key.back","key.swapOffhand","key.command","key.saveToolbarActivator","key.inventory","key.jump","key.drop"]},EntityPoses:{name:"EntityPoses",description:"figura.docs.enum.entity_poses",entries:["STANDING","FALL_FLYING","SLEEPING","SWIMMING","SPIN_ATTACK","CROUCHING","LONG_JUMPING","DYING","CROAKING","USING_TONGUE","ROARING","SNIFFING","EMERGING","DIGGING"]},ItemRenderTypes:{name:"ItemRenderTypes",description:"figura.docs.enum.item_render_types",entries:["NONE","THIRD_PERSON_LEFT_HAND","THIRD_PERSON_RIGHT_HAND","FIRST_PERSON_LEFT_HAND","FIRST_PERSON_RIGHT_HAND","HEAD","GUI","GROUND","FIXED"]},PostEffects:{name:"PostEffects",description:"figura.docs.enum.post_effects",entries:["notch","fxaa","art","bumpy","blobs2","pencil","color_convolve","deconverge","flip","invert","ntsc","outline","phosphor","scan_pincushion","sobel","bits","desaturate","green","blur","wobble","blobs","antialias","creeper","spider"]},PlayStates:{name:"PlayStates",description:"figura.docs.enum.play_states",entries:["STOPPED","PAUSED","PLAYING"]},LoopModes:{name:"LoopModes",description:"figura.docs.enum.loop_modes",entries:["LOOP","ONCE","HOLD"]},Colors:{name:"Colors",description:"figura.docs.enum.colors",entries:["FRAN_PINK","fran","francielly","bunny","CHLOE_PURPLE","chloe","space","MAYA_BLUE","maya","devnull","limits","SKYE_BLUE","sky","skye","skylar","LILY_RED","lily","foxes","fox","CHEESE","largecheese","large cheese","LUA_LOG","LUA_ERROR","LUA_PING","luna","moff","moth","DEFAULT","DISCORD"]},PlayerModelParts:{name:"PlayerModelParts",description:"figura.docs.enum.player_model_parts",entries:["CAPE","JACKET","LEFT_SLEEVE","RIGHT_SLEEVE","LEFT_PANTS","RIGHT_PANTS","HAT"]},UseActions:{name:"UseActions",description:"figura.docs.enum.use_actions",entries:["NONE","EAT","DRINK","BLOCK","BOW","SPEAR","CROSSBOW","SPYGLASS","TOOT_HORN"]},RenderModes:{name:"RenderModes",description:"figura.docs.enum.render_modes",entries:["FIGURA_GUI","PAPERDOLL","MINECRAFT_GUI","FIRST_PERSON","RENDER","OTHER"]}},languages:{en_us:{"figura.docs":'The "/figura docs" command allows you to access documentation for all types and functions Figura adds to its Lua scripting environment.',"figura.docs.text.type":"Type","figura.docs.text.description":"Description","figura.docs.text.function":"Function","figura.docs.text.syntax":"Syntax","figura.docs.text.returns":"Returns","figura.docs.text.field":"Field","figura.docs.text.editable":"Editable","figura.docs.text.not_editable":"Not Editable","figura.docs.text.entries":"Entries","figura.docs.text.extends":"extends","figura.docs.enum":"Contains all specific string values used in other functions.","figura.docs.enum.empty":"There is no values in this enumerator!","figura.docs.enum.keybinds":"List of valid keybind keys. Used within the KeybindAPI.","figura.docs.enum.parent_types":"List of valid ParentTypes. Used within ModelParts.","figura.docs.enum.render_types":"List of valid RenderTypes. Used within ModelParts.","figura.docs.enum.texture_types":"List of valid TextureTypes. Used within ModelParts.","figura.docs.enum.key_ids":"List of valid KeyIDs. Used within the KeybindAPI.","figura.docs.enum.entity_poses":"List of valid EntityPoses. Used within the EntityAPI.","figura.docs.enum.item_render_types":"List of valid RenderTypes. Used within the Item RenderTask.","figura.docs.enum.post_effects":"List of valid PostEffects. Used within the RendererAPI.","figura.docs.enum.play_states":"List of valid PlayStates. Used within Blockbench animations.","figura.docs.enum.loop_modes":"List of valid LoopModes. Used within Blockbench animations.","figura.docs.enum.colors":"List of custom colors. Used anywhere you can input a hex color.","figura.docs.enum.player_model_parts":"List of valid PlayerModelParts. Used within the PlayerAPI.","figura.docs.enum.use_actions":"List of valid UseActions. Used within the ItemStackAPI.","figura.docs.enum.render_modes":"List of valid RenderModes. Used within the RENDER event.","figura.docs.globals":"Documentation for the various things Figura adds to the global lua state.","figura.docs.globals.vec":`An alias for "vectors.vec", since it's used so often.`,"figura.docs.globals.require":"The require() function takes the name of one of your scripts, without the .lua extension. If this script has not been already run before, it will run that script and return the value that script returns. If it has been run before, then it will not run the file again, but it will return the same thing as the first time. If a required script has no returns, then require() will return true. If the name you give isn't any of your scripts, it will error.","figura.docs.globals.list_files":"A function that returns a table with all script file names from the specified path. If no path is specified, it will fetch from the root folder. A second argument, boolean, can be given to also list files inside subfolders.","figura.docs.globals.type":"Figura overrides lua's type() function. When used on Figura types, returns the type's name as seen in the docs and in the figuraMetatables global. When called on a table that has a metatable with a __type key, returns the corresponding value.","figura.docs.globals.print":"A function that writes its arguments to chat. Even though the syntax says only one argument, you can put as many as you want. All of them will print, and they'll be separated by a tab space. Returns the string representation of all values.","figura.docs.globals.log":"An alias for print().","figura.docs.globals.print_table":`The first argument is either a Table, or it's a Userdata, which refers to any of the added Figura types. Prints the table out to chat, specially formatted. If userdata is passed in, it is automatically converted to a table or string, and displayed. In the case of tables inside of tables, the "maxDepth" parameter will be used to determine how far to go. Default value for maxDepth is 1. Third argument, "silent", will skip the chat print and will only return the string.`,"figura.docs.globals.log_table":"An alias for printTable().","figura.docs.globals.print_json":"Takes a Minecraft json string as an argument, and prints it to the chat formatted, without the lua print header. Even though the syntax says only one argument, you can put as many as you want. All of them will print, and they'll be appended in the end of the previous argument. Returns the formatted string.","figura.docs.globals.log_json":"An alias for printJson().","figura.docs.globals.action_wheel":"The global instance of the ActionWheelAPI and its subtypes.","figura.docs.globals.animations":'The global instance of the "animations" table and its subtypes.',"figura.docs.globals.figura_metatables":"A table containing all the metatables for Figura's object types. The metatables are editable.","figura.docs.globals.nameplate":"The global instance of the NameplateAPI and its subtypes.","figura.docs.globals.world":"The global instance of the WorldAPI and its subtypes.","figura.docs.globals.vanilla_model":"The global instance of the VanillaModelAPI and its subtypes.","figura.docs.globals.models":"The global instance of the Avatar Models and its subtypes.","figura.docs.globals.player":"The global instance of the EntityAPI and its subtypes.","figura.docs.globals.events":"The global instance of the EventsAPI and its subtypes.","figura.docs.globals.keybind":"The global instance of the KeybindAPI and its subtypes.","figura.docs.globals.vectors":"The global instance of the VectorsAPI and its subtypes.","figura.docs.globals.matrices":"The global instance of the MatricesAPI and its subtypes.","figura.docs.globals.particles":"The global instance of ParticleAPI.","figura.docs.globals.sounds":"The global instance of SoundAPI.","figura.docs.globals.client":"The global instance of ClientAPI.","figura.docs.globals.host":"The global instance of HostAPI.","figura.docs.globals.avatar":"The global instance of AvatarAPI.","figura.docs.globals.renderer":"The global instance of RendererAPI.","figura.docs.globals.user":"An alias for player, just in case the user of your avatar isn't a player. (Foreshadowing?)","figura.docs.globals.pings":"The global instance of PingAPI.","figura.docs.globals.textures":"The global instance of the TextureAPI.","figura.docs.globals.config":"The global instance of the ConfigAPI.","figura.docs.math":'Contains functions which Figura adds to the default Lua "math" library table.',"figura.docs.math.player_scale":"The constant of the player scaling related to the world.","figura.docs.math.world_scale":"The constant of the world scaling related with the player.","figura.docs.math.lerp":"Linearly interpolates from its first argument to its second argument, with the third argument as the parameter. Works on both regular numbers and vectors.","figura.docs.math.clamp":"Clamps the given value between min and max.","figura.docs.math.round":"Rounds the given number to the nearest whole integer.","figura.docs.math.map":"Maps the given value from one range to another. For example, if you have a value of 20 in the range 0-200, and you want to map it to the range 100-200, the result will be 110.","figura.docs.math.short_angle":"Returns the shortest angle between two angles. For example, if you have an angle of 350 degrees and you want to get the shortest angle between it and 0 degrees, the result will be 10 degrees.","figura.docs.math.lerp_angle":"Similar to the default lerp function, but numbers are limited to the range of 0-360. Lerp is done towards the shortest angle. For example, a lerp of 340 and 20, with factor of 0.75, will return 10.","figura.docs.math.sign":"Returns the sign of the given number. Returns 1 if the number is positive, -1 if it's negative, and 0 if it's 0.","figura.docs.action_wheel":"A global API which is used for customizing your player's Action Wheel.","figura.docs.action_wheel.left_click":"Function that is executed when the left mouse button is clicked.","figura.docs.action_wheel.right_click":"Function that is executed when the right mouse button is clicked.","figura.docs.action_wheel.scroll":"Function that is executed when the mouse is scrolled.","figura.docs.action_wheel.execute":"Executes the action of the given index. If the index is null, it will execute the last selected action. A second parameter can be given to specify if it should be executed the left or right action.","figura.docs.action_wheel.is_enabled":"Returns if the Action Wheel is being currently rendered or not.","figura.docs.action_wheel.get_selected":"Returns the index of the currently selected action.","figura.docs.action_wheel.create_action":"Creates a new Action that is not automatically asigned to a Page.","figura.docs.action_wheel.create_page":"Creates a new Page for the action wheel. A Title can be given to store this page internally. If no Title is given, the Page will just be returned from this function.","figura.docs.action_wheel.set_page":"Sets the Page of the action wheel to the given Title or Page.","figura.docs.action_wheel.get_page":"Returns an stored Page by the given title.","figura.docs.action_wheel.get_current_page":"Returns the current set Page from the Action Wheel, or NIL if no Page has been set.","figura.docs.wheel_page":"An Action Wheel container which is used to store up to 8 actions.","figura.docs.wheel_page.new_action":"Adds a new Action on the selected Page's index. If no index is given it is added in the first available index.","figura.docs.wheel_page.get_action":"Gets an Action from the Page's given index.","figura.docs.wheel_page.set_action":"Sets an Action in the Page's given index.","figura.docs.wheel_action":"An action in the Figura Action Wheel. Actions are either interacted by clicking and scrolling, which also being able to be toggleable.","figura.docs.wheel_action.left_click":"Function that is executed when the left mouse button is clicked.","figura.docs.wheel_action.right_click":"Function that is executed when the right mouse button is clicked.","figura.docs.wheel_action.toggle":"Function that is executed when the Action is toggled.","figura.docs.wheel_action.untoggle":"Function that is executed when the Action is untoggled.","figura.docs.wheel_action.scroll":"Function that is executed when the mouse is scrolled.","figura.docs.wheel_action.get_title":"Gets this Action title.","figura.docs.wheel_action.title":"Sets the title of the Action. Returns the Action for function chaining.","figura.docs.wheel_action.get_color":"Gets this Action color.","figura.docs.wheel_action.color":"Sets the color of the Action. Returns the Action for function chaining.","figura.docs.wheel_action.get_hover_color":"Gets this Action hover color.","figura.docs.wheel_action.hover_color":"Sets the color of the Action when it is being hovered. Returns the Action for function chaining.","figura.docs.wheel_action.item":"Sets the item of the Action. Returns the Action for function chaining.","figura.docs.wheel_action.hover_item":"Sets the item of the Action when it is being hovered. Returns the Action for function chaining.","figura.docs.wheel_action.on_left_click":"Sets the function that is executed when the left mouse button is clicked. Returns the Action for function chaining.","figura.docs.wheel_action.on_right_click":"Sets the function that is executed when the right mouse button is clicked. Returns the Action for function chaining.","figura.docs.wheel_action.on_toggle":"Sets the function that is executed when the Action is toggled. Returns the Action for function chaining.","figura.docs.wheel_action.on_untoggle":"Sets the function that is executed when the Action is untoggled. Returns the Action for function chaining.","figura.docs.wheel_action.on_scroll":"Sets the function that is executed when the mouse is scrolled. Returns the Action for function chaining.","figura.docs.wheel_action.get_toggle_title":"Gets this Action toggled title.","figura.docs.wheel_action.toggle_title":"Sets the title of the Action when it is toggled. Returns the Action for function chaining.","figura.docs.wheel_action.get_toggle_color":"Gets this Action toggled color.","figura.docs.wheel_action.toggle_color":"Sets the color of the Action when it is toggled. Returns the Action for function chaining.","figura.docs.wheel_action.toggle_item":"Sets the item of the Action when it is toggled. Returns the Action for function chaining.","figura.docs.wheel_action.is_toggled":"Checks if the Action is toggled or not.","figura.docs.wheel_action.toggled":"Sets the toggle state of the Action. Returns the Action for function chaining.","figura.docs.animation":"A blockbench animation.","figura.docs.animation.name":"This animation's name.","figura.docs.animation.play":"Initializes the animation. Resume the animation if it was paused.","figura.docs.animation.pause":"Pause the animation's playback.","figura.docs.animation.stop":"Stop the animation.","figura.docs.animation.restart":"Restarts the animation. Plays the animation if it was stopped. This behaviour can also be reproduced by stopping then playing the animation","figura.docs.animation.get_time":"Get the animation's playback current time.","figura.docs.animation.set_time":"Sets the animation's playback current time.","figura.docs.animation.get_play_state":"Get the animation's playback state.","figura.docs.animation.add_code":"Adds a string to run in a determinant time. If theres already code to run at that time, it is overridden.","figura.docs.animation.get_blend":"Gets the animation's keyframe blend factor.","figura.docs.animation.blend":"Sets the animation's keyframe blend factor.","figura.docs.animation.get_offset":"Gets the animation's offset time.","figura.docs.animation.offset":"Sets how much time to skip for the animation. The time is skipped on every loop.","figura.docs.animation.get_start_delay":"Gets the animation's start delay.","figura.docs.animation.start_delay":"Set how much time to wait before this animation is initialized. Note that while it is waiting, the animation is considered being played.","figura.docs.animation.get_loop_delay":"Gets the animation's loop delay.","figura.docs.animation.loop_delay":"Set how much time to wait in between the loops of this animation.","figura.docs.animation.get_length":"Gets the animation's length.","figura.docs.animation.length":"Set the animation's length, in seconds.","figura.docs.animation.override":'Set if this animation should override all of its parts vanilla transforms. Equivalent of calling "overrideRot", "overridePos" and "overrideScale" altogether.',"figura.docs.animation.get_override_rot":"Gets if this animation should override its parts vanilla rotation.","figura.docs.animation.get_override_pos":"Gets if this animation should override its parts vanilla position.","figura.docs.animation.get_override_scale":"Gets if this animation should override its parts vanilla scale.","figura.docs.animation.override_rot":"Set if this animation should override its parts vanilla rotation.","figura.docs.animation.override_pos":"Set if this animation should override its parts vanilla position.","figura.docs.animation.override_scale":"Set if this animation should override its parts vanilla scale.","figura.docs.animation.get_loop":"Gets the animation's loop mode.","figura.docs.animation.loop":"Sets the animation's loop mode.","figura.docs.animation.get_priority":"Gets the animation's priority.","figura.docs.animation.priority":"Sets the animation's priority. Instead of blending, low priority animations are overridden by high priority ones.","figura.docs.animation.get_speed":"Gets the animation's speed.","figura.docs.animation.speed":"Sets the animation's playback speed. Negative numbers can be used for an inverted animation.","figura.docs.avatar":"A global API containing functions to interact with your avatar's metadata, and also to get information about the current script environment.","figura.docs.avatar.store":"Store the given key-value pair inside your current avatar's metadata. Someone else can get this information from a different script with the playerVars() function in World. The key must be a string.","figura.docs.avatar.get_current_instructions":"Gets the current number of instructions that have been executed by your avatar. Resets to 0 at the beginning of certain events.","figura.docs.avatar.get_color":"Gets the current color string of your avatar, used as your avatar theme.","figura.docs.avatar.set_color":"Sets the current color string of your avatar, used as your avatar theme.","figura.docs.avatar.get_version":"Gets the version string of this avatar.","figura.docs.avatar.get_authors":"Gets the authors string of this avatar.","figura.docs.avatar.get_name":"Gets the name string of this avatar.","figura.docs.avatar.get_size":"Gets the file size of this avatar in bytes.","figura.docs.avatar.has_texture":"Gets whether or not this avatar has a texture.","figura.docs.avatar.has_script_error":"Gets whether this script currently has stopped due to an error (kinda useless lmao).","figura.docs.avatar.get_init_count":"Gets the number of initialization instructions of this avatar.","figura.docs.avatar.get_entity_init_count":"Gets the number of Events.ENTITY_INIT instructions of this avatar.","figura.docs.avatar.get_max_init_count":"Gets the maximum allowed instructions during initialization in the trust settings of the viewer.","figura.docs.avatar.get_tick_count":"Gets the number of Events.TICK instructions of this avatar last tick.","figura.docs.avatar.get_max_tick_count":"Gets the maximum allowed instructions in Events.TICK in the trust settings of the viewer.","figura.docs.avatar.get_render_count":"Gets the number of Events.RENDER and Events.POST_RENDER instructions of this avatar last frame.","figura.docs.avatar.get_max_render_count":"Gets the maximum allowed instructions in Events.RENDER and Events.POST_RENDER in the trust settings of the viewer.","figura.docs.avatar.get_world_tick_count":"Gets the number of Events.WORLD_TICK instructions of this avatar last tick.","figura.docs.avatar.get_max_world_tick_count":"Gets the maximum allowed instructions in Events.WORLD_TICK in the trust settings of the viewer.","figura.docs.avatar.get_world_render_count":"Gets the number of Events.WORLD_RENDER and Events.POST_WORLD_RENDER instructions of this avatar last frame.","figura.docs.avatar.get_max_world_render_count":"Gets the maximum allowed instructions in Events.WORLD_RENDER and Events.POST_WORLD_RENDER in the trust settings of the viewer.","figura.docs.avatar.get_complexity":"Gets the current complexity of this avatar.","figura.docs.avatar.get_max_complexity":"Gets the maximum allowed model complexity (number of faces) in the trust settings of the viewer.","figura.docs.avatar.get_remaining_particles":"Gets the remaining amount of particles this avatar can summon.","figura.docs.avatar.get_max_particles":"Gets the maximum allowed number of particles in the trust settings of the viewer.","figura.docs.avatar.get_remaining_sounds":"Gets the remaining amount of sound this avatar can play.","figura.docs.avatar.get_max_sounds":"Gets the maximum allowed number of sounds in the trust settings of the viewer.","figura.docs.avatar.get_animation_complexity":"Gets the current animation complexity of this avatar.","figura.docs.avatar.get_max_animation_complexity":"Gets the maximum allowed animation complexity (number of playing channels) in the trust settings of the viewer.","figura.docs.avatar.can_edit_vanilla_model":"Gets whether or not the viewer allows your avatar to edit the vanilla models.","figura.docs.avatar.can_edit_nameplate":"Gets whether or not the viewer allows your avatar to edit your nameplate.","figura.docs.avatar.can_render_offscreen":"Gets whether or not the viewer trusts you to render the avatar off-screen.","figura.docs.avatar.can_use_custom_sounds":"Gets whether or not the viewer allows your avatar to play custom sounds.","figura.docs.biome":"A proxy for a Minecraft biome. Instances are obtained through the WorldAPI. This proxy also contains a saved position for the Biome.","figura.docs.biome.name":"The name of this biome, according to the registry.","figura.docs.biome.get_pos":"Returns the saved position for this Biome's proxy. The saved position is used in Biome functions that require a position.","figura.docs.biome.set_pos":"Sets the saved position for this Biome's proxy. The saved position is used in Biome functions that require a position.","figura.docs.biome.get_tags":"Gets the worldgen related tags from this Biome.","figura.docs.biome.get_temperature":"Gets the temperature of this biome.","figura.docs.biome.get_precipitation":'Gets the rain type of this biome. The type can be "NONE", "RAIN" or "SNOW".',"figura.docs.biome.get_sky_color":"Gets this biome's sky color as a RGB vector.","figura.docs.biome.get_foliage_color":"Gets this biome's foliage color as a RGB vector.","figura.docs.biome.get_grass_color":"Gets this biome's grass color as a RGB vector.","figura.docs.biome.get_fog_color":"Gets this biome's fog color as a RGB vector.","figura.docs.biome.get_water_color":"Gets this biome's water color as a RGB vector.","figura.docs.biome.get_water_fog_color":"Gets this biome's water fog color as a RGB vector.","figura.docs.biome.get_downfall":"Gets this biome's humidity.","figura.docs.biome.is_hot":"Checks if this biome is hot.","figura.docs.biome.is_cold":"Checks if this biome is cold.","figura.docs.blockstate":"A proxy for a block state from Minecraft. Instances are obtained through the WorldAPI. This proxy also contains a saved position for the BlockState.","figura.docs.blockstate.id":"The identifier of the block this BlockState comes from.","figura.docs.blockstate.properties":"A table containing the properties of this BlockState. If this BlockState has no properties, it is nil.","figura.docs.blockstate.get_pos":"Returns the saved position for this BlockState proxy. The saved position is used in BlockState functions that require a position.","figura.docs.blockstate.set_pos":"Sets the saved position for this BlockState proxy. The saved position is used in BlockState functions that require a position.","figura.docs.blockstate.is_translucent":"Gets whether or not the BlockState would propagate sky light downwards.","figura.docs.blockstate.get_opacity":"Gets the opacity of the BlockState, in terms of how much it affects light levels.","figura.docs.blockstate.get_map_color":"Gets the map color of this BlockState, as a Vector3 with R,G,B ranging 0 to 1.","figura.docs.blockstate.is_solid_block":'Gets whether or not the BlockState is considered a "solid" block by Minecraft.',"figura.docs.blockstate.is_full_cube":"Gets whether or not the BlockState has a full cube as its collision hitbox.","figura.docs.blockstate.has_emissive_lightning":"Gets whether or not the BlockState uses emissive lighting.","figura.docs.blockstate.get_hardness":"Gets the hardness of the BlockState.","figura.docs.blockstate.get_comparator_output":"Gets the amount of signal strength a comparator would get from this BlockState.","figura.docs.blockstate.has_block_entity":"Gets whether or not this BlockState has an associated block entity.","figura.docs.blockstate.is_opaque":"Gets whether or not this BlockState is opaque.","figura.docs.blockstate.emits_redstone_power":"Gets whether or not this BlockState emits redstone power.","figura.docs.blockstate.get_luminance":"Gets the emission light level of this BlockState.","figura.docs.blockstate.get_friction":"Gets the friction of this BlockState. (Slime blocks and ice in vanilla)","figura.docs.blockstate.get_velocity_multiplier":"Gets the velocity multiplier of this BlockState. (Only Soul sand, honey blocks in vanilla)","figura.docs.blockstate.get_jump_velocity_multiplier":"Gets the jump velocity multiplier of this BlockState. (Literally just honey blocks in vanilla)","figura.docs.blockstate.get_blast_resistance":"Gets the blast resistance of this BlockState.","figura.docs.blockstate.as_item":"Returns an ItemStack representing this block in item form, whatever Minecraft deems that to be. If it cannot find an item for this block, it will return nil.","figura.docs.blockstate.get_tags":"Returns a table containing all the tags of this block, as strings.","figura.docs.blockstate.get_material":"Gets the name of the material this block is made of.","figura.docs.blockstate.get_has_collision":"Returns true if this block has collision.","figura.docs.blockstate.get_collision_shape":"Returns a table representing the bounding boxes of the collision shape. The table a list of Vector6, where the first 3 coordinates are one corner of the box and the last 3 are the other corner.","figura.docs.blockstate.get_outline_shape":"Returns a table representing the bounding boxes of the outline shape. The table a list of Vector6, where the first 3 coordinates are one corner of the box and the last 3 are the other corner.","figura.docs.blockstate.get_sounds":"Gets the names of all the sounds which can play from this BlockState, as well as their pitch and volume. Stored in a table.","figura.docs.blockstate.get_fluid_tags":"Returns a table containing all the fluid tags of this block, as strings.","figura.docs.blockstate.get_entity_data":"Returns the nbt of the Block Entity associated with this BlockState, at its position, as a table. Since the mod is only on client side, this NBT might not actually contain the real nbt, which is stored server-side.","figura.docs.blockstate.to_state_string":"Converts this BlockState into a string, like you'd see in a Minecraft command.","figura.docs.client":"A global API used to interact with the current Minecraft client. Most of its functions return things that can be found in the F3 menu.","figura.docs.client.get_fps":"Gets the FPS of the client. Returns 0 if the fps counter isn't ready yet (or if your pc is just that bad).","figura.docs.client.get_fps_string":"Gets the FPS string of the client, displayed in the F3 menu. Contains info on the fps, the fps limit, vsync, cloud types, and biome blend radius.","figura.docs.client.is_paused":"Returns true if the client is paused.","figura.docs.client.get_version":'Returns the "version" of your client. In testing, this returned "Fabric".',"figura.docs.client.get_version_type":'Returns the "version type" of your client. In testing, this returned "Fabric".',"figura.docs.client.get_server_brand":`Returns the type of server you're on. In singleplayer, this is "Integrated".`,"figura.docs.client.get_chunk_statistics":"Returns a string containing information about the player's chunk. This string appears in the F3 menu.","figura.docs.client.get_entity_statistics":"Returns a string containing information about the loaded entities on the client. This string appears in the F3 menu.","figura.docs.client.get_sound_statistics":"Returns a string containing information about the currently playing sounds on the client. This string appears in the F3 menu.","figura.docs.client.get_entity_count":"Returns the number of currently loaded entities.","figura.docs.client.get_particle_count":"Returns the number of currently loaded particles.","figura.docs.client.get_current_effect":"Returns the path to the currently applied shader, used when spectating an entity that has different vision than normal. Normally returns nil.","figura.docs.client.get_java_version":"Returns your current Java version you're playing Minecraft with.","figura.docs.client.get_used_memory":"Returns the number of bytes of memory Minecraft is currently using.","figura.docs.client.get_max_memory":"Returns the maximum amount of memory that Minecraft will try to use.","figura.docs.client.get_allocated_memory":"Returns the maximum amount of memory that Minecraft can possibly use.","figura.docs.client.is_window_focused":"Returns true if the Minecraft window is currently focused.","figura.docs.client.is_hud_enabled":"Returns true if the hud is enabled (F1 disables the HUD).","figura.docs.client.is_debug_overlay_enabled":"Returns true if the F3 screen is currently open.","figura.docs.client.get_window_size":"Returns the size of the Minecraft window in pixels, as {width, height}.","figura.docs.client.get_fov":"Returns the current FOV option of the client, not including additional effects such as speed or sprinting.","figura.docs.client.get_system_time":"Returns the current system time in milliseconds.","figura.docs.client.get_mouse_pos":"Returns the position of the mouse in pixels, relative to the top-left corner.","figura.docs.client.get_scaled_window_size":"Returns the size of the window in Minecraft's interal GUI units.","figura.docs.client.get_gui_scale":"Returns the current value of your Gui Scale setting. If you use auto, then it gets the actual current scale.","figura.docs.client.get_camera_pos":"Returns the position of the viewer's camera.","figura.docs.client.get_camera_rot":"Returns the rotation of the viewer's camera.","figura.docs.client.get_text_width":"Returns the width of the given text in pixels. In case of multiple lines, return the largest width of all lines","figura.docs.client.get_text_height":"Returns the height of the given text in pixels.","figura.docs.client.get_active_lang":"Returns a string representation of the current game language.","figura.docs.client.has_iris":"Checks if the client has the Iris mod installed.","figura.docs.client.has_iris_shader":"Checks if the client is currently using an Iris shader.","figura.docs.client.has_resource":"Checks if the specific resource exists withing the client resources.","figura.docs.client.get_active_resource_packs":"Returns a table with the active resource pack names.","figura.docs.client.get_figura_version":"Gets the client Figura version.","figura.docs.client.compare_versions":"Compares two versions if they are less than (-1), equals (0) or greater than (1).","figura.docs.client.int_uuid_to_string":"Converts an int array UUID (as 4 separated arguments) into its hexadecimal string representation.","figura.docs.client.get_viewer":"Returns the player entity from the running client.","figura.docs.config":"A global API used to save and load avatar data between game sessions.","figura.docs.config.name":"Sets the name of the destination file, data will be saved and loaded from that file. Defaults to the avatar name.","figura.docs.config.save":"Save to disk a variable under the specific key. If the value is nil, the variable is removed from the file.","figura.docs.config.load":"Loads a saved variable under the specific key. If no key is given, it will return a table with all saved variables.","figura.docs.entity":"Acts as a proxy for an entity in the Minecraft world.","figura.docs.entity.is_loaded":"Checks if this entity object is still being updated and loaded. A non loaded entity would be someone who is in another dimension or out of the render distance for example.","figura.docs.entity.get_pos":"Gets the position of the entity in the world. If delta is passed in, then it will be used to linearly interpolate the position of the entity between the previous tick and the current tick. The default value of delta is 1.","figura.docs.entity.get_rot":"Gets the rotation of the entity in degrees. If delta is passed in, then it will be used to linearly interpolate the rotation of the entity between the previous tick and the current tick. The default value of delta is 1.","figura.docs.entity.get_uuid":"Gets the UUID of the proxied entity.","figura.docs.entity.get_type":'Gets the Minecraft identifier of this entity. For instance, "minecraft:pig".',"figura.docs.entity.is_hamburger":'"Refused to elaborate."',"figura.docs.entity.get_velocity":"Gets the current velocity of this entity in world coordinates, calculated as its position this tick minus its position last tick.","figura.docs.entity.get_look_dir":"Returns a unit vector pointing in the direction that this entity is looking. See the blue line in the F3+B screen for an example.","figura.docs.entity.get_fire_ticks":"Returns the remaining number of ticks this entity will be on fire for.","figura.docs.entity.get_frozen_ticks":"Gets the number of ticks this entity has been freezing in powder snow for.","figura.docs.entity.get_air":"Gets the current amount of air this entity has remaining.","figura.docs.entity.get_max_air":"Gets the maximum amount of air this entity can have.","figura.docs.entity.get_dimension_name":"Gets the Minecraft identifier of the dimension this entity is in.","figura.docs.entity.get_pose":'Returns the current pose of the player. This can be one of: "STANDING", "FALL_FLYING", "SLEEPING", "SWIMMING", "SPIN_ATTACK", "CROUCHING", "LONG_JUMPING", or "DYING".',"figura.docs.entity.get_vehicle":"Returns a proxy for the entity that this player is currently riding. If the player isn't riding anything, returns nil.","figura.docs.entity.is_on_ground":"Returns whether or not this entity is currently on the ground.","figura.docs.entity.get_eye_height":"Returns the current eye height of this entity.","figura.docs.entity.get_bounding_box":"Returns the size of this entity's bounding box as a Vector3. {x, y, z} are the width, height, and width. Minecraft entity hitboxes always have square bases.","figura.docs.entity.get_name":"Gets the name of this entity, if it has a custom name. If it doesn't, returns a translated form of getType().","figura.docs.entity.is_wet":"Returns true in any of three conditions: if the entity is in water, if the entity is in rain, or if the entity is in a bubble column. Otherwise, returns false.","figura.docs.entity.is_in_water":"Returns true if this entity is currently in a water block, including waterlogging.","figura.docs.entity.is_underwater":"Returns true if this entity's eyes are touching water.","figura.docs.entity.is_in_lava":"Returns true if this entity is currently in lava.","figura.docs.entity.is_in_rain":"Returns true if this entity is currently standing in rain.","figura.docs.entity.has_avatar":"Returns true if Figura has an avatar loaded for this entity.","figura.docs.entity.is_sprinting":"Returns true if this entity is currently sprinting.","figura.docs.entity.get_eye_y":"Returns the Y level of this entity's eyes. Not to be confused with getEyeHeight, this function also takes the entity itself's Y position into account.","figura.docs.entity.is_glowing":"Returns true if this entity is currently glowing.","figura.docs.entity.is_invisible":"Returns true if this entity is invisible, for one reason or another.","figura.docs.entity.is_silent":"Returns true if this entity is silent.","figura.docs.entity.is_sneaking":"Returns true if this entity is sneaking.","figura.docs.entity.get_item":"Gets an ItemStack for the item in the given slot. For the player, slots are indexed with 1 as the main hand, 2 as the off hand, and 3,4,5,6 as the 4 armor slots from the boots to the helmet. If an invalid slot number is given, this will return nil.","figura.docs.entity.get_nbt":"Gets a table containing the NBT of this entity. Please note that not all values in the entity's NBT may be synced, as some are handled only on server side.","figura.docs.entity.is_on_fire":"Returns true if this entity is currently on fire.","figura.docs.entity.get_targeted_block":"Returns a proxy for your currently targeted BlockState. This BlockState appears on the F3 screen. Maximum and Default distance is 20, Minimum is -20","figura.docs.entity.get_variable":"Gets the value of a variable this entity stored in themselves using the Avatar api's store() function.","figura.docs.living_entity":"Acts as a proxy for a living entity in the Minecraft world.","figura.docs.living_entity.get_body_yaw":"Gets the yaw of this entity's body in degrees. If delta is passed in, then it will be used to linearly interpolate the rotation of the body between the previous tick and the current tick. The default value of delta is 1.","figura.docs.living_entity.get_held_item":`Returns an ItemStack representing the item in this entity's main hand. If true is passed in for "offhand", then it will instead look at the item in the entity's offhand. If the entity isn't holding an item in that hand, returns air.`,"figura.docs.living_entity.get_active_item":"Returns an ItemStack representing the item the entity is currently using. If they're not using any item, returns air.","figura.docs.living_entity.get_active_item_time":"Returns the ticks this entity's active item has been used for.","figura.docs.living_entity.get_health":"Returns the amount of health this entity has remaining.","figura.docs.living_entity.get_max_health":"Returns the maximum amount of health this entity can have.","figura.docs.living_entity.get_armor":"Returns the amount of armor points this entity has.","figura.docs.living_entity.get_death_time":"Returns the number of ticks this entity has been dead for.","figura.docs.living_entity.get_status_effects":"Returns, as a table, all of the status effects this entity has on it. The table contains sub-tables, each of which contains the name, amplifier, duration, and particle visibility of an effect this entity has.","figura.docs.living_entity.get_arrow_count":"Returns the number of arrows sticking out of this entity.","figura.docs.living_entity.get_stinger_count":"Returns the number of bee stingers sticking out of this entity.","figura.docs.living_entity.is_left_handed":"Returns true if the entity's main hand is its left.","figura.docs.living_entity.is_using_item":"Returns true if the entity is currently using an item.","figura.docs.living_entity.get_active_hand":'Returns "OFF_HAND" or "MAIN_HAND", depending on which hand this entity uses an item with.',"figura.docs.living_entity.is_climbing":"Returns true if the entity is currently using a climbable block, like a ladder or vine.","figura.docs.living_entity.get_swing_time":"Returns the number of ticks this entity has the arm swinging.","figura.docs.living_entity.is_swinging_arm":"Returns true if the entity is currently swinging its arm.","figura.docs.living_entity.get_swing_arm":'Returns "OFF_HAND" or "MAIN_HAND", based on the arm this entity is currently swinging.',"figura.docs.living_entity.get_swing_duration":"Returns the number of ticks this entity will have while swinging its arms.","figura.docs.player":`Acts as a proxy for a player entity in the Minecraft world. A global instance exists for the avatar's user, under the name "player".`,"figura.docs.player.get_food":"Gets the current food level of the player, from 0 to 20.","figura.docs.player.get_saturation":"Gets the current saturation level of the player.","figura.docs.player.get_experience_progress":"Gets the progress of the way towards the player's next level, as a value from 0 to 1.","figura.docs.player.get_experience_level":"Gets the player's current level.","figura.docs.player.is_flying":"Returns whether the player is currently flying.","figura.docs.player.get_model_type":`Returns "SLIM" or "DEFAULT", depending on the player's model type.`,"figura.docs.player.get_gamemode":`Returns "SURVIVAL", "CREATIVE", "ADVENTURE", or "SPECTATOR" depending on the player's gamemode. If the gamemode is unknown, returns nil.`,"figura.docs.player.is_skin_layer_visible":"Returns whether the specified skin layer, from the Skin Customizations settings, is currently visible.","figura.docs.events":'A global API that contains all of the figura Events. Accessed using the name "events".',"figura.docs.events.entity_init":"The ENTITY_INIT event is run once this avatar's entity exists.","figura.docs.events.tick":"The TICK event is run every tick in-game if this avatar's entity exists.","figura.docs.events.world_tick":"The WORLD_TICK event is run every in-game tick.","figura.docs.events.render":"The RENDER event is run every frame, before the avatar is rendered. Takes a parameter delta, which is a number from 0 to 1 indicating the proportion of the way the game is between ticks. And also a second context parameter, which is a string of the current RenderMode, with the source of this render event.","figura.docs.events.post_render":"The POST_RENDER event runs every frame, after the avatar is rendered. Takes a parameter delta, which is a number from 0 to 1 indicating the proportion of the way the game is between ticks.","figura.docs.events.world_render":"The WORLD_RENDER event is run every frame, before the world is rendered. Always runs when a world is visible, even when the avatar itself is not, so this runs even in first person. Takes a parameter delta, which is a number from 0 to 1 indicating the proportion of the way the game is between ticks.","figura.docs.events.post_world_render":"The POST_WORLD_RENDER event runs every frame, after the world is rendered. Always runs when a world is visible, even when the avatar itself is not, so this runs even in first person. Takes a parameter delta, which is a number from 0 to 1 indicating the proportion of the way the game is between ticks.","figura.docs.events.chat_send_message":"The CHAT_SEND_MESSAGE event is run every time you send a message in chat. A string parameter is passed in, which contains the message that was sent. The return value is chained to the next events of the same type, whereas NIL cancels the message from being sent and any other value will modify the sent message (if allowed in the settings).","figura.docs.events.chat_receive_message":"The CHAT_RECEIVE_MESSAGE event is run every time a message is received in chat. A string parameter is passed in, which contains the message you received.","figura.docs.events.skull_render":"Called between POST_RENDER and POST_WORLD_RENDER, on every one of your skull blocks placed in the world. The arguments are the tick delta and the position of the skull as a vector.","figura.docs.events.mouse_scroll":"The MOUSE_SCROLL event runs every time the mouse is scrolled. Takes a parameter delta, which is the direction of the scroll.","figura.docs.events.use_item":"The USE_ITEM event is run every time the entity uses an item. The item, action and amount of particles this item would produce is given as argument.","figura.docs.event":"A hook for a certain event in Minecraft. You may register functions to one, and those functions will be called when the event occurs.","figura.docs.event.register":"Registers the given function to the given event. When the event occurs, the function will be run. Functions are run in the order they were registered. The optional name parameter is used when you wish to later remove a function from the event.","figura.docs.event.clear":"Clears the given event of all its functions.","figura.docs.event.remove":"Removes all functions with the given name from the event. Returns the number of functions that were removed.","figura.docs.host":"A global API dedicated to specifically the host of the avatar. For other viewers, these do nothing.","figura.docs.host.unlock_cursor":"Setting this value to true will unlock your cursor, letting you move it freely on the screen instead of it controlling your player's rotation.","figura.docs.host.is_host":"Returns true if this instance of the script is running on host.","figura.docs.host.get_targeted_entity":"Returns a proxy for your currently targeted entity. This entity appears on the F3 screen.","figura.docs.host.set_title_times":"Sets the duration of the title on the screen, also its fade-in and fade-out durations.","figura.docs.host.clear_title":"Clears the current title from the GUI.","figura.docs.host.set_title":"Sets the current title to the given text. The text is given as json.","figura.docs.host.set_subtitle":"Sets the current subtitle to the given text. The text is given as json.","figura.docs.host.set_actionbar":"Sets the action bar message to the given text. The boolean parameter defaults to false.","figura.docs.host.send_chat_message":"Sends the given message in the chat.","figura.docs.host.send_chat_command":"Sends the given command in the chat.","figura.docs.host.append_chat_history":"Appends the message on the recent chat history.","figura.docs.host.swing_arm":"Animates swinging the player's arm. If the boolean is true, then the offhand is the one that swings.","figura.docs.host.is_first_person":"Returns true if the camera is in first person mode.","figura.docs.host.is_camera_backwards":"Returns true if the camera is facing backwards.","figura.docs.host.get_slot":"Gets an ItemStack for the item in the given slot. The slot is either their numerical id (0 indexed) or the slot string, as used in the /item command.","figura.docs.host.get_chat_color":"Gets the chat window text color.","figura.docs.host.set_chat_color":"Sets the color of the text that is currently being typed into the chat window.","figura.docs.host.get_chat_text":"Gets the text that is currently being typed into the chat window.","figura.docs.host.set_chat_text":"Sets the text currently being typed in the chat window to the given string.","figura.docs.host.get_screen":"Gets the class name of the screen the player is currently on. If the player is not currently in a screen, returns nil.","figura.docs.host.is_chat_open":"Checks if the host has the chat screen opened.","figura.docs.host.is_container_open":"Checks if the host has a container screen opened.","figura.docs.host.save_texture":"A debug function, saves the texture on the cache directory as png.","figura.docs.host.screenshot":"Takes a screenshot from the current screen and returns a Texture of it.","figura.docs.itemstack":"A proxy for an item stack from Minecraft.","figura.docs.itemstack.id":"Contains the id of the item this ItemStack refers to.","figura.docs.itemstack.tag":"A table containing the NBT tag of this ItemStack. If this ItemStack has nothing in its tag, it is nil.","figura.docs.itemstack.get_count":"Gets the number of items in this stack.","figura.docs.itemstack.get_damage":"Gets the damage value of the item in this stack. Works on things like tools, or other things with a durability bar.","figura.docs.itemstack.get_cooldown":"Gets the remaining cooldown on this item, in ticks.","figura.docs.itemstack.has_glint":"Returns true if this item glows with enchantment glint.","figura.docs.itemstack.get_tags":"Gets all the tags of this item as strings in a table.","figura.docs.itemstack.is_block_item":"Returns true if this item represents a block.","figura.docs.itemstack.is_food":"Returns true if this item is edible.","figura.docs.itemstack.get_use_action":"Returns the name of the animation that plays when using this item.","figura.docs.itemstack.get_name":"Gets the name of the item.","figura.docs.itemstack.get_max_count":"Gets the maximum stack size of this item.","figura.docs.itemstack.get_rarity":"Gets the rarity of this item stack. COMMON = white, UNCOMMON = yellow, RARE = aqua, EPIC = light purple.","figura.docs.itemstack.is_enchantable":"Returns true if this item stack can be put in an enchanting table.","figura.docs.itemstack.get_max_damage":"Gets the maximum durability of this item stack.","figura.docs.itemstack.is_damageable":"Returns true if this item stack has durability.","figura.docs.itemstack.is_stackable":"Returns true if the item is stackable.","figura.docs.itemstack.get_repair_cost":"Gets the repair cost modifier, in an anvil, for this item stack.","figura.docs.itemstack.get_use_duration":'Gets the number of ticks needed to "use" this item. Currently only has a use for food items. Always 32 for food items except kelp, which is 16.',"figura.docs.itemstack.to_stack_string":"Converts this ItemStack to a string, like you'd see in a command.","figura.docs.keybind_api":"A global API containing a function to create new Keybind instances.","figura.docs.keybind_api.create":`Creates and returns a new Keybind. The name is used in the keybind menu. The key parameter is an identifier for a key, such as "key.keyboard.r". The boolean gui indicates whether the keybind should always work, or if it should only work when you don't have a screen open. Check the docs list command for all key names.`,"figura.docs.keybind_api.get_vanilla_key":"Gets the id of the key bound to the given action, as a string. Check the docs list command for all key names and vanilla actions.","figura.docs.keybind":"Represents a key binding for your script. Instances are obtained using the KeybindAPI's create() function.","figura.docs.keybind.set_key":"Sets the key for this keybind.","figura.docs.keybind.is_default":"Checks whether this key is currently set to its default state (not been changed using the keybind menu)","figura.docs.keybind.get_key":"Gets the current key for this keybind.","figura.docs.keybind.get_key_name":"Gets the name of the current key for this keybind.","figura.docs.keybind.get_name":"Gets the name of the keybind, which you set when you created the keybind.","figura.docs.keybind.is_pressed":"Gets whether this keybind is currently pressed down.","figura.docs.keybind.on_press":"A function that runs when the key is pressed down.","figura.docs.keybind.on_release":"A function that runs when the key is released.","figura.docs.keybind.enabled":"Toggles if this keybind should be processed or not.","figura.docs.keybind.gui":"Whenever or not this keybind should run when a GUI is open.","figura.docs.matrices":'A global API which provides functions dedicated to creating and otherwise manipulating matrices. Accessed using the name "matrices".',"figura.docs.matrices.mat2":"Creates a Matrix2 using the given parameters as columns. If you call the function with no parameters, returns the 2x2 identity matrix.","figura.docs.matrices.mat3":"Creates a Matrix3 using the given parameters as columns. If you call the function with no parameters, returns the 3x3 identity matrix.","figura.docs.matrices.mat4":"Creates a Matrix4 using the given parameters as columns. If you call the function with no parameters, returns the 4x4 identity matrix.","figura.docs.matrices.rotation2":"Creates a new Matrix2 that rotates by the specified angle. Angle is given in degrees.","figura.docs.matrices.rotation3":"Creates a new Matrix3 that rotates by the specified angles. Angles are given in degrees, and the rotation order is ZYX.","figura.docs.matrices.x_rotation3":"Creates a new Matrix3 that rotates by the specified angle around the X axis. Angle is given in degrees.","figura.docs.matrices.y_rotation3":"Creates a new Matrix3 that rotates by the specified angle around the Y axis. Angle is given in degrees.","figura.docs.matrices.z_rotation3":"Creates a new Matrix3 that rotates by the specified angle around the Z axis. Angle is given in degrees.","figura.docs.matrices.rotation4":"Creates a new Matrix4 that rotates by the specified angles. Angles are given in degrees, and the rotation order is ZYX.","figura.docs.matrices.x_rotation4":"Creates a new Matrix4 that rotates by the specified angle around the X axis. Angle is given in degrees.","figura.docs.matrices.y_rotation4":"Creates a new Matrix4 that rotates by the specified angle around the Y axis. Angle is given in degrees.","figura.docs.matrices.z_rotation4":"Creates a new Matrix4 that rotates by the specified angle around the Z axis. Angle is given in degrees.","figura.docs.matrices.scale2":"Creates a new Matrix2 that scales by the specified factors.","figura.docs.matrices.scale3":"Creates a new Matrix3 that scales by the specified factors.","figura.docs.matrices.scale4":"Creates a new Matrix4 that scales by the specified factors.","figura.docs.matrices.translate4":"Creates a new Matrix4 that translates by the specified offset.","figura.docs.matrices.translate3":"Creates a new Matrix3 that translates by the specified offset.","figura.docs.matrix2":"A matrix with 2 rows and 2 columns.","figura.docs.matrix3":"A matrix with 3 rows and 3 columns.","figura.docs.matrix4":"A matrix with 4 rows and 4 columns.","figura.docs.matrix_n.copy":"Creates and returns a new copy of this matrix.","figura.docs.matrix_n.get_column":"Gets the given column of this matrix, as a vector. Indexing starts at 1, as usual.","figura.docs.matrix_n.get_row":"Gets the given row of this matrix, as a vector. Indexing starts at 1, as usual.","figura.docs.matrix_n.set":"Sets this matrix to have the same values as the matrix passed in. Returns self for chaining.","figura.docs.matrix_n.multiply":"Multiplies this matrix by the other matrix, with the other matrix on the left. Returns self for chaining.","figura.docs.matrix_n.right_multiply":"Multiplies this matrix by the other matrix, with the other matrix on the right. Returns self for chaining.","figura.docs.matrix_n.transpose":"Transposes this matrix, changing the values inside. Transposing means to swap the rows and the columns. Returns self for chaining.","figura.docs.matrix_n.transposed":"Returns a copy of this matrix, but transposed. Transposing means to swap the rows and the columns.","figura.docs.matrix_n.invert":"Inverts this matrix, changing the values inside. Returns self for chaining.","figura.docs.matrix_n.inverted":"Returns a copy of this matrix, but inverted.","figura.docs.matrix_n.det":"Calculates and returns the determinant of this matrix.","figura.docs.matrix_n.reset":"Resets this matrix back to the identity matrix. Returns self for chaining.","figura.docs.matrix_n.add":"Adds the other matrix to this one. Returns self for chaining.","figura.docs.matrix_n.sub":"Subtracts the other matrix from this one. Returns self for chaining.","figura.docs.matrix_n.scale":"Scales this matrix by the specified amount, changing the values inside. Returns self for chaining.","figura.docs.matrix_n.translate":"Translates this matrix by the specified amount, changing the values inside. Returns self for chaining.","figura.docs.matrix_n.rotate_x":"Rotates this matrix around the X axis by the specified number of degrees. Returns self for chaining.","figura.docs.matrix_n.rotate_y":"Rotates this matrix around the Y axis by the specified number of degrees. Returns self for chaining.","figura.docs.matrix_n.rotate_z":"Rotates this matrix around the Z axis by the specified number of degrees. Returns self for chaining.","figura.docs.matrix_n.rotate":"Rotates this matrix by the specified amount, changing the values inside. Angles are given in degrees. Returns self for chaining.","figura.docs.matrix_n.deaugmented":"Deaugments this matrix, removing a row and column.","figura.docs.matrix_n.augmented":"Augments this matrix, adding an additional row and column. Puts a 1 along the diagonal in the new spot, and the rest are zero.","figura.docs.matrix_n.apply":"Treats the given values as a vector, augments this vector with a 1, multiplies it against the matrix, and returns a deaugmented vector of the first values.","figura.docs.matrix_n.apply_dir":"Treats the given values as a vector, augments this vector with a 0, multiplies it against the matrix, and returns a deaugmented vector of the first values.","figura.docs.model_part":'Represents a node in the model tree, basically a group/cube/mesh in Blockbench. Each bbmodel file is itself a ModelPart, and all of your models are contained in a global ModelPart called "models".',"figura.docs.model_part.get_name":"The name of this model part.","figura.docs.model_part.get_parent":"Gets the parent part of this part. If this part has no parent, returns nil.","figura.docs.model_part.get_children":"Gets the children of this part, stored in a table.","figura.docs.model_part.get_pos":"Gets the position of the model part, as an offset from its position in blockbench. Only changes from {0,0,0} when you call setPos().","figura.docs.model_part.set_pos":"Sets the position offset for this part from its blockbench position. Nil values for position are assumed to be 0.","figura.docs.model_part.get_anim_pos":"Gets the position offset provided by the currently active animation of this model part.","figura.docs.model_part.get_rot":'Gets the rotation of the model part, including its rotation in blockbench. For relative rotation values, check out the "offset" rot functions.',"figura.docs.model_part.set_rot":'Sets the absolute rotation for this part. Nil values for rotation are assumed to be 0. Angles are given in degrees. For relative rotation values, check out the "offset" rot functions.',"figura.docs.model_part.get_offset_rot":"Gets the offset rotation of the model part, offset from its rotation in blockbench. For absolute rotation values, check out the non-offset rot functions.","figura.docs.model_part.offset_rot":"Sets the offset rotation for this part. Nil values for rotation are assumed to be 0. Angles are given in degrees. For absolute rotation values, check out the non-offset rot functions.","figura.docs.model_part.get_anim_rot":"Gets the rotation offset provided by the currently active animation of this model part.","figura.docs.model_part.get_scale":"Gets the scale of the model part, as a multiple of its blockbench size. Only changes from {1,1,1} when you call setScale().","figura.docs.model_part.set_scale":"Sets the scale factor for this part. Nil values for scale are assumed to be 1.","figura.docs.model_part.get_anim_scale":"Gets the scale multiplier provided by the currently active animation of this model part.","figura.docs.model_part.get_pivot":'Gets the pivot point of the model part, including its pivot in blockbench. For relative values, check out the "offset" pivot functions.',"figura.docs.model_part.set_pivot":'Sets the absolute pivot for this part. Nil values are assumed to be 0. For relative pivot offsets, check out the "offset" pivot functions.',"figura.docs.model_part.get_offset_pivot":"Gets the offset pivot of the model part, offset from its pivot in blockbench. For absolute pivot point values, check out the non-offset pivot functions.","figura.docs.model_part.offset_pivot":"Sets the offset pivot point for this part. Nil values are assumed to be 0. For absolute pivot point values, check out the non-offset pivot functions.","figura.docs.model_part.get_position_matrix":"Recalculates the matrix for this model part, based on its current position, rotation, scale, and pivot, then returns this matrix.","figura.docs.model_part.get_position_matrix_raw":"Returns the position matrix for this model part. The Raw version of the function is different in that it doesn't recalculate the matrix before getting it.","figura.docs.model_part.get_normal_matrix":"Recalculates the normal matrix for this model part, based on its current position, rotation, scale, and pivot, then returns this matrix.","figura.docs.model_part.get_normal_matrix_raw":"Returns the normal matrix for this model part. The Raw version of the function is different in that it doesn't recalculate the matrix before returning it.","figura.docs.model_part.set_matrix":"Sets the given matrix as the position matrix for this model part. The normal matrix is automatically calculated as the inverse transpose of this matrix. Calling this DOES NOT CHANGE the values of position, rot, or scale in the model part. If you call setPos() or a similar function, the effects of setMatrix() will be overwritten.","figura.docs.model_part.get_visible":"Gets whether or not this model part is visible. The default value is nil, meaning it copies the visibility of its parent part during rendering.","figura.docs.model_part.set_visible":"Sets this part to be visible or invisible. The default value is nil, meaning the part copies its visibility from its parent part.","figura.docs.model_part.get_primary_render_type":"Gets the current primary render type of this model part. Nil by default, meaning the part copies the primary render type of its parent.","figura.docs.model_part.get_secondary_render_type":"Gets the current secondary render type of this model part. Nil by default, meaning the part copies the secondary render type of its parent.","figura.docs.model_part.set_primary_render_type":"Sets the current primary render type of this model part. Nil by default, meaning the part copies the primary render type of its parent during rendering. Check the docs list command for all render types.","figura.docs.model_part.set_secondary_render_type":"Sets the current secondary render type of this model part. Nil by default, meaning the part copies the secondary render type of its parent during rendering. Check the docs list command for all render types.","figura.docs.model_part.set_primary_texture":'Sets the primary texture override of this part. Check the TextureType types in the list docs. If using "resource", the second parameter should indicate the path to the Minecraft texture you want to use. If using "custom", the second parameter should indicate a texture reference or name',"figura.docs.model_part.set_secondary_texture":'Sets the secondary texture override of this part. Check the TextureType types in the list docs. If using "resource", the second parameter should indicate the path to the Minecraft texture you want to use. If using "custom", the second parameter should indicate a texture reference or name',"figura.docs.model_part.get_textures":"Returns a table with all textures used by this part. Do not include children textures, so groups usually will return an empty table.","figura.docs.model_part.part_to_world_matrix":"Gets a matrix which transforms a point from this part's position to a world location. Recommended to use this in POST_RENDER, as by then the matrix is updated. In RENDER it will be 1 frame behind the part's visual position for that frame. Also, if the model is not rendered in-world, the part's matrix will not be updated. Paperdoll rendering and other UI rendering will not affect this matrix.","figura.docs.model_part.get_texture_size":"Gets the width, height of this part's texture in pixels. Throws an error if this part has multiple different-sized textures on it, or if the part is a Group.","figura.docs.model_part.set_uv":"Sets the UV of this part. This function is normalized, meaning it works with values 0 to 1. If you say setUV(0.5, 0.25), for example, it will scroll by half of your texture width to the right, and one fourth of the texture width downwards.","figura.docs.model_part.get_uv":"Gets the UV of this part. This function is normalized, meaning it will return values between 0 to 1.","figura.docs.model_part.set_uv_pixels":"Sets the UV of this part in pixels. Automatically divides by the results of getTextureSize(), so you can just input the number of pixels you want the UV to scroll by. Errors if the part has multiple different-sized textures of if the part is a Group.","figura.docs.model_part.get_uv_pixels":"Gets the UV of this part. Automatically multiplies the result by getTextureSize(). Errors if the part has multiple different-sized textures of if the part is a Group.","figura.docs.model_part.set_uv_matrix":"Sets the UV matrix of this part. This matrix is applied to all UV points during the transform, with the UVs treated as homogeneous vectors. setUV() and setUVPixels() are actually just simpler ways of setting this matrix.","figura.docs.model_part.get_uv_matrix":"Gets the UV matrix of this part.","figura.docs.model_part.set_color":"Sets the color multiplier for this part. Values are RGB from 0 to 1. Default values are 1, indicating white/no color change.","figura.docs.model_part.get_color":"Gets the color multiplier of this part. Values are RGB from 0 to 1. Default values are 1, indicating white/no color change.","figura.docs.model_part.set_opacity":"Sets the opacity multiplier of this part. Note that opacity settings will only take effect if the part has a suitable Render Type for them, mainly TRANSLUCENT. Check out modelPart.setPrimaryRenderType() for how to do this.","figura.docs.model_part.get_opacity":"Gets the opacity multiplier of this part. Note that opacity settings will only take effect if the part has a suitable Render Type for them, mainly TRANSLUCENT. Check out modelPart.setPrimaryRenderType() for how to do this.","figura.docs.model_part.set_light":"Sets the light level to be used when rendering this part. Values you give are 0 to 15, indicating the block light and sky light levels you want to use. Passing nil will reset the lighting override for this part.","figura.docs.model_part.get_light":"Gets the light level you set earlier to this part. Does not interact with Minecraft's lighting system, only retrieving values you set earlier with setLight().","figura.docs.model_part.set_parent_type":"Sets the parent type of the part. See the ParentType parts in the list docs for legal types.","figura.docs.model_part.get_parent_type":"Returns the current parent type of the part.","figura.docs.model_part.get_type":'Returns whether this part is a "GROUP", a "CUBE", or a "MESH".',"figura.docs.model_part.override_vanilla_rot":"Returns if this part vanilla rotation is being overridden by an animation.","figura.docs.model_part.override_vanilla_pos":"Returns if this part vanilla position is being overridden by an animation","figura.docs.model_part.override_vanilla_scale":"Returns if this part vanilla scale is being overridden by an animation","figura.docs.model_part.add_text":"Adds a new Text Render Task on this part.","figura.docs.model_part.add_item":"Adds a new Item Render Task on this part.","figura.docs.model_part.add_block":"Adds a new Block Render Task on this part.","figura.docs.model_part.get_task":"Gets the Render Task with the given name from this part. Returns a table with all tasks if a name is not given.","figura.docs.model_part.remove_task":"Removes the Task with the given name from this part. Removes ALL tasks if a name is not given.","figura.docs.nameplate":"A global API which is used for customizing your player's nameplate in chat, above your head, and in the tab list.","figura.docs.nameplate.chat":"A customization for your nameplate in the chat.","figura.docs.nameplate.entity":"A customization for your nameplate above your head.","figura.docs.nameplate.list":"A customization for your nameplate in the tab list.","figura.docs.nameplate.all":"A group that manage all your nameplate customizations at once.","figura.docs.nameplate_customization":"A customization that can be applied to a nameplate.","figura.docs.nameplate_customization.get_text":"The text to use in this nameplate.","figura.docs.nameplate_customization.set_text":"The text to use in this nameplate.","figura.docs.nameplate_entity":"A nameplate customization that is specialized for entities.","figura.docs.nameplate_entity.visible":"Whether or not should the nameplate be rendered.","figura.docs.nameplate_entity.shadow":'Whether or not should the nameplate have shadow. Incompatible with "outline".',"figura.docs.nameplate_entity.outline":'Whether or not should the nameplate have outline. Incompatible with "shadow".',"figura.docs.nameplate_entity.get_pos":"Gets the position offset of the nameplate, in world coordinates.","figura.docs.nameplate_entity.set_pos":"Sets the position offset of the nameplate, in world coordinates.","figura.docs.nameplate_entity.get_scale":"Gets scale factor of the nameplate.","figura.docs.nameplate_entity.set_scale":"Sets the scale factor of the nameplate.","figura.docs.nameplate_entity.set_background_color":"Sets the color of the nameplate background. If the alpha value is not given, it will uses the vanilla value (from the accessibility settings) for it.","figura.docs.nameplate_group":"A customization that holds another nameplate customizations.","figura.docs.nameplate_group.set_text":"Sets the text for all its children customizations.","figura.docs.particles":`A global API which is used for dealing with Minecraft's particles. Particles instances are created when indexing their id. Accessed using the name "particles".`,"figura.docs.particles.add_particle":'Creates a particle with the given name at the specified position, with the given velocity. Some particles have special properties, like the "dust" particle. For these particles, the special properties can be put into the "name" parameter, the same way as it works for commands.',"figura.docs.particles.remove_particles":"Removes all particles spawned from this avatar.","figura.docs.particle":"Represents a particle that can be spawned and modified. Obtained by indexing the ParticleAPI. Exists as an object-oriented alternative to particles:addParticle().","figura.docs.particle.spawn":"Spawns this particle with the current properties.","figura.docs.particle.remove":"Removes this particle from the world.","figura.docs.particle.is_alive":"Checks if this particle is not flagged for removal.","figura.docs.particle.get_lifetime":"Gets this particle current lifetime.","figura.docs.particle.pos":"Sets this particle position. The position is given in world coordinates. Returns this particle for method chaining.","figura.docs.particle.velocity":"Sets the velocity of this particle. The velocity is given in world coordinates. Returns this particle for method chaining.","figura.docs.particle.color":"Sets this particle color. Accepts and alpha value, but most particles do not supports it. Default rgba of 1. Returns this particle for method chaining.","figura.docs.particle.lifetime":"Sets this particle lifetime, which is how many ticks this particle should stay in the world. Returns this particle for method chaining.","figura.docs.particle.power":"Sets this particle power. Returns this particle for method chaining.","figura.docs.particle.scale":"Sets this particle scale. Returns this particle for method chaining.","figura.docs.particle.gravity":"Sets this particle gravity. Returns this particle for method chaining.","figura.docs.particle.physics":"Sets if this particle has physics. Returns this particle for method chaining.","figura.docs.pings":"A global API dedicated to register and call pings.","figura.docs.ping_function":"A custom function wrapped with networking data.","figura.docs.render_task":"Represents a rendering task for Figura to complete each frame. An abstract superclass of ItemTask, BlockTask, and TextTask.","figura.docs.render_task.is_enabled":"Checks if this task is enabled.","figura.docs.render_task.enabled":"Whether or not this task should be rendered.","figura.docs.render_task.is_emissive":"Checks if this task is emissive.","figura.docs.render_task.emissive":"Whether or not this task should be rendered at full bright.","figura.docs.render_task.get_pos":"Gets this task position.","figura.docs.render_task.pos":"The position of the task, relative with its attached part. Uses model coordinates.","figura.docs.render_task.get_rot":"Gets this task rotation.","figura.docs.render_task.rot":"The rotation of the task, relative with its attached part.","figura.docs.render_task.get_scale":"Gets this task scale.","figura.docs.render_task.scale":"The scale of the task, relative with its attached part.","figura.docs.item_task":"A task for rendering an Item.","figura.docs.item_task.item":"Sets the Item for this task render.","figura.docs.item_task.get_render_type":"Gets this task item rendering type.","figura.docs.item_task.render_type":"Sets the type of item rendering to use for this task.","figura.docs.block_task":"A task for rendering a Block.","figura.docs.block_task.block":"Sets the Block for this task render.","figura.docs.text_task":"A task for rendering some Text.","figura.docs.text_task.text":"Sets the Text for this task render.","figura.docs.text_task.is_centered":"Checks if this task text will render centered.","figura.docs.text_task.centered":'Toggles if the Text should render centered on this task pivot point. Not compatible with "Right" mode.',"figura.docs.text_task.is_right":"Checks if this task text will render anchored to the right side.","figura.docs.text_task.right":'Toggles if the Text should render anchored to the right on this task pivot point. Not compatible with "Centered" mode.',"figura.docs.text_task.has_shadow":"Checks if this task text has shadow.","figura.docs.text_task.shadow":'Toggles if the Text should render with a drop shadow. Not compatible with "Outline" mode',"figura.docs.text_task.has_outline":"Checks if this task text has outline.","figura.docs.text_task.outline":'Toggles if the Text should render with a outline. Always renders at full bright. Not compatible with "Shadow" and "Emissive" modes',"figura.docs.text_task.get_outline_color":"Gets this tasks text outline color.","figura.docs.text_task.outline_color":'Sets the outline color this Text should render. Only compatible with "Outline" mode',"figura.docs.renderer":"A global API providing functions that change the way Minecraft renders your player.","figura.docs.renderer.render_fire":"Whether or not you should visually have the fire effect while on fire. True by default.","figura.docs.renderer.render_vehicle":"Whether or not your vehicle (boat, minecart, horse, whatever) will be rendered. True by default.","figura.docs.renderer.render_crosshair":"Toggles whether or not if your crosshair should render. True by default.","figura.docs.renderer.force_paperdoll":"Toggles if the paperdoll should render regardless of the player doing an action. If the paperdoll is disabled, or set to always render, nothing will change. False by default.","figura.docs.renderer.set_shadow_radius":"Sets the radius of your shadow. The default value is nil, which means to use the vanilla default of 0.5 for players. The maximum value is 12.","figura.docs.renderer.get_shadow_radius":"Gets the radius of your shadow. The default value is nil, which means to use the vanilla default of 0.5 for players.","figura.docs.renderer.is_first_person":"Checks if your camera is in the first person view.","figura.docs.renderer.is_camera_backwards":"Checks if your camera is in the backwards third person view.","figura.docs.renderer.get_camera_pos":"Gets the position offset for the camera.","figura.docs.renderer.set_camera_pos":"Sets the position offset for the camera. Nil values for position are assumed to be 0.","figura.docs.renderer.get_camera_pivot":"Gets the absolute pivot for the camera.","figura.docs.renderer.set_camera_pivot":'Sets the absolute pivot for the camera. The pivot will also move the camera. Its values are relative to the World. Nil values for pivot are assumed to be 0. For relative rotation values, check out the "offset" pivot function.',"figura.docs.renderer.get_camera_offset_pivot":"Gets the offset pivot for the camera.","figura.docs.renderer.offset_camera_pivot":"Sets the offset pivot for the camera. The pivot will also move the camera. Its values are relative to the world. Nil values for pivot are assumed to be 0. For relative rotation values, check out the non-offset pivot function.","figura.docs.renderer.get_camera_rot":"Gets the absolute rotation of the camera.","figura.docs.renderer.set_camera_rot":'Sets the absolute rotation of the camera. The position is not taken into account for roll. Nil values for rotation are assumed to be 0. For relative rotation values, check out the "offset" rot function.',"figura.docs.renderer.get_camera_offset_rot":"Gets the offset rotation for the camera.","figura.docs.renderer.offset_camera_rot":"Sets the offset rotation for the camera. Nil values for rotation are assumed to be 0. Angles are given in degrees. For absolute rotation values, check out the non-offset rot function.","figura.docs.renderer.set_post_effect":"Sets the current rendering effect. Same as the discontinued Super Secret Settings.","figura.docs.sounds":'A global API which is used to play Minecraft sounds. Accessed using the name "sounds".',"figura.docs.sounds.play_sound":"Plays the specified sound at the specified position with the given volume and pitch multipliers. The sound id is either an identifier or the custom sound name. Volume in Minecraft refers to how far away people can hear the sound from, not the actual loudness of it. If you don't give values for volume and pitch, the default values are 1.","figura.docs.sounds.stop_sound":"Stops the playing sounds from this avatar. If an id is specified, it only stops the sounds from that id.","figura.docs.sounds.add_sound":"Registers a new custom sound for this avatar. The first argument is the sound id while the second argument is either a byte array of the sound data, or a base64 string representation of the same.","figura.docs.sound":"Represents a sound that can be played. Obtained by indexing the SoundAPI. Exists as an object-oriented alternative to sounds:playSound().","figura.docs.sound.play":"Plays this sound, or resume a paused sound.","figura.docs.sound.is_playing":"Checks if this sound is being played.","figura.docs.sound.pause":"Pauses the current playback of this sound.","figura.docs.sound.stop":"Stops the playback of this sound.","figura.docs.sound.pos":"Sets the position of this sound. Position is given in world coordinates. Default 0.","figura.docs.sound.get_pos":"Get this sound position.","figura.docs.sound.volume":"Sets the volume of this sound. Default 1.","figura.docs.sound.get_volume":"Gets this sound volume","figura.docs.sound.attenuation":"Sets the attenuation of this sound. Default 1.","figura.docs.sound.get_attenuation":"Gets this sound attenuation.","figura.docs.sound.pitch":"Sets the pitch of this sound. Default 1.","figura.docs.sound.get_pitch":"Gets this sound pitch.","figura.docs.sound.loop":"Toggles if this sound should loop. Default false.","figura.docs.sound.is_looping":"Checks if this sound is looping.","figura.docs.textures":"A global API which allows for creating textures at runtime.","figura.docs.textures.register":"Creates a new texture with the given name, width and height. The texture is filled with a solid color. Returns the texture.","figura.docs.textures.read":"Reads a texture from a base64 string.","figura.docs.textures.get":"Gets a registered texture based on its name, or nil if no texture was found with that name.","figura.docs.textures.get_textures":"Returns a table with all textures used by this avatar. Do not include generated textures from this API.","figura.docs.texture":"A texture object, either generated by the model or created with the TextureAPI.","figura.docs.texture.get_name":"Returns this texture name.","figura.docs.texture.get_dimensions":"Returns a vector of this texture width and height.","figura.docs.texture.get_pixel":"Gets the RGBA color from the specified pixel.","figura.docs.texture.set_pixel":"Sets the RGBA color of the specified pixel.","figura.docs.texture.fill":"Sets the RGBA color of the entire specified region.","figura.docs.texture.update":"Updates the texture to the gpu, applying all the changes.","figura.docs.texture.restore":"Restores the texture to its original state, before any modifications.","figura.docs.texture.save":"Returns a base64 string representation of this texture.","figura.docs.texture.apply_func":"Calls the given function on the specified area of this texture, it will iterate over each pixel, and their current x, y and color will be given as arguments, the color in a RGBA vec4 format, and the return value will set that pixel color. Invalid return values or nil takes no effects.","figura.docs.vanilla_model":'A global API that provides functions to interact with the vanilla player model and its parts. Accessed using the name "vanilla_model".',"figura.docs.vanilla_model.head":"The head of the player, not including the hat.","figura.docs.vanilla_model.body":"The body of the player, not including the outer layer.","figura.docs.vanilla_model.left_arm":"The left arm of the player, not including the outer layer.","figura.docs.vanilla_model.right_arm":"The right arm of the player, not including the outer layer.","figura.docs.vanilla_model.left_leg":"The left leg of the player, not including the outer layer.","figura.docs.vanilla_model.right_leg":"The right leg of the player, not including the outer layer.","figura.docs.vanilla_model.hat":"The outer layer of the player's head.","figura.docs.vanilla_model.jacket":"The outer layer of the player's body.","figura.docs.vanilla_model.left_sleeve":"The outer layer of the player's left arm.","figura.docs.vanilla_model.right_sleeve":"The outer layer of the player's right arm.","figura.docs.vanilla_model.left_pants":"The outer layer of the player's left leg.","figura.docs.vanilla_model.right_pants":"The outer layer of the player's right leg.","figura.docs.vanilla_model.cape":"Multi-part: The player's cape.","figura.docs.vanilla_model.cape_model":"The vanilla cape model.","figura.docs.vanilla_model.fake_cape":"A custom copy of the cape, as attempt of storing its transformations since vanilla cape math is... weird.","figura.docs.vanilla_model.helmet":"Multi-part: The helmet model.","figura.docs.vanilla_model.helmet_item":"The item on the armor head slot.","figura.docs.vanilla_model.helmet_head":"The head of the helmet model.","figura.docs.vanilla_model.helmet_hat":"The hat of the helmet model.","figura.docs.vanilla_model.chestplate":"Multi-part: The chestplate model.","figura.docs.vanilla_model.chestplate_body":"The body of the chestplate model.","figura.docs.vanilla_model.chestplate_left_arm":"The left arm of the chestplate model.","figura.docs.vanilla_model.chestplate_right_arm":"The right arm of the chestplate model.","figura.docs.vanilla_model.leggings":"Multi-part: The leggings model.","figura.docs.vanilla_model.leggings_body":"The body of the leggings model.","figura.docs.vanilla_model.leggings_left_leg":"The left leg of the leggings model.","figura.docs.vanilla_model.leggings_right_leg":"The right leg of the leggings model.","figura.docs.vanilla_model.boots":"Multi-part: The boots model.","figura.docs.vanilla_model.boots_left_leg":"The left boot of the boots model.","figura.docs.vanilla_model.boots_right_leg":"The right boot of the boots model.","figura.docs.vanilla_model.elytra":"Multi-part: The elytra model.","figura.docs.vanilla_model.left_elytra":"The left wing of the elytra model.","figura.docs.vanilla_model.right_elytra":"The right wing of the elytra model.","figura.docs.vanilla_model.held_items":"Multi-part: Items in the player's hands.","figura.docs.vanilla_model.left_item":"The item in the player's left hand.","figura.docs.vanilla_model.right_item":"The item in the player's right hand.","figura.docs.vanilla_model.parrots":"Multi-part: Parrots on the player's shoulders.","figura.docs.vanilla_model.left_parrot":"The Parrot in the player's left shoulder.","figura.docs.vanilla_model.right_parrot":"The Parrot in the player's right shoulder.","figura.docs.vanilla_model.all":"Multi-part: The entirety of the vanilla model.","figura.docs.vanilla_model.outer_layer":"Multi-part: The outer layer of the player.","figura.docs.vanilla_model.inner_layer":"Multi-part: The main body of the player, everything except the outer layer.","figura.docs.vanilla_model.armor":"Multi-part: All armor on the model.","figura.docs.vanilla_model.player":"Multi-part: Both the outer and inner layers of the player's skin, as well as the cape.","figura.docs.vanilla_part":"Represents a model part in a vanilla model. Can be set visible and invisible, and queried for rotation and position offsets.","figura.docs.vanilla_part.set_visible":"Sets this part to be visible or invisible.","figura.docs.vanilla_part.get_visible":"Gets whether you have set this part to be visible or invisible. Only responds to your own changes in script, not anything done by Minecraft.","figura.docs.vanilla_part.get_origin_visible":"Gets if this vanilla model part is visible or not, without interference from your script.","figura.docs.vanilla_part.get_origin_rot":"Gets the rotation to this vanilla model part currently applied by Minecraft.","figura.docs.vanilla_part.get_origin_pos":"Gets the position offset to this vanilla model part currently applied by Minecraft.","figura.docs.vanilla_group":"Represents a group of model parts in a vanilla model. Used for easy reference of normal parts. Can only be set visible and invisible.","figura.docs.vanilla_group.set_visible":"Sets this parts to be visible or invisible.","figura.docs.vanilla_group.get_visible":"Gets whether you have set this parts to be visible or invisible. Only responds to your own changes in script, not anything done by Minecraft.","figura.docs.vectors":'A global API which provides functions dedicated to creating and otherwise manipulating vectors. Accessed using the name "vectors".',"figura.docs.vectors.vec":'Creates and returns a vector of the appropriate size to hold the arguments passed in. For example, if you call vec(3, 4, 0, 2), then the function will return a Vector4 containing those values. There is a global alias "vec" for this function, meaning the "vectors." can be omitted.',"figura.docs.vectors.vec2":"Creates and returns a Vector2 with the given values. Nil values become zero.","figura.docs.vectors.vec3":"Creates and returns a Vector3 with the given values. Nil values become zero.","figura.docs.vectors.vec4":"Creates and returns a Vector4 with the given values. Nil values become zero.","figura.docs.vectors.vec5":"Creates and returns a Vector5 with the given values. Nil values become zero.","figura.docs.vectors.vec6":"Creates and returns a Vector6 with the given values. Nil values become zero.","figura.docs.vectors.rgb_to_int":"Converts the given color from RGB format to Integer format.","figura.docs.vectors.int_to_rgb":"Converts the given color from Integer format to RGB format.","figura.docs.vectors.hex_to_rgb":'Parses a Hex string color into a RGB format vector. The hex "#" is optional, and it can have any length, however only the first 6 hex digits are evaluated, short hex (length 3) is also supported. For example, "#42" is the same as "420000", and "F0B" is the same as "FF00BB"',"figura.docs.vectors.hsv_to_rgb":"Converts the given color from HSV format to RGB format.","figura.docs.vectors.rgb_to_hsv":"Converts the given color from RGB format to HSV format.","figura.docs.vectors.rgb_to_hex":'Converts the given color from RGB format to Hex format. The "#" is not included on the return value.',"figura.docs.vectors.rotate_around_axis":"Rotates a vector relative to a rotation vector.","figura.docs.vectors.to_camera_space":"Converts a position in the world into a position relative to the viewer's camera.","figura.docs.vectors.world_to_screen_space":"Converts a position in the world into a position relative to the viewer's screen.","figura.docs.vector2":'A vector that holds 2 numbers. Can be created using functions in the "vectors" api.',"figura.docs.vector3":'A vector that holds 3 numbers. Can be created using functions in the "vectors" api.',"figura.docs.vector4":'A vector that holds 4 numbers. Can be created using functions in the "vectors" api.',"figura.docs.vector5":'A vector that holds 5 numbers. Can be created using functions in the "vectors" api.',"figura.docs.vector6":'A vector that holds 6 numbers. Can be created using functions in the "vectors" api.',"figura.docs.vector_n.x":'The first coordinate of this vector. Can also be gotten with the indices "r" and [1].',"figura.docs.vector_n.y":'The second coordinate of this vector. Can also be gotten with the indices "g" and [2].',"figura.docs.vector_n.z":'The third coordinate of this vector. Can also be gotten with the indices "b" and [3].',"figura.docs.vector_n.w":'The fourth coordinate of this vector. Can also be gotten with the indices "a" and [4].',"figura.docs.vector_n.t":"The fifth coordinate of this vector. Can also be gotten with the index [5].","figura.docs.vector_n.h":"The sixth coordinate of this vector. Can also be gotten with the index [6].","figura.docs.vector_n.reset":"Resets this vector back to being all zeroes, and returns itself for chaining.","figura.docs.vector_n.set":"Sets this vector to have the given values. Nil values are treated as zero. Returns self for chaining.","figura.docs.vector_n.add":"Adds the given vector or values to this one, and returns self for chaining.","figura.docs.vector_n.sub":"Subtracts the given vector or values from this one, and returns self for chaining.","figura.docs.vector_n.offset":"Offsets this vector by the given factor, adding the factor to all components, and returns self for chaining.","figura.docs.vector_n.mul":"Multiplies the given vector or values into this one, and returns self for chaining.","figura.docs.vector_n.div":"Divides this vector by the given vector or values, and returns self for chaining.","figura.docs.vector_n.reduce":"Reduces this vector modulo the given vector or values, and returns self for chaining.","figura.docs.vector_n.scale":"Scales this vector by the given factor, and returns self for chaining.","figura.docs.vector_n.unpack":"Returns each of this vector values as argument.","figura.docs.vector_n.transform":"Transforms this vector by the given matrix, and returns self for chaining.","figura.docs.vector_n.length_squared":"Returns the length of this vector squared. Suitable when you only care about relative lengths, because it avoids a square root.","figura.docs.vector_n.copy":"Creates and returns a copy of this vector.","figura.docs.vector_n.dot":"Returns the dot product of this vector with the other.","figura.docs.vector_n.normalize":"Modifies this vector so that its length is 1, unless its length was originally 0. Returns self for chaining.","figura.docs.vector_n.normalized":"Returns a copy of this vector with length 1, unless its length was originally 0.","figura.docs.vector_n.clamp_length":"Modifies this vector so that its length is between minLength and maxLength. If the vector has length zero, it is unmodified. Returns self for chaining.","figura.docs.vector_n.clamped":"Returns a modified copy of this vector, with its length clamped from minLength to maxLength. If the vector has length zero, then the copy does too.","figura.docs.vector_n.length":"Returns the length of this vector.","figura.docs.vector_n.to_rad":"Returns a copy of this vector, in radians.","figura.docs.vector_n.to_deg":"Returns a copy of this vector, in degrees.","figura.docs.vector_n.floor":"Returns a copy of this vector with its values rounded down.","figura.docs.vector_n.ceil":"Returns a copy of this vector with its values rounded up.","figura.docs.vector_n.apply_func":"Calls the given function on each element of this vector, and sets the values of the vector to the returns. The current index and its value is given as arguments of the function. Returns self for chaining.","figura.docs.vector3.cross":"Sets this vector to the cross product of itself and the other vector. Returns self for chaining.","figura.docs.vector3.crossed":"Returns a new vector which is the cross product of this and the other one.","figura.docs.vector3.augmented":"Returns the augmented form of this vector. The augmented form is Vector4 with a 1 in its W coordinate.","figura.docs.world":'A global API dedicated to reading information from the Minecraft world. Accessed using the name "world".',"figura.docs.world.get_biome":"Gets the Biome located at the given position.","figura.docs.world.get_blockstate":"Gets the BlockState of the block at the given position.","figura.docs.world.get_redstone_power":"Gets the redstone power level of the block at the given position.","figura.docs.world.get_strong_redstone_power":"Gets the direct redstone power level of the block at the given position.","figura.docs.world.get_time":"Gets the current game time of the world. If delta is passed in, then it adds delta to the time. The default value of delta is zero.","figura.docs.world.get_time_of_day":"Gets the current day time of the world. If delta is passed in, then it adds delta to the time. The default value of delta is zero.","figura.docs.world.get_moon_phase":"Gets the current moon phase of the world, stored as an integer.","figura.docs.world.get_rain_gradient":"Gets the current rain gradient in the world, interpolated from the previous tick to the current one. The default value of delta is 1, which is the current tick.","figura.docs.world.is_thundering":"Gets whether or not there is currently thunder/lightning happening in the world.","figura.docs.world.get_light_level":"Gets the overall light level of the block at the given position.","figura.docs.world.get_sky_light_level":"Gets the sky light level of the block at the given position.","figura.docs.world.get_block_light_level":"Gets the block light level of the block at the given position.","figura.docs.world.is_open_sky":"Gets whether or not the sky is open at the given position.","figura.docs.world.get_entity":"Returns an EntityAPI object from this UUID's entity, or nil if no entity was found.","figura.docs.world.get_players":"Returns a table containing instances of Player for all players in the world. The players are indexed by their names.","figura.docs.world.player_vars":"Returns a table from all players in the world containing variables stored from their Avatar api's store() function. The players are indexed by their names.","figura.docs.world.new_block":"Parses and create a new BlockState from the given string. A world position can be optionally given for the blockstate functions that relies on its position.","figura.docs.world.new_item":"Parses and create a new ItemStack from the given string. A count and damage can be given, to be applied on this itemstack.","figura.docs.world.exists":"Checks whether or not a world currently exists. This will almost always be true, but might be false on some occasions such as while travelling between dimensions."},ru_ru:async()=>(await e(()=>import("./_docs_v-rc-10_ru_ru-1104e6ff.js"),[],import.meta.url)).default,en_uwu:async()=>(await e(()=>import("./_docs_v-rc-10_en_uwu-ed2694f1.js"),[],import.meta.url)).default}};export{a as default};
